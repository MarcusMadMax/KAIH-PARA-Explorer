%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: NZ-EPS-01-1002.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Ted
%%CreationDate: 3/4/2014
%%BoundingBox: 0 0 720 540
%%HiResBoundingBox: 0 0 720 540
%%CropBox: 0 0 720 540
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:17:08        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">nz_assets</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2014-03-04T20:53:10-07:00</xap:CreateDate>
         <xap:ModifyDate>2014-03-04T20:53:13-07:00</xap:ModifyDate>
         <xap:MetadataDate>2014-03-04T20:53:13-07:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>192</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Q4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FVk0KTRPE9eLih4kqd/AihGKpLaXkOhoLDUJaJy/0a5c/bTYfGT+2O/ji&#xA;qcW13a3UQltpUmjYAh0IYUYVHTxBxVVxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksd86eWLfW7FHdZHltKukcbULDqyqD8PJqUBpiryjQ/NWpaJ&#xA;ezi1jIimcBrV6llCsKKGPxVCjj/DFXuGm3yX1hBeIpRZ0DhG+0teoNPDFUTirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYR5z8jWl9L9etwYZJJE&#xA;a5eNanao5U2pWvxH2B8cVRfkvV5eVxoU9ZbjTQqrcFSgcMCVDVqeVBUnFWS201w8s6SoFEb0iZTU&#xA;MpG1fA+OKq+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KtMqspVgCpFCDuCDirB54JfLWuapqpPKzmijMUfNFJRF4UVW48ijcQKtvXucVdqHmowSadq&#xA;lshazu5Vt70ECN/UBVkZhvT4W/htirOQQRUbg9DirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSHzxYS3nlu8EMghniQyJISFFF3ZSzEBQwHWuKvC&#xA;429OURyu3oBx6oiYbgEVK/snptir2LQvzD0F4obO9uPq9yoCVkDBDQCjc6Uo3VSfppirL1dHUOjB&#xA;kO4YGoP04qwnUvzS0+2vPTt7Z7mBJmglcEK5ZR1jU/aFdv8AMYqzWGT1Ikk4lOahuLdRUVocVXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUq813kln5dv7qM&#xA;AyRRFlBFRWo6jwxV4HHaXc4MkUDupNKohIr1psMVRcFrcXli0sgUJCQsdwzItOIqUapDHYinXpQY&#xA;q1ptxqjI9vBczR2oHKZI2elPAKOpPYYqutJpZdXsoRCIxFPGqwKtDUMqnl0qx4ipxV9C4q7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVsjrHG0jGioCzH2AqcVe&#xA;U+bPzPGo2tzp2n23G2lon1mQ/Ey1qfgpQV9zirELq49O/t7o77JL9XBA4DqEUjYAruvhXFVaPT0Q&#xA;XVrLMsSs3ONmBL8ImIL8Qp24ljsQdvDFV2maXq3mG9Fjpyloo1BCu3GNEQcebbkAnvTvir0nyd5O&#xA;utC1NmvRFcmaOkU0YJ4mMihbkBxNDQEYqzbFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq4iux6YqwrzF+WGjXsE8ump9Uv3PNPiPpE9wV34g+2KvPfMflPXNHt&#xA;4HvIC0aLR7lKMgq1FUkb7di3y7YqlGnhi8vDjz9JgvIgfb+A05bVo3+ZxVl35UT30XmGa2iUelLE&#xA;TdcwfhEZ2/2VTTFXsGKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxVKPMvmWw0Cx+s3NXdjxihX7TE4qitK1S11C3EsE8c9VVj6RqByHQ7n3xVFrLG0jxqavHTmP&#xA;CoqMVSTzxKI/K99tykZAsKheRMlQVoN9xSuKvDm0zUAafVpDUAgqpYUIBG4+eKvZvIWgtp+li8uE&#xA;Vb6/AmmoCGHLehJJO/UjpXFWUYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXnH5qzRfXdOhidTdMkgnjcAp6BZXq+1RQx123xVjfk/zQmh3WprbR8oJ4yYpX34&#xA;GOvFm+ySDXYeNBiqceW/PN5qeqx2d25ikuJiySrIsSheJ4xt8DFt+lKb/dirI/PnlrXtctYre0lj&#xA;McbqwjY8KkK3Jn2PenEDFWD+TvIWp6nfpPdxm3sLeQGRnBBkKmpVARv03OKvaAAAABQDYAYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUFrd59S0e9u96wQSOK&#xA;dahSRirwP9IXF3cXEt7dO01xGUM8nJv2g1DSpAIFNhirctnPFaGJaNKXUzxoSzBTtHWm1Kk9D3GK&#xA;pr5S0AalrUVkjSK8Y53F1E+yLt8KlR17V5ePzxV7kihEVRWigAV3O2Kt4q7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXEgAkmgHU4qwLz/5rie0bSNMmLXU4PKS&#xA;Ktao6/ACPEV39sVeXr6NqA4dJrj9lV5FYyKfETsGNelKj54qpW73huVa3aQ3LE8TGW5knrSm+Kva&#xA;Py40CTSdBDXMXp3l0xkkBHxBeiqfoFcVZVirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVU7m5t7W3kuLiQRQxKWkkbYADqcVedeavzGiu4pLPRpXjj4n1r2lBSh&#xA;NF6Ny2ovTfFXnNxeNI0hTkPVJMru3J2r/MwC7YqoIvJgtQKmlTsPvxVmHkj19I1FdQurJ3tYiwlu&#xA;VCyBQ0dQyhEdzseobjir2Czu4ru2S4iDBHrQOCrDiSpqDuNxiqtirsVdirsVdirsVdirsVdirsVQ&#xA;8l/aRziB3pKeihWPh4D3xVEYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUp8zeYLfQtLkvZVLsKL&#xA;HGBWrE038Birx7V9e1aaaX6/fPc0cPFbc2UK57sEO3DcU5Vr7Yqlkssk+nKEUBIpGMqJ25KoVmrU&#xA;mp5bn5eGKoHFXpH5d+TNM1PTBqOoR+qgkZYo91JoKNyIPxL4D54q9Nht4IIVghjWOFBxSNQAoHgA&#xA;MVXgBRQCgHQDFXYq7FXYq7FXYq7FXYq7FXYq7FUPdWENzLbyyM4NsxdAjsgJIp8QUiuKq8fqcF9S&#xA;nOnxcelfauKt4q7FXYq7FXYq7FXYq7FXYq7FXYq7FVO5uI7eB5pK8EFTQVJ7AAe+KvDvOmv3up6o&#xA;8c7A/VWkjVkqAVLdge1APn174qkt6had5kU+nIBMKbhQ53FafssePzxVRjkmhkDxs0ci/ZZSVIr7&#xA;jFUQXsWT1uBWUE8oKng1aUK0A4qN6ivhTFXsH5Y2ksHlhJHQxrcytLFGTUBSAKr3ANO9cVZbirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVY95xvJYrSKGNZS8h&#xA;aRWiRm3jFQDxK9SelRXtvirw+9uJri6kllNXJodqUA2Apviq2O4njACOQoJPDqu4oaqdtxiqrfvJ&#xA;IYZHYuHjBEh6k1PKvyaoHtTFVtjY3d9dJa2kTTTyGiogqcVfQWh2cdlpNraRq6pBGI1En2vh23+e&#xA;Ko7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqpXVrBdW72&#xA;8684pBxdakbH3G+KpBD+XXlGKV5Fsg3NShR2Z1Fe6hiaHbqMVYjqf5WWjW0z6Nf/AFm6hejwHiQA&#xA;ei1XcH54qkUvkPzTGj2v1JpiGWWGaMhoyCCGAY03Pwn6MVegeQ/JEehw/XLsctTkBBINQiH9kUxV&#xA;l+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVxrQ03&#xA;PYHbFWO6T5bvrbW7rVpbpFN2Qz2qRKKUHHiXqSaAYqyLFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq0CTWoIoaCtN/fbFW8VdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdiq15Y0KBzQu3FPc0Jp+GKrsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdiqFuLWWS8t51ccIa1U+437dfpxVFYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq41oaG&#xA;h7HFWKzaJ58e4VI/MEUVhwjD0tlaeqxBZKOdvjkXlXrQmlKDFVSy0HzekEZuPMFbhpIpZlECOoA5&#xA;maJWbjVXZxQ8VIp4bBVuHQ/OUaiE+YxJEIuIle0iMvqeqjciQQp/dhkpTvXtiqyPQvPHA+r5lT1W&#xA;tZYiyWcfEXDIVimCluiO3Pj3oATiq2PRvzCF1Jy8xWzWnpkRL9SX1fUMZXkW58aK9GHwnw7fEqnW&#xA;nWWrwTu95qJu43DAQmKNAp5kqVZAp+xs1a77inTFX//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:4F9607F718A4E31184469EFD3D1A8E02</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:509607F718A4E31184469EFD3D1A8E02</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:4E9607F718A4E31184469EFD3D1A8E02</stRef:instanceID>
            <stRef:documentID>uuid:4D9607F718A4E31184469EFD3D1A8E02</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>720.000000</stDim:w>
            <stDim:h>540.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Roboto-Light</stFnt:fontName>
                  <stFnt:fontFamily>Roboto</stFnt:fontFamily>
                  <stFnt:fontFace>Light</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.00000; 2011</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Roboto-Light.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Maps</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Sea</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>204</xapG:red>
                           <xapG:green>219</xapG:green>
                           <xapG:blue>229</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>River</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>147</xapG:red>
                           <xapG:green>182</xapG:green>
                           <xapG:blue>198</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Land</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>244</xapG:red>
                           <xapG:green>244</xapG:green>
                           <xapG:blue>244</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Country</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>249</xapG:red>
                           <xapG:green>241</xapG:green>
                           <xapG:blue>228</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Border</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>163</xapG:red>
                           <xapG:green>163</xapG:green>
                           <xapG:blue>163</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Marker</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>188</xapG:red>
                           <xapG:green>81</xapG:green>
                           <xapG:blue>81</xapG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Text</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>51</xapG:red>
                           <xapG:green>51</xapG:green>
                           <xapG:blue>51</xapG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -540 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 540 li
720 540 li
720 0 li
cp
clp
[1 0 0 1 0 0 ]ct
720 540 mo
0 540 li
0 0 li
720 0 li
720 540 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0156863 .00784314 .00784314 0 cmyk
f
363.524 266.963 mo
363.29 266.969 li
363.055 267.011 li
362.908 267.102 li
362.813 267.264 li
362.748 267.441 li
362.656 267.627 li
362.489 267.765 li
362.247 267.822 li
361.86 267.616 li
361.415 267.182 li
360.73 266.16 li
360.406 265.437 li
359.987 264.183 li
359.706 263.675 li
359.355 263.295 li
358.869 263.041 li
358.521 262.999 li
357.906 263.062 li
357.63 262.999 li
357.395 262.879 li
357.166 262.73 li
356.998 262.65 li
356.841 262.529 li
356.662 262.323 li
356.428 261.94 li
356.191 261.665 li
355.809 261.541 li
355.09 261.63 li
354.752 261.588 li
354.435 261.397 li
354.127 261.014 li
353.873 260.544 li
353.727 259.976 li
353.658 259.542 li
353.53 259.172 li
353.27 258.922 li
353 258.812 li
352.686 258.637 li
352.399 258.38 li
352.07 257.811 li
351.858 257.372 li
351.736 257.045 li
351.772 255.56 li
352.292 255.098 li
352.46 254.66 li
352.612 253.876 li
352.562 253.13 li
352.405 252.613 li
352.287 252.34 li
352.124 252.065 li
352.041 251.818 li
351.994 251.619 li
351.98 251.111 li
352.048 250.804 li
352.217 250.484 li
352.659 250.081 li
353.014 249.857 li
353.43 249.687 li
354.66 249.511 li
354.895 249.335 li
354.857 248.931 li
354.733 248.538 li
354.762 248.149 li
354.995 247.837 li
355.565 247.636 li
355.941 247.43 li
356.193 247.098 li
356.388 246.4 li
356.518 245.653 li
356.611 244.429 li
356.688 244.009 li
356.871 243.684 li
357.932 242.917 li
358.11 242.521 li
358.147 242.173 li
358.089 241.873 li
357.763 241.498 li
357.689 241.281 li
357.782 241.117 li
358.14 240.897 li
358.45 240.794 li
358.754 240.759 li
359.745 241.023 li
360.184 241.023 li
360.607 240.874 li
361.009 240.583 li
361.417 240.059 li
361.646 239.618 li
361.646 239.028 li
361.56 238.531 li
361.528 238.019 li
361.56 237.667 li
361.541 237.374 li
361.425 237.188 li
360.996 236.792 li
360.964 236.545 li
361.184 236.319 li
362.843 235.685 li
363.842 234.738 li
363.896 234.491 li
363.784 234.291 li
363.52 234.036 li
363.01 233.749 li
361.704 233.412 li
361.328 233.265 li
360.973 233.053 li
359.723 232.012 li
359.362 231.827 li
359.053 231.726 li
358.807 231.606 li
358.568 231.396 li
358.31 231.037 li
358.07 230.792 li
357.883 230.524 li
357.715 230.191 li
357.505 229.86 li
357.134 229.584 li
356.808 229.48 li
356.268 229.485 li
355.555 229.617 li
355.293 229.563 li
355.012 229.459 li
354.78 229.462 li
354.592 229.597 li
354.217 230.232 li
353.918 230.285 li
353.652 230.034 li
353.409 229.135 li
353.471 228.651 li
353.652 228.293 li
353.813 228.129 li
354.027 227.743 li
354.092 227.379 li
353.989 227.004 li
353.624 226.614 li
353.251 226.362 li
352.908 226.063 li
352.633 225.698 li
352.346 225.155 li
352.041 224.788 li
351.129 224.139 li
350.798 223.689 li
350.119 221.646 li
349.958 221.359 li
349.957 221.359 li
349.924 221.356 li
349.766 221.433 li
349.689 221.623 li
349.643 221.821 li
349.585 221.96 li
349.428 222.03 li
349.262 222.029 li
349.098 222.05 li
348.952 222.207 li
348.921 222.34 li
348.928 222.66 li
348.87 222.831 li
348.39 223.567 li
348.163 224.173 li
348.021 224.357 li
347.813 224.438 li
347.497 224.455 li
347.317 224.692 li
347.399 225.229 li
347.704 226.179 li
348.254 229.485 li
348.672 231.065 li
348.675 231.347 li
348.569 232.039 li
348.571 232.408 li
349.358 235.76 li
349.565 236.134 li
350.199 236.989 li
349.897 236.999 li
349.626 237.13 li
349.419 237.267 li
349.31 237.308 li
349.056 237.226 li
348.981 237.515 li
349.025 238.248 li
349.121 238.904 li
349.131 239.26 li
348.893 239.847 li
348.887 240.132 li
348.959 240.431 li
349.1 240.712 li
348.61 240.89 li
347.94 241.316 li
347.368 241.827 li
347.155 242.272 li
347.191 242.634 li
347.168 242.959 li
347.087 243.252 li
346.929 243.523 li
346.823 243.625 li
346.757 243.669 li
346.73 243.74 li
346.797 244.367 li
346.736 244.481 li
346.625 244.503 li
346.517 244.658 li
345.909 246.542 li
345.646 247.051 li
345.44 247.265 li
345.215 247.424 li
345.048 247.605 li
344.997 248.313 li
344.765 248.38 li
344.42 248.321 li
344.062 248.396 li
343.872 248.564 li
343.356 249.237 li
341.23 250.615 li
340.073 251.094 li
339.888 251.108 li
339.415 251.076 li
337.712 251.301 li
336.176 251.094 li
335.828 251.36 li
336.107 252.782 li
336.169 252.954 li
336.315 253.176 li
336.462 252.952 li
336.685 253.294 li
336.373 254.44 li
336.305 255.425 li
336.058 256.02 li
335.971 257.914 li
335.844 258.601 li
335.572 259.134 li
334.884 260.081 li
334.801 260.322 li
334.679 261.064 li
334.688 261.735 li
334.44 262.846 li
334.568 267.282 li
334.282 268.642 li
333.366 270.324 li
333.33 271.021 li
333.763 271.623 li
334.571 271.844 li
336.204 271.76 li
336.841 271.586 li
337.362 271.262 li
336.511 272.258 li
333.735 272.275 li
333.25 272.422 li
332.833 272.969 li
331.641 276.234 li
331.24 276.475 li
330.807 277.532 li
330.488 278.087 li
330.13 278.32 li
329.893 278.433 li
329.705 278.688 li
329.442 279.257 li
329.318 279.64 li
329.409 279.857 li
329.971 280.284 li
330.516 280.996 li
330.751 281.656 li
330.87 282.323 li
331.08 283.057 li
331.209 283.335 li
331.364 283.576 li
331.601 283.819 li
331.952 284.099 li
332.454 284.412 li
332.635 284.592 li
332.779 284.9 li
331.442 284.055 li
331.214 283.782 li
330.866 283.548 li
330.256 283.469 li
329.865 283.655 li
330.177 284.202 li
330.775 284.968 li
331.364 286.088 li
331.623 287.157 li
331.254 287.788 li
330.896 286.239 li
330.638 285.511 li
329.496 283.923 li
329.713 283.469 li
330.267 283.152 li
330.652 282.662 li
330.562 281.97 li
330.169 281.143 li
329.632 280.459 li
329.097 280.17 li
328.453 280.11 li
328.227 280.19 li
327.958 280.483 li
326.435 283.771 li
326.073 284.099 li
325.661 284.34 li
324.985 285.506 li
324.63 285.942 li
323.796 286.355 li
323.556 286.559 li
323.299 286.888 li
323.296 287.058 li
323.43 287.259 li
323.86 288.389 li
324.675 289.447 li
324.904 290.247 li
324.208 289.5 li
323.36 288.197 li
322.483 287.174 li
321.713 287.276 li
320.876 287.965 li
318.785 288.671 li
317.89 289.223 li
320.18 290.043 li
321.255 290.688 li
322.1 291.678 li
321.567 291.217 li
318.2 289.638 li
317.527 289.554 li
317.538 290.059 li
316.96 289.856 li
316.627 290.122 li
316.363 290.555 li
315.978 290.863 li
316.23 291.144 li
316.685 291.203 li
316.939 291.473 li
316.234 291.678 li
313.751 291.678 li
313.795 291.902 li
316.213 292.752 li
316.983 293.338 li
317.597 294.059 li
317.843 294.513 li
317.852 295.007 li
317.935 295.564 li
317.937 295.792 li
317.76 296.387 li
317.756 296.633 li
317.604 296.633 li
317.317 296.014 li
317.127 294.787 li
316.936 294.157 li
316.633 293.635 li
316.224 293.148 li
315.715 292.836 li
315.135 292.586 li
314.079 292.371 li
313.074 292.783 li
312.399 293.67 li
312.168 294.972 li
312.689 294.6 li
313.093 293.816 li
313.6 293.201 li
314.418 293.338 li
313.238 295.607 li
312.938 295.539 li
312.345 295.245 li
312.047 295.178 li
311.664 295.237 li
311.352 295.383 li
310.8 295.792 li
310.241 296.021 li
310.031 296.211 li
309.925 296.633 li
309.932 297.117 li
310.063 297.309 li
310.33 297.439 li
310.748 297.754 li
311.241 298.374 li
311.502 298.933 li
311.362 299.135 li
310.652 298.677 li
309.468 297.676 li
308.96 297.575 li
308.9 298.369 li
308.673 298.843 li
305.643 300.302 li
305.177 300.693 li
304.77 301.254 li
304.736 301.905 li
305.319 302.259 li
306.173 302.396 li
306.942 302.38 li
307.55 302.244 li
307.842 302.241 li
308.124 302.38 li
307.105 302.751 li
306.646 302.827 li
305.99 302.811 li
304.555 302.591 li
303.93 302.697 li
303.529 303.22 li
304.625 303.705 li
305.184 304.074 li
305.479 304.541 li
305.692 305.49 li
305.584 305.636 li
305.11 305.266 li
304.458 304.234 li
304.043 303.851 li
303.501 303.925 li
303.206 304.308 li
302.583 305.437 li
302.236 305.674 li
301.757 305.802 li
300.648 306.695 li
300.112 306.749 li
299.07 306.554 li
298.338 307.128 li
297.394 307.38 li
297.089 307.703 li
297.042 308.331 li
297.308 308.929 li
297.746 309.48 li
298.22 309.972 li
298.053 309.972 li
297.479 309.818 li
297.157 309.312 li
296.938 308.683 li
296.66 308.13 li
296.405 307.893 li
296.181 307.841 li
295.522 307.906 li
295.292 307.98 li
295.018 308.168 li
294.799 308.407 li
294.732 308.641 li
294.529 309.08 li
293.916 309.4 li
292.74 309.766 li
291.154 310.837 li
290.695 310.995 li
290.292 311.223 li
289.548 312.223 li
289.131 312.447 li
288.901 312.52 li
288.299 312.9 li
288.146 313.063 li
288.101 313.308 li
288.193 313.517 li
288.687 314.086 li
289.475 315.186 li
289.968 315.71 li
290.493 315.931 li
291.026 316.068 li
292.484 316.813 li
293.009 317.174 li
292.428 317.216 li
290.901 316.376 li
290.193 316.152 li
289.889 316.108 li
289.5 315.977 li
289.143 315.752 li
288.162 314.086 li
287.739 314.185 li
286.307 314.932 li
285.929 315.221 li
285.537 315.637 li
284.526 316.326 li
283.295 317.641 li
282.095 318.375 li
280.764 318.769 li
279.558 318.61 li
278.951 318.134 li
278.457 317.599 li
277.995 317.396 li
277.489 317.906 li
277.289 317.992 li
276.64 317.93 li
276.336 318.105 li
276.143 318.325 li
275.7 318.643 li
274.942 319.018 li
274.063 319.207 li
272.552 319.297 li
272.082 319.415 li
271.644 319.632 li
272.221 319.984 li
272.403 320.061 li
272.14 320.171 li
271.882 320.33 li
271.65 320.536 li
271.441 320.777 li
271.313 321.137 li
271.315 321.512 li
271.359 321.824 li
271.362 322.009 li
270.732 322.925 li
269.931 323.766 li
268.572 324.678 li
267.861 325.605 li
267.448 325.863 li
266.361 326.206 li
266.403 326.412 li
267.055 326.621 li
267.325 326.883 li
267.325 326.884 li
268.585 326.494 li
269.82 326.428 li
270.763 326.778 li
271.704 327.273 li
272.287 327.775 li
272.923 328.423 li
273.304 329.031 li
273.721 329.555 li
273.651 330.257 li
273.554 330.758 li
273.34 333.165 li
276.366 332.882 li
280.778 330.843 li
282.35 330.646 li
282.963 330.271 li
283.722 329.421 li
284.13 328.664 li
284.449 327.22 li
284.495 326.629 li
284.616 325.986 li
284.975 325.5 li
285.445 325.007 li
286.222 324.564 li
286.908 323.625 li
287.064 323.074 li
287.266 322.778 li
288.279 321.948 li
289.324 321.501 li
290.342 321.353 li
291.566 321.41 li
293.07 321.2 li
293.912 320.768 li
294.643 320.745 li
295.121 321.028 li
295.806 321.33 li
296.648 321.52 li
297.53 321.07 li
298.244 320.512 li
299.189 320.058 li
299.99 319.5 li
300.646 319.163 li
301.026 318.583 li
301.263 317.965 li
301.578 317.438 li
302.177 317.345 li
302.637 317.338 li
303.438 317.725 li
304.489 316.351 li
305.209 315.607 li
305.876 314.738 li
309.195 311.945 li
309.66 310.877 li
310.128 310.346 li
310.433 309.532 li
310.965 308.855 li
311.444 308.04 li
311.653 307.283 li
311.902 306.634 li
312.425 305.962 li
314.068 304.439 li
314.759 304.032 li
317.103 303.252 li
320.118 301.563 li
321.226 301.143 li
322.053 301.029 li
322.497 301.165 li
323.153 301.172 li
325.115 298.79 li
328.896 295.734 li
331.178 294.608 li
331.998 294.046 li
333.108 291.674 li
333.967 291.137 li
334.517 291.18 li
336.376 290.633 li
336.794 290.372 li
337.03 290.056 li
337.07 289.709 li
337.157 289.258 li
337.381 288.699 li
338.273 287.779 li
338.783 287.408 li
339.733 287.043 li
340.538 286.98 li
340.975 286.897 li
341.323 286.69 li
341.775 286.338 li
342.642 286.02 li
342.955 286.008 li
343.21 286.063 li
343.401 286.169 li
343.549 286.184 li
343.724 286.159 li
344.601 285.908 li
345.631 285.839 li
346.512 285.652 li
347.767 285.688 li
348.106 285.483 li
348.316 285.194 li
348.392 284.849 li
348.411 284.447 li
348.561 283.626 li
348.606 282.844 li
348.651 282.523 li
348.759 282.389 li
349.993 282.025 li
351.379 281.204 li
351.364 280.646 li
351.42 280.298 li
351.891 279.663 li
352.334 278.898 li
352.762 278.498 li
353.404 278.039 li
353.765 277.939 li
354.483 277.892 li
354.91 277.746 li
355.508 277.439 li
356.131 276.877 li
356.58 275.669 li
357.565 274.873 li
357.771 274.553 li
357.956 274.121 li
358.408 273.646 li
358.582 273.361 li
358.751 272.912 li
359.061 272.547 li
360.4 271.475 li
361.493 270.468 li
362.174 270.173 li
362.625 270.078 li
363.223 269.836 li
363.478 269.524 li
363.562 269.176 li
363.583 268.84 li
363.81 268.245 li
363.896 267.902 li
363.946 267.607 li
363.981 267.024 li
363.524 266.963 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
.25 lw
1 lc
1 lj
4 ml
[] 0 dsh
true sadj
363.524 266.963 mo
363.29 266.969 li
363.055 267.011 li
362.908 267.102 li
362.813 267.264 li
362.748 267.441 li
362.656 267.627 li
362.489 267.765 li
362.247 267.822 li
361.86 267.616 li
361.415 267.182 li
360.73 266.16 li
360.406 265.437 li
359.987 264.183 li
359.706 263.675 li
359.355 263.295 li
358.869 263.041 li
358.521 262.999 li
357.906 263.062 li
357.63 262.999 li
357.395 262.879 li
357.166 262.73 li
356.998 262.65 li
356.841 262.529 li
356.662 262.323 li
356.428 261.94 li
356.191 261.665 li
355.809 261.541 li
355.09 261.63 li
354.752 261.588 li
354.435 261.397 li
354.127 261.014 li
353.873 260.544 li
353.727 259.976 li
353.658 259.542 li
353.53 259.172 li
353.27 258.922 li
353 258.812 li
352.686 258.637 li
352.399 258.38 li
352.07 257.811 li
351.858 257.372 li
351.736 257.045 li
351.772 255.56 li
352.292 255.098 li
352.46 254.66 li
352.612 253.876 li
352.562 253.13 li
352.405 252.613 li
352.287 252.34 li
352.124 252.065 li
352.041 251.818 li
351.994 251.619 li
351.98 251.111 li
352.048 250.804 li
352.217 250.484 li
352.659 250.081 li
353.014 249.857 li
353.43 249.687 li
354.66 249.511 li
354.895 249.335 li
354.857 248.931 li
354.733 248.538 li
354.762 248.149 li
354.995 247.837 li
355.565 247.636 li
355.941 247.43 li
356.193 247.098 li
356.388 246.4 li
356.518 245.653 li
356.611 244.429 li
356.688 244.009 li
356.871 243.684 li
357.932 242.917 li
358.11 242.521 li
358.147 242.173 li
358.089 241.873 li
357.763 241.498 li
357.689 241.281 li
357.782 241.117 li
358.14 240.897 li
358.45 240.794 li
358.754 240.759 li
359.745 241.023 li
360.184 241.023 li
360.607 240.874 li
361.009 240.583 li
361.417 240.059 li
361.646 239.618 li
361.646 239.028 li
361.56 238.531 li
361.528 238.019 li
361.56 237.667 li
361.541 237.374 li
361.425 237.188 li
360.996 236.792 li
360.964 236.545 li
361.184 236.319 li
362.843 235.685 li
363.842 234.738 li
363.896 234.491 li
363.784 234.291 li
363.52 234.036 li
363.01 233.749 li
361.704 233.412 li
361.328 233.265 li
360.973 233.053 li
359.723 232.012 li
359.362 231.827 li
359.053 231.726 li
358.807 231.606 li
358.568 231.396 li
358.31 231.037 li
358.07 230.792 li
357.883 230.524 li
357.715 230.191 li
357.505 229.86 li
357.134 229.584 li
356.808 229.48 li
356.268 229.485 li
355.555 229.617 li
355.293 229.563 li
355.012 229.459 li
354.78 229.462 li
354.592 229.597 li
354.217 230.232 li
353.918 230.285 li
353.652 230.034 li
353.409 229.135 li
353.471 228.651 li
353.652 228.293 li
353.813 228.129 li
354.027 227.743 li
354.092 227.379 li
353.989 227.004 li
353.624 226.614 li
353.251 226.362 li
352.908 226.063 li
352.633 225.698 li
352.346 225.155 li
352.041 224.788 li
351.129 224.139 li
350.798 223.689 li
350.119 221.646 li
349.958 221.359 li
349.957 221.359 li
349.924 221.356 li
349.766 221.433 li
349.689 221.623 li
349.643 221.821 li
349.585 221.96 li
349.428 222.03 li
349.262 222.029 li
349.098 222.05 li
348.952 222.207 li
348.921 222.34 li
348.928 222.66 li
348.87 222.831 li
348.39 223.567 li
348.163 224.173 li
348.021 224.357 li
347.813 224.438 li
347.497 224.455 li
347.317 224.692 li
347.399 225.229 li
347.704 226.179 li
348.254 229.485 li
348.672 231.065 li
348.675 231.347 li
348.569 232.039 li
348.571 232.408 li
349.358 235.76 li
349.565 236.134 li
350.199 236.989 li
349.897 236.999 li
349.626 237.13 li
349.419 237.267 li
349.31 237.308 li
349.056 237.226 li
348.981 237.515 li
349.025 238.248 li
349.121 238.904 li
349.131 239.26 li
348.893 239.847 li
348.887 240.132 li
348.959 240.431 li
349.1 240.712 li
348.61 240.89 li
347.94 241.316 li
347.368 241.827 li
347.155 242.272 li
347.191 242.634 li
347.168 242.959 li
347.087 243.252 li
346.929 243.523 li
346.823 243.625 li
346.757 243.669 li
346.73 243.74 li
346.797 244.367 li
346.736 244.481 li
346.625 244.503 li
346.517 244.658 li
345.909 246.542 li
345.646 247.051 li
345.44 247.265 li
345.215 247.424 li
345.048 247.605 li
344.997 248.313 li
344.765 248.38 li
344.42 248.321 li
344.062 248.396 li
343.872 248.564 li
343.356 249.237 li
341.23 250.615 li
340.073 251.094 li
339.888 251.108 li
339.415 251.076 li
337.712 251.301 li
336.176 251.094 li
335.828 251.36 li
336.107 252.782 li
336.169 252.954 li
336.315 253.176 li
336.462 252.952 li
336.685 253.294 li
336.373 254.44 li
336.305 255.425 li
336.058 256.02 li
335.971 257.914 li
335.844 258.601 li
335.572 259.134 li
334.884 260.081 li
334.801 260.322 li
334.679 261.064 li
334.688 261.735 li
334.44 262.846 li
334.568 267.282 li
334.282 268.642 li
333.366 270.324 li
333.33 271.021 li
333.763 271.623 li
334.571 271.844 li
336.204 271.76 li
336.841 271.586 li
337.362 271.262 li
336.511 272.258 li
333.735 272.275 li
333.25 272.422 li
332.833 272.969 li
331.641 276.234 li
331.24 276.475 li
330.807 277.532 li
330.488 278.087 li
330.13 278.32 li
329.893 278.433 li
329.705 278.688 li
329.442 279.257 li
329.318 279.64 li
329.409 279.857 li
329.971 280.284 li
330.516 280.996 li
330.751 281.656 li
330.87 282.323 li
331.08 283.057 li
331.209 283.335 li
331.364 283.576 li
331.601 283.819 li
331.952 284.099 li
332.454 284.412 li
332.635 284.592 li
332.779 284.9 li
331.442 284.055 li
331.214 283.782 li
330.866 283.548 li
330.256 283.469 li
329.865 283.655 li
330.177 284.202 li
330.775 284.968 li
331.364 286.088 li
331.623 287.157 li
331.254 287.788 li
330.896 286.239 li
330.638 285.511 li
329.496 283.923 li
329.713 283.469 li
330.267 283.152 li
330.652 282.662 li
330.562 281.97 li
330.169 281.143 li
329.632 280.459 li
329.097 280.17 li
328.453 280.11 li
328.227 280.19 li
327.958 280.483 li
326.435 283.771 li
326.073 284.099 li
325.661 284.34 li
324.985 285.506 li
324.63 285.942 li
323.796 286.355 li
323.556 286.559 li
323.299 286.888 li
323.296 287.058 li
323.43 287.259 li
323.86 288.389 li
324.675 289.447 li
324.904 290.247 li
324.208 289.5 li
323.36 288.197 li
322.483 287.174 li
321.713 287.276 li
320.876 287.965 li
318.785 288.671 li
317.89 289.223 li
320.18 290.043 li
321.255 290.688 li
322.1 291.678 li
321.567 291.217 li
318.2 289.638 li
317.527 289.554 li
317.538 290.059 li
316.96 289.856 li
316.627 290.122 li
316.363 290.555 li
315.978 290.863 li
316.23 291.144 li
316.685 291.203 li
316.939 291.473 li
316.234 291.678 li
313.751 291.678 li
313.795 291.902 li
316.213 292.752 li
316.983 293.338 li
317.597 294.059 li
317.843 294.513 li
317.852 295.007 li
317.935 295.564 li
317.937 295.792 li
317.76 296.387 li
317.756 296.633 li
317.604 296.633 li
317.317 296.014 li
317.127 294.787 li
316.936 294.157 li
316.633 293.635 li
316.224 293.148 li
315.715 292.836 li
315.135 292.586 li
314.079 292.371 li
313.074 292.783 li
312.399 293.67 li
312.168 294.972 li
312.689 294.6 li
313.093 293.816 li
313.6 293.201 li
314.418 293.338 li
313.238 295.607 li
312.938 295.539 li
312.345 295.245 li
312.047 295.178 li
311.664 295.237 li
311.352 295.383 li
310.8 295.792 li
310.241 296.021 li
310.031 296.211 li
309.925 296.633 li
309.932 297.117 li
310.063 297.309 li
310.33 297.439 li
310.748 297.754 li
311.241 298.374 li
311.502 298.933 li
311.362 299.135 li
310.652 298.677 li
309.468 297.676 li
308.96 297.575 li
308.9 298.369 li
308.673 298.843 li
305.643 300.302 li
305.177 300.693 li
304.77 301.254 li
304.736 301.905 li
305.319 302.259 li
306.173 302.396 li
306.942 302.38 li
307.55 302.244 li
307.842 302.241 li
308.124 302.38 li
307.105 302.751 li
306.646 302.827 li
305.99 302.811 li
304.555 302.591 li
303.93 302.697 li
303.529 303.22 li
304.625 303.705 li
305.184 304.074 li
305.479 304.541 li
305.692 305.49 li
305.584 305.636 li
305.11 305.266 li
304.458 304.234 li
304.043 303.851 li
303.501 303.925 li
303.206 304.308 li
302.583 305.437 li
302.236 305.674 li
301.757 305.802 li
300.648 306.695 li
300.112 306.749 li
299.07 306.554 li
298.338 307.128 li
297.394 307.38 li
297.089 307.703 li
297.042 308.331 li
297.308 308.929 li
297.746 309.48 li
298.22 309.972 li
298.053 309.972 li
297.479 309.818 li
297.157 309.312 li
296.938 308.683 li
296.66 308.13 li
296.405 307.893 li
296.181 307.841 li
295.522 307.906 li
295.292 307.98 li
295.018 308.168 li
294.799 308.407 li
294.732 308.641 li
294.529 309.08 li
293.916 309.4 li
292.74 309.766 li
291.154 310.837 li
290.695 310.995 li
290.292 311.223 li
289.548 312.223 li
289.131 312.447 li
288.901 312.52 li
288.299 312.9 li
288.146 313.063 li
288.101 313.308 li
288.193 313.517 li
288.687 314.086 li
289.475 315.186 li
289.968 315.71 li
290.493 315.931 li
291.026 316.068 li
292.484 316.813 li
293.009 317.174 li
292.428 317.216 li
290.901 316.376 li
290.193 316.152 li
289.889 316.108 li
289.5 315.977 li
289.143 315.752 li
288.162 314.086 li
287.739 314.185 li
286.307 314.932 li
285.929 315.221 li
285.537 315.637 li
284.526 316.326 li
283.295 317.641 li
282.095 318.375 li
280.764 318.769 li
279.558 318.61 li
278.951 318.134 li
278.457 317.599 li
277.995 317.396 li
277.489 317.906 li
277.289 317.992 li
276.64 317.93 li
276.336 318.105 li
276.143 318.325 li
275.7 318.643 li
274.942 319.018 li
274.063 319.207 li
272.552 319.297 li
272.082 319.415 li
271.644 319.632 li
272.221 319.984 li
272.403 320.061 li
272.14 320.171 li
271.882 320.33 li
271.65 320.536 li
271.441 320.777 li
271.313 321.137 li
271.315 321.512 li
271.359 321.824 li
271.362 322.009 li
270.732 322.925 li
269.931 323.766 li
268.572 324.678 li
267.861 325.605 li
267.448 325.863 li
266.361 326.206 li
266.403 326.412 li
267.055 326.621 li
267.325 326.883 li
267.325 326.884 li
268.585 326.494 li
269.82 326.428 li
270.763 326.778 li
271.704 327.273 li
272.287 327.775 li
272.923 328.423 li
273.304 329.031 li
273.721 329.555 li
273.651 330.257 li
273.554 330.758 li
273.34 333.165 li
276.366 332.882 li
280.778 330.843 li
282.35 330.646 li
282.963 330.271 li
283.722 329.421 li
284.13 328.664 li
284.449 327.22 li
284.495 326.629 li
284.616 325.986 li
284.975 325.5 li
285.445 325.007 li
286.222 324.564 li
286.908 323.625 li
287.064 323.074 li
287.266 322.778 li
288.279 321.948 li
289.324 321.501 li
290.342 321.353 li
291.566 321.41 li
293.07 321.2 li
293.912 320.768 li
294.643 320.745 li
295.121 321.028 li
295.806 321.33 li
296.648 321.52 li
297.53 321.07 li
298.244 320.512 li
299.189 320.058 li
299.99 319.5 li
300.646 319.163 li
301.026 318.583 li
301.263 317.965 li
301.578 317.438 li
302.177 317.345 li
302.637 317.338 li
303.438 317.725 li
304.489 316.351 li
305.209 315.607 li
305.876 314.738 li
309.195 311.945 li
309.66 310.877 li
310.128 310.346 li
310.433 309.532 li
310.965 308.855 li
311.444 308.04 li
311.653 307.283 li
311.902 306.634 li
312.425 305.962 li
314.068 304.439 li
314.759 304.032 li
317.103 303.252 li
320.118 301.563 li
321.226 301.143 li
322.053 301.029 li
322.497 301.165 li
323.153 301.172 li
325.115 298.79 li
328.896 295.734 li
331.178 294.608 li
331.998 294.046 li
333.108 291.674 li
333.967 291.137 li
334.517 291.18 li
336.376 290.633 li
336.794 290.372 li
337.03 290.056 li
337.07 289.709 li
337.157 289.258 li
337.381 288.699 li
338.273 287.779 li
338.783 287.408 li
339.733 287.043 li
340.538 286.98 li
340.975 286.897 li
341.323 286.69 li
341.775 286.338 li
342.642 286.02 li
342.955 286.008 li
343.21 286.063 li
343.401 286.169 li
343.549 286.184 li
343.724 286.159 li
344.601 285.908 li
345.631 285.839 li
346.512 285.652 li
347.767 285.688 li
348.106 285.483 li
348.316 285.194 li
348.392 284.849 li
348.411 284.447 li
348.561 283.626 li
348.606 282.844 li
348.651 282.523 li
348.759 282.389 li
349.993 282.025 li
351.379 281.204 li
351.364 280.646 li
351.42 280.298 li
351.891 279.663 li
352.334 278.898 li
352.762 278.498 li
353.404 278.039 li
353.765 277.939 li
354.483 277.892 li
354.91 277.746 li
355.508 277.439 li
356.131 276.877 li
356.58 275.669 li
357.565 274.873 li
357.771 274.553 li
357.956 274.121 li
358.408 273.646 li
358.582 273.361 li
358.751 272.912 li
359.061 272.547 li
360.4 271.475 li
361.493 270.468 li
362.174 270.173 li
362.625 270.078 li
363.223 269.836 li
363.478 269.524 li
363.562 269.176 li
363.583 268.84 li
363.81 268.245 li
363.896 267.902 li
363.946 267.607 li
363.981 267.024 li
363.524 266.963 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
449.742 222.93 mo
447.458 222.209 li
444.918 222.45 li
440.308 223.409 li
434.998 223.649 li
430.326 223.529 li
432.109 219.054 li
427.464 222.93 li
423.854 223.289 li
421.192 224.009 li
419.54 224.326 li
419.381 224.79 li
419.062 226.179 li
419.095 226.939 li
419.071 227.241 li
418.939 227.617 li
418.766 227.896 li
418.519 228.175 li
418.23 228.381 li
417.954 228.465 li
417.675 228.594 li
417.317 229.149 li
417.049 229.278 li
416.88 229.466 li
417.131 229.866 li
417.489 230.235 li
417.638 230.315 li
417.801 230.723 li
417.858 231.033 li
417.768 231.305 li
417.491 231.578 li
417.036 230.786 li
416.785 230.8 li
416.512 231.153 li
416.001 231.371 li
415.665 231.667 li
415.25 232.962 li
414.696 233.491 li
413.897 234.578 li
413.535 234.916 li
412.428 235.123 li
412.007 235.352 li
411.811 235.953 li
412.212 237.005 li
413.269 237.869 li
414.586 238.447 li
415.768 238.663 li
416.076 238.521 li
416.344 238.248 li
416.6 238.047 li
416.878 238.137 li
417.189 238.326 li
417.451 238.272 li
417.652 238.078 li
417.782 237.837 li
417.833 237.143 li
417.431 236.844 li
416.212 236.575 li
416.28 236.086 li
416.432 235.715 li
416.679 235.412 li
417.031 235.123 li
417.518 234.9 li
418.241 234.782 li
418.931 234.959 li
419.326 235.64 li
419.33 236.417 li
418.964 237.607 li
418.874 238.248 li
419.021 238.988 li
419.274 239.543 li
419.399 240.043 li
419.162 240.62 li
419.253 240.872 li
419.642 241.186 li
420.252 241.556 li
420.669 241.643 li
420.932 241.601 li
421.146 241.435 li
422.187 240.216 li
422.704 239.847 li
423.323 239.698 li
424.015 239.767 li
427.18 240.821 li
427.487 241.033 li
427.655 241.361 li
427.604 243.612 li
427.69 244.039 li
427.914 244.41 li
428.176 244.718 li
428.345 245.05 li
428.28 245.503 li
428.727 245.804 li
429.107 246.748 li
429.534 246.948 li
431.43 246.783 li
431.812 246.63 li
432.51 245.78 li
432.878 245.501 li
434.498 244.878 li
439.414 240.936 li
440.776 240.247 li
441.908 239.418 li
442.696 238.52 li
446.09 235.64 li
448.145 232.387 li
448.506 231.237 li
448.896 228.465 li
449.082 227.829 li
449.413 227.133 li
449.862 226.58 li
451.038 226.105 li
451.334 225.518 li
451.527 224.08 li
449.742 222.93 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
449.742 222.93 mo
447.458 222.209 li
444.918 222.45 li
440.308 223.409 li
434.998 223.649 li
430.326 223.529 li
432.109 219.054 li
427.464 222.93 li
423.854 223.289 li
421.192 224.009 li
419.54 224.326 li
419.381 224.79 li
419.062 226.179 li
419.095 226.939 li
419.071 227.241 li
418.939 227.617 li
418.766 227.896 li
418.519 228.175 li
418.23 228.381 li
417.954 228.465 li
417.675 228.594 li
417.317 229.149 li
417.049 229.278 li
416.88 229.466 li
417.131 229.866 li
417.489 230.235 li
417.638 230.315 li
417.801 230.723 li
417.858 231.033 li
417.768 231.305 li
417.491 231.578 li
417.036 230.786 li
416.785 230.8 li
416.512 231.153 li
416.001 231.371 li
415.665 231.667 li
415.25 232.962 li
414.696 233.491 li
413.897 234.578 li
413.535 234.916 li
412.428 235.123 li
412.007 235.352 li
411.811 235.953 li
412.212 237.005 li
413.269 237.869 li
414.586 238.447 li
415.768 238.663 li
416.076 238.521 li
416.344 238.248 li
416.6 238.047 li
416.878 238.137 li
417.189 238.326 li
417.451 238.272 li
417.652 238.078 li
417.782 237.837 li
417.833 237.143 li
417.431 236.844 li
416.212 236.575 li
416.28 236.086 li
416.432 235.715 li
416.679 235.412 li
417.031 235.123 li
417.518 234.9 li
418.241 234.782 li
418.931 234.959 li
419.326 235.64 li
419.33 236.417 li
418.964 237.607 li
418.874 238.248 li
419.021 238.988 li
419.274 239.543 li
419.399 240.043 li
419.162 240.62 li
419.253 240.872 li
419.642 241.186 li
420.252 241.556 li
420.669 241.643 li
420.932 241.601 li
421.146 241.435 li
422.187 240.216 li
422.704 239.847 li
423.323 239.698 li
424.015 239.767 li
427.18 240.821 li
427.487 241.033 li
427.655 241.361 li
427.604 243.612 li
427.69 244.039 li
427.914 244.41 li
428.176 244.718 li
428.345 245.05 li
428.28 245.503 li
428.727 245.804 li
429.107 246.748 li
429.534 246.948 li
431.43 246.783 li
431.812 246.63 li
432.51 245.78 li
432.878 245.501 li
434.498 244.878 li
439.414 240.936 li
440.776 240.247 li
441.908 239.418 li
442.696 238.52 li
446.09 235.64 li
448.145 232.387 li
448.506 231.237 li
448.896 228.465 li
449.082 227.829 li
449.413 227.133 li
449.862 226.58 li
451.038 226.105 li
451.334 225.518 li
451.527 224.08 li
449.742 222.93 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
447.246 149.726 mo
446.499 149.113 li
442.396 147.432 li
442.054 147.036 li
441.737 146.535 li
441.205 145.827 li
440.757 144.965 li
440.362 143.628 li
439.876 142.326 li
439.803 141.625 li
439.346 141.13 li
438.095 140.069 li
436.223 139.771 li
435.411 139.339 li
434.763 138.775 li
434.358 137.899 li
433.469 137.531 li
433.025 137.486 li
432.608 137.394 li
432.263 136.882 li
431.703 135.549 li
431.812 134.825 li
431.729 134.119 li
430.92 133.264 li
430.69 132.87 li
430.048 130.327 li
428.865 128.132 li
428.104 127.125 li
427.459 126.014 li
427.323 125.075 li
426.792 124.205 li
426.761 123.476 li
426.898 122.969 li
426.545 122.383 li
426.158 121.997 li
426.294 121.496 li
426.541 121.063 li
427.351 121.47 li
428.224 121.716 li
428.24 121.306 li
427.576 120.799 li
427.616 120.251 li
428.053 120.03 li
428.488 119.187 li
428.457 118.006 li
429.437 117.59 li
429.359 117.364 li
429.105 116.1 li
428.7 114.862 li
428.385 114.282 li
428.049 113.989 li
427.13 113.583 li
427.431 113.225 li
427.325 112.671 li
427.048 111.981 li
426.836 111.188 li
427.03 111.188 li
427.188 111.533 li
427.37 111.848 li
427.593 112.097 li
427.859 112.267 li
427.684 111.85 li
427.606 110.931 li
427.473 110.539 li
427.237 110.428 li
426.888 110.369 li
426.617 110.267 li
426.612 109.999 li
426.954 109.285 li
427.227 108.451 li
427.218 107.655 li
426.683 107.063 li
426.552 107.323 li
426.297 107.66 li
426.043 107.835 li
425.889 107.617 li
425.958 107.289 li
426.127 106.939 li
426.248 106.599 li
426.16 106.287 li
426.129 106.104 li
426.093 105.098 li
425.753 103.586 li
425.592 103.169 li
425.449 102.918 li
424.986 102.401 li
424.831 102.061 li
424.766 101.242 li
424.628 100.895 li
423.979 100.413 li
422.96 100.639 li
422.361 100.346 li
422.078 100.773 li
422.399 101.768 li
422.031 102.098 li
422.1 102.442 li
421.895 102.458 li
421.562 102.262 li
421.24 101.977 li
421.146 101.727 li
421.214 101.494 li
421.205 101.266 li
420.867 101.015 li
421.167 100.354 li
421.508 99.7969 li
421.797 99.5337 li
422.427 99.2715 li
422.733 99.0522 li
423.117 98.125 li
423.222 97.9702 li
423.96 98.0664 li
424.21 97.9556 li
424.299 97.5376 li
424.184 97.0127 li
423.921 97.0459 li
423.597 97.2441 li
423.305 97.1929 li
422.918 96.8164 li
422.574 96.6724 li
422.212 96.6987 li
421.764 96.8682 li
421.198 97.3862 li
420.843 97.5688 li
420.512 97.417 li
420.198 97.1982 li
419.833 97.1387 li
419.524 97.2471 li
419.381 97.5376 li
419.539 97.5718 li
419.926 97.7334 li
418.989 98.542 li
418.618 98.4526 li
418.327 97.5376 li
418.369 97.2153 li
418.504 96.9038 li
418.552 96.5747 li
418.343 96.2188 li
418.05 96.1318 li
417.324 96.2422 li
417.013 96.1108 li
416.814 95.748 li
416.87 95.4771 li
417.111 95.4097 li
417.481 95.6782 li
417.766 95.8174 li
417.786 95.4048 li
417.62 94.6016 li
417.326 93.7666 li
416.849 93.6172 li
416.264 93.6069 li
415.673 93.1743 li
416.161 92.5508 li
416.106 91.7373 li
415.713 90.939 li
415.174 90.3462 li
414.592 91.0981 li
414.327 91.0654 li
413.737 90.563 li
413.517 90.4438 li
413.405 90.3462 li
413.335 90.2485 li
413.205 89.999 li
413.014 89.7124 li
412.874 89.4575 li
412.687 89.3008 li
411.857 89.481 li
411.21 89.3677 li
410.692 89.3677 li
410.536 89.8164 li
410.757 91.0366 li
410.948 91.5571 li
411.218 91.9766 li
411.691 92.3662 li
412.696 92.7261 li
413.184 92.9785 li
413.727 93.6333 li
413.812 93.7148 li
413.958 93.9937 li
414.229 94.0962 li
414.526 94.1479 li
414.756 94.2568 li
414.969 94.9722 li
414.73 95.7397 li
414.65 96.583 li
415.349 97.5376 li
415.227 97.8569 li
415.28 98.1821 li
415.448 98.5063 li
415.663 98.8154 li
415.773 98.6606 li
416.146 98.3774 li
416.368 99.1558 li
415.988 99.5317 li
414.741 99.8926 li
414.907 99.9595 li
415.069 100.052 li
415.25 100.122 li
415.472 100.129 li
415.349 100.449 li
415.095 100.585 li
414.785 100.66 li
414.482 100.779 li
414.86 100.972 li
415.267 101.034 li
416.102 101.015 li
415.79 101.551 li
415.229 101.559 li
414.6 101.448 li
414.083 101.644 li
414.446 101.943 li
414.618 102.262 li
414.74 102.597 li
414.938 102.937 li
415.243 103.226 li
415.946 103.691 li
416.296 104 li
416.59 104.371 li
416.814 104.739 li
417.658 106.689 li
417.804 106.945 li
417.978 107.338 li
418.153 109.007 li
418.292 109.468 li
418.854 110.42 li
418.959 110.823 li
419.301 111.667 li
419.532 112.671 li
419.743 113.14 li
420.057 113.472 li
420.47 113.583 li
420.039 113.886 li
419.574 113.811 li
419.189 113.434 li
418.975 112.808 li
418.905 112.1 li
418.786 111.765 li
418.559 111.621 li
418.21 111.688 li
418.092 111.85 li
418.036 112.063 li
417.856 112.267 li
416.924 112.746 li
415.793 113.042 li
414.646 113.009 li
413.655 112.483 li
413.199 112.006 li
412.729 111.41 li
412.348 110.725 li
412.14 109.999 li
412.188 107.794 li
412.124 107.063 li
411.998 106.599 li
411.823 106.226 li
410.51 106.958 li
409.614 106.445 li
409.209 107.642 li
408.87 109.351 li
409.009 111.572 li
406.699 111.914 li
403.88 112.597 li
401.198 113.28 li
399.072 113.964 li
397.681 114.989 li
396.219 115.222 li
396.844 116.347 li
397.294 116.931 li
397.923 117.41 li
398.263 117.232 li
398.831 115.941 li
399.016 115.729 li
399.475 115.415 li
399.697 115.205 li
400.028 115.029 li
400.311 115.156 li
400.465 115.387 li
400.427 115.508 li
399.842 115.76 li
399.582 116.373 li
399.449 117.093 li
399.247 117.688 li
398.982 117.873 li
398.256 118.062 li
397.988 118.236 li
397.807 118.617 li
397.847 118.957 li
398.308 120.407 li
400.237 123.909 li
402.675 130.111 li
403.176 130.614 li
403.911 130.263 li
404.098 130.325 li
404.262 130.425 li
404.367 130.455 li
404.475 130.309 li
404.525 129.952 li
404.63 129.807 li
405.608 129.161 li
405.852 129.639 li
405.815 130.07 li
405.588 130.43 li
405.27 130.692 li
405.526 130.743 li
405.749 130.872 li
405.933 131.067 li
406.064 131.339 li
404.716 131.557 li
403.27 131.57 li
402.116 132.005 li
401.62 133.491 li
401.823 136.485 li
401.992 137.065 li
402.762 137.565 li
403.028 137.168 li
403.151 136.426 li
403.501 135.884 li
404.094 135.945 li
404.468 136.485 li
404.519 137.095 li
404.136 137.388 li
403.451 138.271 li
403.142 138.414 li
402.895 138.455 li
402.688 138.563 li
402.501 138.891 li
402.434 139.235 li
402.413 139.744 li
402.506 140.2 li
402.781 140.4 li
403.182 140.318 li
403.321 140.097 li
403.378 139.785 li
403.521 139.425 li
404.018 139.287 li
404.761 139.505 li
405.333 139.975 li
405.343 140.598 li
405.56 140.831 li
405.73 140.66 li
405.92 140.595 li
406.4 140.598 li
406.024 141.262 li
405.314 141.313 li
404.512 141.213 li
403.871 141.458 li
404.459 141.984 li
404.668 142.12 li
404.188 142.375 li
403.796 142.151 li
403.427 141.744 li
402.998 141.458 li
403.06 141.908 li
402.899 141.908 li
402.713 141.729 li
402.504 141.487 li
402.332 141.185 li
402.252 140.831 li
401.868 140.997 li
401.405 141.087 li
400.924 141.043 li
400.492 140.831 li
400.434 141.303 li
400.634 141.844 li
400.924 142.416 li
401.125 142.982 li
401.185 143.643 li
401.08 144.766 li
401.198 146.617 li
401.165 147.832 li
400.991 148.938 li
400.362 150.926 li
400.309 152.1 li
400.975 157.521 li
400.964 158.069 li
400.865 158.534 li
400.855 159.009 li
401.099 159.566 li
400.725 159.673 li
400.692 159.777 li
402.617 160.668 li
404.872 160.807 li
405.359 160.67 li
405.732 160.764 li
406.071 161.025 li
406.603 161.52 li
407.367 161.962 li
408.184 161.438 li
409.098 161.118 li
409.038 160.843 li
409.071 160.579 li
409.568 159.562 li
409.364 158.965 li
409.522 158.566 li
411.07 158.27 li
411.607 158.005 li
412.087 157.57 li
412.369 157.519 li
412.661 157.648 li
412.862 157.473 li
413.126 157.3 li
414.163 157.348 li
415.208 157.535 li
415.815 157.469 li
416.76 156.922 li
417.14 156.55 li
417.451 156.379 li
417.692 156.284 li
417.692 155.916 li
417.778 155.577 li
418.263 155.229 li
418.744 155.614 li
419.345 155.594 li
420.819 155.25 li
422.377 155.256 li
423.331 155.831 li
424.435 156.294 li
425.19 156.058 li
425.851 155.603 li
426.224 155.968 li
425.938 156.862 li
425.317 157.657 li
425.14 158.702 li
424.739 160 li
424.021 161.354 li
424.59 162.209 li
425.409 162.812 li
425.542 163.719 li
425.187 164.579 li
425.438 165.354 li
426.007 165.913 li
426.116 166.412 li
425.965 166.81 li
425.898 167.955 li
426.863 168.448 li
427.677 168.323 li
428.502 168.375 li
428.606 169.058 li
428.284 169.93 li
427.93 170.541 li
427.878 171.255 li
428.271 171.762 li
428.574 172.39 li
428.463 173.824 li
428.091 175.142 li
427.66 176.284 li
427.93 177.51 li
430.214 178.131 li
432.532 178.103 li
433.602 178.22 li
434.533 177.741 li
434.775 177.365 li
434.82 176.881 li
434.959 176.416 li
435.17 175.989 li
435.288 175.579 li
435.543 175.227 li
436.509 174.865 li
437.069 174.068 li
437.119 173.9 li
437.243 173.806 li
438.332 173.662 li
440.276 173.74 li
441.691 173.246 li
442.409 173.459 li
443.476 171.962 li
444.388 170.036 li
443.532 167.197 li
443.041 166.767 li
442.491 167.091 li
441.685 166.932 li
440.94 166.332 li
440.042 165.153 li
439.24 163.89 li
438.906 163.467 li
438.935 162.435 li
439.083 161.724 li
439.594 161.744 li
441.381 162.371 li
441.906 162.177 li
442.305 161.721 li
441.574 160.536 li
440.412 159.378 li
440.541 158.144 li
440.972 156.798 li
440.519 156.339 li
438.305 155.514 li
436.78 155.132 li
436.42 154.463 li
436.574 153.766 li
436.939 153.69 li
437.263 153.581 li
437.44 153.12 li
437.697 152.725 li
438.266 152.076 li
438.804 152.5 li
439.369 152.785 li
439.975 153.428 li
440.136 153.567 li
440.988 153.564 li
441.389 153.506 li
441.777 153.352 li
441.991 153.185 li
442.345 152.815 li
442.563 152.708 li
442.903 152.708 li
443.267 152.838 li
443.563 153.091 li
443.719 153.458 li
443.717 153.84 li
443.611 154.099 li
443.24 154.531 li
443.121 154.897 li
443.101 155.233 li
443.514 155.472 li
444.14 155.517 li
444.677 155.242 li
444.874 154.563 li
444.973 153.908 li
445.375 153.583 li
446.995 154.298 li
447.393 153.442 li
447.64 150.961 li
447.246 149.726 li
cp
421.975 92.9966 mo
422.193 93.0508 li
422.371 93.1743 li
422.434 93.293 li
422.457 93.4009 li
422.447 93.4995 li
422.42 93.5864 li
422.366 93.7256 li
422.343 93.8467 li
422.423 93.9546 li
422.757 94.1094 li
422.972 94.1689 li
423.081 94.1792 li
423.249 94.187 li
423.415 94.1709 li
423.569 94.1279 li
423.725 94.061 li
423.561 93.7466 li
423.369 93.5376 li
423.138 93.4268 li
422.846 93.3906 li
422.469 92.5615 li
422.267 92.3091 li
421.595 92.5249 li
421.762 92.8706 li
421.975 92.9966 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
447.246 149.726 mo
446.499 149.113 li
442.396 147.432 li
442.054 147.036 li
441.737 146.535 li
441.205 145.827 li
440.757 144.965 li
440.362 143.628 li
439.876 142.326 li
439.803 141.625 li
439.346 141.13 li
438.095 140.069 li
436.223 139.771 li
435.411 139.339 li
434.763 138.775 li
434.358 137.899 li
433.469 137.531 li
433.025 137.486 li
432.608 137.394 li
432.263 136.882 li
431.703 135.549 li
431.812 134.825 li
431.729 134.119 li
430.92 133.264 li
430.69 132.87 li
430.048 130.327 li
428.865 128.132 li
428.104 127.125 li
427.459 126.014 li
427.323 125.075 li
426.792 124.205 li
426.761 123.476 li
426.898 122.969 li
426.545 122.383 li
426.158 121.997 li
426.294 121.496 li
426.541 121.063 li
427.351 121.47 li
428.224 121.716 li
428.24 121.306 li
427.576 120.799 li
427.616 120.251 li
428.053 120.03 li
428.488 119.187 li
428.457 118.006 li
429.437 117.59 li
429.359 117.364 li
429.105 116.1 li
428.7 114.862 li
428.385 114.282 li
428.049 113.989 li
427.13 113.583 li
427.431 113.225 li
427.325 112.671 li
427.048 111.981 li
426.836 111.188 li
427.03 111.188 li
427.188 111.533 li
427.37 111.848 li
427.593 112.097 li
427.859 112.267 li
427.684 111.85 li
427.606 110.931 li
427.473 110.539 li
427.237 110.428 li
426.888 110.369 li
426.617 110.267 li
426.612 109.999 li
426.954 109.285 li
427.227 108.451 li
427.218 107.655 li
426.683 107.063 li
426.552 107.323 li
426.297 107.66 li
426.043 107.835 li
425.889 107.617 li
425.958 107.289 li
426.127 106.939 li
426.248 106.599 li
426.16 106.287 li
426.129 106.104 li
426.093 105.098 li
425.753 103.586 li
425.592 103.169 li
425.449 102.918 li
424.986 102.401 li
424.831 102.061 li
424.766 101.242 li
424.628 100.895 li
423.979 100.413 li
422.96 100.639 li
422.361 100.346 li
422.078 100.773 li
422.399 101.768 li
422.031 102.098 li
422.1 102.442 li
421.895 102.458 li
421.562 102.262 li
421.24 101.977 li
421.146 101.727 li
421.214 101.494 li
421.205 101.266 li
420.867 101.015 li
421.167 100.354 li
421.508 99.7969 li
421.797 99.5337 li
422.427 99.2715 li
422.733 99.0522 li
423.117 98.125 li
423.222 97.9702 li
423.96 98.0664 li
424.21 97.9556 li
424.299 97.5376 li
424.184 97.0127 li
423.921 97.0459 li
423.597 97.2441 li
423.305 97.1929 li
422.918 96.8164 li
422.574 96.6724 li
422.212 96.6987 li
421.764 96.8682 li
421.198 97.3862 li
420.843 97.5688 li
420.512 97.417 li
420.198 97.1982 li
419.833 97.1387 li
419.524 97.2471 li
419.381 97.5376 li
419.539 97.5718 li
419.926 97.7334 li
418.989 98.542 li
418.618 98.4526 li
418.327 97.5376 li
418.369 97.2153 li
418.504 96.9038 li
418.552 96.5747 li
418.343 96.2188 li
418.05 96.1318 li
417.324 96.2422 li
417.013 96.1108 li
416.814 95.748 li
416.87 95.4771 li
417.111 95.4097 li
417.481 95.6782 li
417.766 95.8174 li
417.786 95.4048 li
417.62 94.6016 li
417.326 93.7666 li
416.849 93.6172 li
416.264 93.6069 li
415.673 93.1743 li
416.161 92.5508 li
416.106 91.7373 li
415.713 90.939 li
415.174 90.3462 li
414.592 91.0981 li
414.327 91.0654 li
413.737 90.563 li
413.517 90.4438 li
413.405 90.3462 li
413.335 90.2485 li
413.205 89.999 li
413.014 89.7124 li
412.874 89.4575 li
412.687 89.3008 li
411.857 89.481 li
411.21 89.3677 li
410.692 89.3677 li
410.536 89.8164 li
410.757 91.0366 li
410.948 91.5571 li
411.218 91.9766 li
411.691 92.3662 li
412.696 92.7261 li
413.184 92.9785 li
413.727 93.6333 li
413.812 93.7148 li
413.958 93.9937 li
414.229 94.0962 li
414.526 94.1479 li
414.756 94.2568 li
414.969 94.9722 li
414.73 95.7397 li
414.65 96.583 li
415.349 97.5376 li
415.227 97.8569 li
415.28 98.1821 li
415.448 98.5063 li
415.663 98.8154 li
415.773 98.6606 li
416.146 98.3774 li
416.368 99.1558 li
415.988 99.5317 li
414.741 99.8926 li
414.907 99.9595 li
415.069 100.052 li
415.25 100.122 li
415.472 100.129 li
415.349 100.449 li
415.095 100.585 li
414.785 100.66 li
414.482 100.779 li
414.86 100.972 li
415.267 101.034 li
416.102 101.015 li
415.79 101.551 li
415.229 101.559 li
414.6 101.448 li
414.083 101.644 li
414.446 101.943 li
414.618 102.262 li
414.74 102.597 li
414.938 102.937 li
415.243 103.226 li
415.946 103.691 li
416.296 104 li
416.59 104.371 li
416.814 104.739 li
417.658 106.689 li
417.804 106.945 li
417.978 107.338 li
418.153 109.007 li
418.292 109.468 li
418.854 110.42 li
418.959 110.823 li
419.301 111.667 li
419.532 112.671 li
419.743 113.14 li
420.057 113.472 li
420.47 113.583 li
420.039 113.886 li
419.574 113.811 li
419.189 113.434 li
418.975 112.808 li
418.905 112.1 li
418.786 111.765 li
418.559 111.621 li
418.21 111.688 li
418.092 111.85 li
418.036 112.063 li
417.856 112.267 li
416.924 112.746 li
415.793 113.042 li
414.646 113.009 li
413.655 112.483 li
413.199 112.006 li
412.729 111.41 li
412.348 110.725 li
412.14 109.999 li
412.188 107.794 li
412.124 107.063 li
411.998 106.599 li
411.823 106.226 li
410.51 106.958 li
409.614 106.445 li
409.209 107.642 li
408.87 109.351 li
409.009 111.572 li
406.699 111.914 li
403.88 112.597 li
401.198 113.28 li
399.072 113.964 li
397.681 114.989 li
396.219 115.222 li
396.844 116.347 li
397.294 116.931 li
397.923 117.41 li
398.263 117.232 li
398.831 115.941 li
399.016 115.729 li
399.475 115.415 li
399.697 115.205 li
400.028 115.029 li
400.311 115.156 li
400.465 115.387 li
400.427 115.508 li
399.842 115.76 li
399.582 116.373 li
399.449 117.093 li
399.247 117.688 li
398.982 117.873 li
398.256 118.062 li
397.988 118.236 li
397.807 118.617 li
397.847 118.957 li
398.308 120.407 li
400.237 123.909 li
402.675 130.111 li
403.176 130.614 li
403.911 130.263 li
404.098 130.325 li
404.262 130.425 li
404.367 130.455 li
404.475 130.309 li
404.525 129.952 li
404.63 129.807 li
405.608 129.161 li
405.852 129.639 li
405.815 130.07 li
405.588 130.43 li
405.27 130.692 li
405.526 130.743 li
405.749 130.872 li
405.933 131.067 li
406.064 131.339 li
404.716 131.557 li
403.27 131.57 li
402.116 132.005 li
401.62 133.491 li
401.823 136.485 li
401.992 137.065 li
402.762 137.565 li
403.028 137.168 li
403.151 136.426 li
403.501 135.884 li
404.094 135.945 li
404.468 136.485 li
404.519 137.095 li
404.136 137.388 li
403.451 138.271 li
403.142 138.414 li
402.895 138.455 li
402.688 138.563 li
402.501 138.891 li
402.434 139.235 li
402.413 139.744 li
402.506 140.2 li
402.781 140.4 li
403.182 140.318 li
403.321 140.097 li
403.378 139.785 li
403.521 139.425 li
404.018 139.287 li
404.761 139.505 li
405.333 139.975 li
405.343 140.598 li
405.56 140.831 li
405.73 140.66 li
405.92 140.595 li
406.4 140.598 li
406.024 141.262 li
405.314 141.313 li
404.512 141.213 li
403.871 141.458 li
404.459 141.984 li
404.668 142.12 li
404.188 142.375 li
403.796 142.151 li
403.427 141.744 li
402.998 141.458 li
403.06 141.908 li
402.899 141.908 li
402.713 141.729 li
402.504 141.487 li
402.332 141.185 li
402.252 140.831 li
401.868 140.997 li
401.405 141.087 li
400.924 141.043 li
400.492 140.831 li
400.434 141.303 li
400.634 141.844 li
400.924 142.416 li
401.125 142.982 li
401.185 143.643 li
401.08 144.766 li
401.198 146.617 li
401.165 147.832 li
400.991 148.938 li
400.362 150.926 li
400.309 152.1 li
400.975 157.521 li
400.964 158.069 li
400.865 158.534 li
400.855 159.009 li
401.099 159.566 li
400.725 159.673 li
400.692 159.777 li
402.617 160.668 li
404.872 160.807 li
405.359 160.67 li
405.732 160.764 li
406.071 161.025 li
406.603 161.52 li
407.367 161.962 li
408.184 161.438 li
409.098 161.118 li
409.038 160.843 li
409.071 160.579 li
409.568 159.562 li
409.364 158.965 li
409.522 158.566 li
411.07 158.27 li
411.607 158.005 li
412.087 157.57 li
412.369 157.519 li
412.661 157.648 li
412.862 157.473 li
413.126 157.3 li
414.163 157.348 li
415.208 157.535 li
415.815 157.469 li
416.76 156.922 li
417.14 156.55 li
417.451 156.379 li
417.692 156.284 li
417.692 155.916 li
417.778 155.577 li
418.263 155.229 li
418.744 155.614 li
419.345 155.594 li
420.819 155.25 li
422.377 155.256 li
423.331 155.831 li
424.435 156.294 li
425.19 156.058 li
425.851 155.603 li
426.224 155.968 li
425.938 156.862 li
425.317 157.657 li
425.14 158.702 li
424.739 160 li
424.021 161.354 li
424.59 162.209 li
425.409 162.812 li
425.542 163.719 li
425.187 164.579 li
425.438 165.354 li
426.007 165.913 li
426.116 166.412 li
425.965 166.81 li
425.898 167.955 li
426.863 168.448 li
427.677 168.323 li
428.502 168.375 li
428.606 169.058 li
428.284 169.93 li
427.93 170.541 li
427.878 171.255 li
428.271 171.762 li
428.574 172.39 li
428.463 173.824 li
428.091 175.142 li
427.66 176.284 li
427.93 177.51 li
430.214 178.131 li
432.532 178.103 li
433.602 178.22 li
434.533 177.741 li
434.775 177.365 li
434.82 176.881 li
434.959 176.416 li
435.17 175.989 li
435.288 175.579 li
435.543 175.227 li
436.509 174.865 li
437.069 174.068 li
437.119 173.9 li
437.243 173.806 li
438.332 173.662 li
440.276 173.74 li
441.691 173.246 li
442.409 173.459 li
443.476 171.962 li
444.388 170.036 li
443.532 167.197 li
443.041 166.767 li
442.491 167.091 li
441.685 166.932 li
440.94 166.332 li
440.042 165.153 li
439.24 163.89 li
438.906 163.467 li
438.935 162.435 li
439.083 161.724 li
439.594 161.744 li
441.381 162.371 li
441.906 162.177 li
442.305 161.721 li
441.574 160.536 li
440.412 159.378 li
440.541 158.144 li
440.972 156.798 li
440.519 156.339 li
438.305 155.514 li
436.78 155.132 li
436.42 154.463 li
436.574 153.766 li
436.939 153.69 li
437.263 153.581 li
437.44 153.12 li
437.697 152.725 li
438.266 152.076 li
438.804 152.5 li
439.369 152.785 li
439.975 153.428 li
440.136 153.567 li
440.988 153.564 li
441.389 153.506 li
441.777 153.352 li
441.991 153.185 li
442.345 152.815 li
442.563 152.708 li
442.903 152.708 li
443.267 152.838 li
443.563 153.091 li
443.719 153.458 li
443.717 153.84 li
443.611 154.099 li
443.24 154.531 li
443.121 154.897 li
443.101 155.233 li
443.514 155.472 li
444.14 155.517 li
444.677 155.242 li
444.874 154.563 li
444.973 153.908 li
445.375 153.583 li
446.995 154.298 li
447.393 153.442 li
447.64 150.961 li
447.246 149.726 li
cp
421.975 92.9966 mo
422.193 93.0508 li
422.371 93.1743 li
422.434 93.293 li
422.457 93.4009 li
422.447 93.4995 li
422.42 93.5864 li
422.366 93.7256 li
422.343 93.8467 li
422.423 93.9546 li
422.757 94.1094 li
422.972 94.1689 li
423.081 94.1792 li
423.249 94.187 li
423.415 94.1709 li
423.569 94.1279 li
423.725 94.061 li
423.561 93.7466 li
423.369 93.5376 li
423.138 93.4268 li
422.846 93.3906 li
422.469 92.5615 li
422.267 92.3091 li
421.595 92.5249 li
421.762 92.8706 li
421.975 92.9966 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
379.432 242.59 mo
379.354 241.796 li
379.374 241.14 li
379.338 240.691 li
379.447 239.937 li
378.466 239.52 li
377.36 238.687 li
376.702 237.935 li
376.539 237.559 li
376.231 237.611 li
375.064 237.604 li
374.49 237.485 li
374.012 237.232 li
373.757 236.782 li
373.818 236.556 li
374.22 236.368 li
374.334 236.18 li
374.274 235.943 li
373.829 235.123 li
373.391 233.889 li
373.129 233.499 li
372.922 233.877 li
372.754 233.877 li
372.626 233.531 li
372.451 233.309 li
371.999 232.936 li
371.868 232.67 li
371.863 231.578 li
372.119 231.691 li
372.346 231.882 li
372.541 232.123 li
372.682 232.408 li
372.711 231.913 li
372.446 231.5 li
372.1 231.1 li
371.881 230.636 li
371.757 230.17 li
371.214 228.655 li
370.994 228.798 li
370.811 228.839 li
370.614 228.787 li
370.357 228.655 li
370.916 228.177 li
371.389 227.617 li
371.612 227.22 li
371.635 227.012 li
371.527 226.743 li
371.344 226.179 li
371.378 224.833 li
371.427 224.686 li
371.084 224.23 li
370.743 224.125 li
370.374 224.148 li
369.941 224.08 li
370.198 223.766 li
370.188 223.515 li
369.994 223.23 li
370.034 222.624 li
369.981 222.341 li
369.791 221.96 li
369.364 221.494 li
368.999 221.459 li
368.691 221.736 li
368.438 222.207 li
368.121 221.861 li
367.922 221.837 li
367.578 222.207 li
367.561 222.349 li
367.678 222.746 li
367.594 222.831 li
367.27 222.859 li
367.153 222.913 li
366.617 223.36 li
366.311 223.484 li
365.97 223.376 li
363.55 221.788 li
362.55 220.973 li
362.064 220.105 li
361.568 220.371 li
361.431 220.522 li
361.215 220.03 li
361.374 219.124 li
361.294 218.607 li
361.15 218.468 li
360.701 218.313 li
360.543 218.209 li
360.065 217.394 li
360.504 217.436 li
360.851 217.414 li
360.948 217.174 li
360.617 216.54 li
360.941 216.242 li
361.08 215.661 li
361.153 214.452 li
361.296 213.822 li
361.505 213.515 li
361.883 213.416 li
367.398 213.829 li
367.939 213.614 li
367.104 213.535 li
365.535 213.134 li
363.869 212.94 li
358.911 213.171 li
357.851 213.724 li
357.064 214.867 li
357.401 214.989 li
357.752 214.935 li
358.084 214.746 li
358.355 214.452 li
358.457 214.561 li
358.796 214.867 li
358.819 215.148 li
358.093 215.468 li
358.277 215.913 li
358.144 216.06 li
357.956 216.219 li
357.744 216.309 li
357.302 216.115 li
357.149 216.316 li
357.054 216.6 li
356.951 216.75 li
356.571 216.617 li
356.55 216.278 li
356.798 215.269 li
355.915 215.611 li
354.978 216.6 li
352.925 219.477 li
351.771 220.406 li
351.684 220.522 li
351.399 220.609 li
350.768 221.059 li
350.475 221.344 li
350.296 221.373 li
349.958 221.359 li
350.119 221.646 li
350.798 223.689 li
351.129 224.139 li
352.041 224.788 li
352.346 225.155 li
352.633 225.698 li
352.908 226.063 li
353.251 226.362 li
353.624 226.614 li
353.989 227.004 li
354.092 227.379 li
354.027 227.743 li
353.813 228.129 li
353.652 228.293 li
353.471 228.651 li
353.409 229.135 li
353.652 230.034 li
353.918 230.285 li
354.217 230.232 li
354.592 229.597 li
354.78 229.462 li
355.012 229.459 li
355.293 229.563 li
355.555 229.617 li
356.268 229.485 li
356.808 229.48 li
357.134 229.584 li
357.505 229.86 li
357.715 230.191 li
357.883 230.524 li
358.07 230.792 li
358.31 231.037 li
358.568 231.396 li
358.807 231.606 li
359.053 231.726 li
359.362 231.827 li
359.723 232.012 li
360.973 233.053 li
361.328 233.265 li
361.704 233.412 li
363.01 233.749 li
363.52 234.036 li
363.784 234.291 li
363.896 234.491 li
363.842 234.738 li
362.843 235.685 li
361.184 236.319 li
360.964 236.545 li
360.996 236.792 li
361.425 237.188 li
361.541 237.374 li
361.56 237.667 li
361.528 238.019 li
361.56 238.531 li
361.646 239.028 li
361.646 239.618 li
361.417 240.059 li
361.009 240.583 li
360.607 240.874 li
360.184 241.023 li
359.745 241.023 li
358.754 240.759 li
358.45 240.794 li
358.14 240.897 li
357.782 241.117 li
357.689 241.281 li
357.763 241.498 li
358.089 241.873 li
358.147 242.173 li
358.11 242.521 li
357.932 242.917 li
356.871 243.684 li
356.688 244.009 li
356.611 244.429 li
356.518 245.653 li
356.388 246.4 li
356.193 247.098 li
355.941 247.43 li
355.565 247.636 li
354.995 247.837 li
354.762 248.149 li
354.733 248.538 li
354.857 248.931 li
354.895 249.335 li
354.66 249.511 li
353.43 249.687 li
353.014 249.857 li
352.659 250.081 li
352.217 250.484 li
352.048 250.804 li
351.98 251.111 li
351.994 251.619 li
352.041 251.818 li
352.124 252.065 li
352.287 252.34 li
352.405 252.613 li
352.562 253.13 li
352.612 253.876 li
352.46 254.66 li
352.292 255.098 li
351.772 255.56 li
351.736 257.045 li
351.858 257.372 li
352.07 257.811 li
352.399 258.38 li
352.686 258.637 li
353 258.812 li
353.27 258.922 li
353.53 259.172 li
353.658 259.542 li
353.727 259.976 li
353.873 260.544 li
354.127 261.014 li
354.435 261.397 li
354.752 261.588 li
355.09 261.63 li
355.809 261.541 li
356.191 261.665 li
356.428 261.94 li
356.662 262.323 li
356.841 262.529 li
356.998 262.65 li
357.166 262.73 li
357.395 262.879 li
357.63 262.999 li
357.906 263.062 li
358.521 262.999 li
358.869 263.041 li
359.355 263.295 li
359.706 263.675 li
359.987 264.183 li
360.406 265.437 li
360.73 266.16 li
361.415 267.182 li
361.86 267.616 li
362.247 267.822 li
362.489 267.765 li
362.656 267.627 li
362.748 267.441 li
362.813 267.264 li
362.908 267.102 li
363.055 267.011 li
363.29 266.969 li
363.524 266.963 li
363.981 267.024 li
364.683 266.862 li
365.068 266.605 li
365.48 266.252 li
366.41 265.008 li
366.642 264.36 li
367.021 262.656 li
367.024 262.226 li
367.051 261.916 li
367.216 261.765 li
367.471 261.697 li
367.765 261.705 li
368.054 261.752 li
368.241 261.834 li
368.637 261.906 li
369.057 259.303 li
371.086 256.414 li
371.221 255.836 li
371.224 254.222 li
371.336 253.315 li
372.025 252.145 li
372.371 251.682 li
372.41 251.284 li
372.556 250.812 li
373.829 249.645 li
374.693 248.472 li
375.218 247.378 li
376.857 245.31 li
377.36 244.331 li
378.452 244.036 li
379.049 243.977 li
379.497 243.736 li
379.652 243.266 li
379.432 242.59 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
379.432 242.59 mo
379.354 241.796 li
379.374 241.14 li
379.338 240.691 li
379.447 239.937 li
378.466 239.52 li
377.36 238.687 li
376.702 237.935 li
376.539 237.559 li
376.231 237.611 li
375.064 237.604 li
374.49 237.485 li
374.012 237.232 li
373.757 236.782 li
373.818 236.556 li
374.22 236.368 li
374.334 236.18 li
374.274 235.943 li
373.829 235.123 li
373.391 233.889 li
373.129 233.499 li
372.922 233.877 li
372.754 233.877 li
372.626 233.531 li
372.451 233.309 li
371.999 232.936 li
371.868 232.67 li
371.863 231.578 li
372.119 231.691 li
372.346 231.882 li
372.541 232.123 li
372.682 232.408 li
372.711 231.913 li
372.446 231.5 li
372.1 231.1 li
371.881 230.636 li
371.757 230.17 li
371.214 228.655 li
370.994 228.798 li
370.811 228.839 li
370.614 228.787 li
370.357 228.655 li
370.916 228.177 li
371.389 227.617 li
371.612 227.22 li
371.635 227.012 li
371.527 226.743 li
371.344 226.179 li
371.378 224.833 li
371.427 224.686 li
371.084 224.23 li
370.743 224.125 li
370.374 224.148 li
369.941 224.08 li
370.198 223.766 li
370.188 223.515 li
369.994 223.23 li
370.034 222.624 li
369.981 222.341 li
369.791 221.96 li
369.364 221.494 li
368.999 221.459 li
368.691 221.736 li
368.438 222.207 li
368.121 221.861 li
367.922 221.837 li
367.578 222.207 li
367.561 222.349 li
367.678 222.746 li
367.594 222.831 li
367.27 222.859 li
367.153 222.913 li
366.617 223.36 li
366.311 223.484 li
365.97 223.376 li
363.55 221.788 li
362.55 220.973 li
362.064 220.105 li
361.568 220.371 li
361.431 220.522 li
361.215 220.03 li
361.374 219.124 li
361.294 218.607 li
361.15 218.468 li
360.701 218.313 li
360.543 218.209 li
360.065 217.394 li
360.504 217.436 li
360.851 217.414 li
360.948 217.174 li
360.617 216.54 li
360.941 216.242 li
361.08 215.661 li
361.153 214.452 li
361.296 213.822 li
361.505 213.515 li
361.883 213.416 li
367.398 213.829 li
367.939 213.614 li
367.104 213.535 li
365.535 213.134 li
363.869 212.94 li
358.911 213.171 li
357.851 213.724 li
357.064 214.867 li
357.401 214.989 li
357.752 214.935 li
358.084 214.746 li
358.355 214.452 li
358.457 214.561 li
358.796 214.867 li
358.819 215.148 li
358.093 215.468 li
358.277 215.913 li
358.144 216.06 li
357.956 216.219 li
357.744 216.309 li
357.302 216.115 li
357.149 216.316 li
357.054 216.6 li
356.951 216.75 li
356.571 216.617 li
356.55 216.278 li
356.798 215.269 li
355.915 215.611 li
354.978 216.6 li
352.925 219.477 li
351.771 220.406 li
351.684 220.522 li
351.399 220.609 li
350.768 221.059 li
350.475 221.344 li
350.296 221.373 li
349.958 221.359 li
350.119 221.646 li
350.798 223.689 li
351.129 224.139 li
352.041 224.788 li
352.346 225.155 li
352.633 225.698 li
352.908 226.063 li
353.251 226.362 li
353.624 226.614 li
353.989 227.004 li
354.092 227.379 li
354.027 227.743 li
353.813 228.129 li
353.652 228.293 li
353.471 228.651 li
353.409 229.135 li
353.652 230.034 li
353.918 230.285 li
354.217 230.232 li
354.592 229.597 li
354.78 229.462 li
355.012 229.459 li
355.293 229.563 li
355.555 229.617 li
356.268 229.485 li
356.808 229.48 li
357.134 229.584 li
357.505 229.86 li
357.715 230.191 li
357.883 230.524 li
358.07 230.792 li
358.31 231.037 li
358.568 231.396 li
358.807 231.606 li
359.053 231.726 li
359.362 231.827 li
359.723 232.012 li
360.973 233.053 li
361.328 233.265 li
361.704 233.412 li
363.01 233.749 li
363.52 234.036 li
363.784 234.291 li
363.896 234.491 li
363.842 234.738 li
362.843 235.685 li
361.184 236.319 li
360.964 236.545 li
360.996 236.792 li
361.425 237.188 li
361.541 237.374 li
361.56 237.667 li
361.528 238.019 li
361.56 238.531 li
361.646 239.028 li
361.646 239.618 li
361.417 240.059 li
361.009 240.583 li
360.607 240.874 li
360.184 241.023 li
359.745 241.023 li
358.754 240.759 li
358.45 240.794 li
358.14 240.897 li
357.782 241.117 li
357.689 241.281 li
357.763 241.498 li
358.089 241.873 li
358.147 242.173 li
358.11 242.521 li
357.932 242.917 li
356.871 243.684 li
356.688 244.009 li
356.611 244.429 li
356.518 245.653 li
356.388 246.4 li
356.193 247.098 li
355.941 247.43 li
355.565 247.636 li
354.995 247.837 li
354.762 248.149 li
354.733 248.538 li
354.857 248.931 li
354.895 249.335 li
354.66 249.511 li
353.43 249.687 li
353.014 249.857 li
352.659 250.081 li
352.217 250.484 li
352.048 250.804 li
351.98 251.111 li
351.994 251.619 li
352.041 251.818 li
352.124 252.065 li
352.287 252.34 li
352.405 252.613 li
352.562 253.13 li
352.612 253.876 li
352.46 254.66 li
352.292 255.098 li
351.772 255.56 li
351.736 257.045 li
351.858 257.372 li
352.07 257.811 li
352.399 258.38 li
352.686 258.637 li
353 258.812 li
353.27 258.922 li
353.53 259.172 li
353.658 259.542 li
353.727 259.976 li
353.873 260.544 li
354.127 261.014 li
354.435 261.397 li
354.752 261.588 li
355.09 261.63 li
355.809 261.541 li
356.191 261.665 li
356.428 261.94 li
356.662 262.323 li
356.841 262.529 li
356.998 262.65 li
357.166 262.73 li
357.395 262.879 li
357.63 262.999 li
357.906 263.062 li
358.521 262.999 li
358.869 263.041 li
359.355 263.295 li
359.706 263.675 li
359.987 264.183 li
360.406 265.437 li
360.73 266.16 li
361.415 267.182 li
361.86 267.616 li
362.247 267.822 li
362.489 267.765 li
362.656 267.627 li
362.748 267.441 li
362.813 267.264 li
362.908 267.102 li
363.055 267.011 li
363.29 266.969 li
363.524 266.963 li
363.981 267.024 li
364.683 266.862 li
365.068 266.605 li
365.48 266.252 li
366.41 265.008 li
366.642 264.36 li
367.021 262.656 li
367.024 262.226 li
367.051 261.916 li
367.216 261.765 li
367.471 261.697 li
367.765 261.705 li
368.054 261.752 li
368.241 261.834 li
368.637 261.906 li
369.057 259.303 li
371.086 256.414 li
371.221 255.836 li
371.224 254.222 li
371.336 253.315 li
372.025 252.145 li
372.371 251.682 li
372.41 251.284 li
372.556 250.812 li
373.829 249.645 li
374.693 248.472 li
375.218 247.378 li
376.857 245.31 li
377.36 244.331 li
378.452 244.036 li
379.049 243.977 li
379.497 243.736 li
379.652 243.266 li
379.432 242.59 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
414.147 189.388 mo
413.892 189.125 li
413.712 187.688 li
413.906 186.287 li
413.546 185.364 li
413.056 184.413 li
411.747 183.43 li
410.866 182.533 li
410.554 181.893 li
410.433 181.207 li
410.543 180.904 li
410.61 180.584 li
410.421 180.134 li
409.867 179.872 li
408.616 179.104 li
408.622 178.676 li
408.818 178.209 li
409.091 177.179 li
409.698 176.438 li
410.27 176.334 li
410.686 176.141 li
411.051 175.06 li
412.816 172.374 li
413.109 172.285 li
413.544 172.43 li
413.842 172.23 li
413.497 171.692 li
412.935 171.265 li
411.197 170.87 li
411.07 169.907 li
410.563 169.106 li
409.502 168.894 li
408.85 168.276 li
408.473 167.402 li
408.407 166.369 li
407.902 165.621 li
407.082 166.02 li
406.252 164.973 li
405.846 163.766 li
406.254 162.663 li
406.334 162.541 li
406.454 162.405 li
406.969 162.229 li
407.367 161.962 li
406.603 161.52 li
406.071 161.025 li
405.732 160.764 li
405.359 160.67 li
404.872 160.807 li
402.617 160.668 li
400.692 159.777 li
400.618 160.002 li
400.752 160.966 li
400.756 161.377 li
400.62 162.117 li
400.57 163.264 li
400.275 163.917 li
397.651 166.979 li
396.647 167.786 li
395.475 168.181 li
392.059 167.946 li
391.523 168.107 li
385.577 172.016 li
383.121 173.142 li
382.091 174.033 li
381.543 175.427 li
381.423 176.917 li
381.5 178.347 li
381.857 179.767 li
382.552 181.208 li
383.502 182.456 li
384.565 183.408 li
388.351 185.841 li
389.89 186.315 li
394.304 186.968 li
395.73 187.382 li
397.095 188.064 li
398.28 189.097 li
400.077 191.309 li
400.643 191.878 li
403.688 194.284 li
404.348 194.659 li
405.018 194.806 li
406.59 194.957 li
408.73 195.671 li
409.672 195.662 li
410.181 194.464 li
410.626 193.952 li
411.218 193.593 li
411.749 192.885 li
412.394 192.315 li
412.937 192.136 li
413.283 191.621 li
413.151 191.188 li
413.075 190.588 li
413.161 190.364 li
413.405 190.255 li
413.948 190.091 li
414.371 189.685 li
414.147 189.388 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
414.147 189.388 mo
413.892 189.125 li
413.712 187.688 li
413.906 186.287 li
413.546 185.364 li
413.056 184.413 li
411.747 183.43 li
410.866 182.533 li
410.554 181.893 li
410.433 181.207 li
410.543 180.904 li
410.61 180.584 li
410.421 180.134 li
409.867 179.872 li
408.616 179.104 li
408.622 178.676 li
408.818 178.209 li
409.091 177.179 li
409.698 176.438 li
410.27 176.334 li
410.686 176.141 li
411.051 175.06 li
412.816 172.374 li
413.109 172.285 li
413.544 172.43 li
413.842 172.23 li
413.497 171.692 li
412.935 171.265 li
411.197 170.87 li
411.07 169.907 li
410.563 169.106 li
409.502 168.894 li
408.85 168.276 li
408.473 167.402 li
408.407 166.369 li
407.902 165.621 li
407.082 166.02 li
406.252 164.973 li
405.846 163.766 li
406.254 162.663 li
406.334 162.541 li
406.454 162.405 li
406.969 162.229 li
407.367 161.962 li
406.603 161.52 li
406.071 161.025 li
405.732 160.764 li
405.359 160.67 li
404.872 160.807 li
402.617 160.668 li
400.692 159.777 li
400.618 160.002 li
400.752 160.966 li
400.756 161.377 li
400.62 162.117 li
400.57 163.264 li
400.275 163.917 li
397.651 166.979 li
396.647 167.786 li
395.475 168.181 li
392.059 167.946 li
391.523 168.107 li
385.577 172.016 li
383.121 173.142 li
382.091 174.033 li
381.543 175.427 li
381.423 176.917 li
381.5 178.347 li
381.857 179.767 li
382.552 181.208 li
383.502 182.456 li
384.565 183.408 li
388.351 185.841 li
389.89 186.315 li
394.304 186.968 li
395.73 187.382 li
397.095 188.064 li
398.28 189.097 li
400.077 191.309 li
400.643 191.878 li
403.688 194.284 li
404.348 194.659 li
405.018 194.806 li
406.59 194.957 li
408.73 195.671 li
409.672 195.662 li
410.181 194.464 li
410.626 193.952 li
411.218 193.593 li
411.749 192.885 li
412.394 192.315 li
412.937 192.136 li
413.283 191.621 li
413.151 191.188 li
413.075 190.588 li
413.161 190.364 li
413.405 190.255 li
413.948 190.091 li
414.371 189.685 li
414.147 189.388 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
254.727 443.155 mo
254.54 442.85 li
254.337 442.578 li
254.403 441.948 li
254.482 441.747 li
254.069 441.88 li
253.099 442.987 li
253.149 443.215 li
253.984 443.016 li
254.203 443.104 li
254.526 443.551 li
254.697 443.728 li
254.95 443.838 li
254.877 443.486 li
254.727 443.155 li
cp
557.263 492.334 mo
557.293 491.833 li
557.09 491.32 li
556.8 491.041 li
556.449 490.905 li
556.1 490.891 li
555.791 490.979 li
555.449 491.262 li
554.604 492.275 li
554.416 492.631 li
554.592 493.465 li
555.206 493.899 li
555.986 494.062 li
556.963 494.088 li
557.153 494.058 li
557.219 493.857 li
557.159 493.353 li
557.17 492.839 li
557.263 492.334 li
cp
265.231 526.879 mo
264.798 526.654 li
264.333 526.49 li
264.001 526.461 li
263.95 526.255 li
264.153 526.273 li
264.555 526.237 li
264.76 526.255 li
264.593 526 li
264.492 525.734 li
264.46 525.478 li
264.499 525.216 li
264.174 525.169 li
263.576 525.237 li
263.204 525.216 li
263.347 524.719 li
263.433 524.19 li
262.923 524.159 li
262 523.777 li
261.537 523.779 li
261.485 523.574 li
262.091 523.47 li
263.376 523.586 li
263.888 523.37 li
263.5 523.167 li
263.088 523.063 li
262.7 523.059 li
262.368 523.167 li
262.722 522.682 li
262.874 522.552 li
262.76 522.38 li
262.545 521.936 li
262.715 522.004 li
263.07 522.077 li
263.244 522.142 li
262.832 521.408 li
262.591 521.116 li
262.285 520.893 li
262.643 520.701 li
262.961 520.822 li
263.271 520.904 li
263.598 520.585 li
263.628 520.358 li
263.589 520.128 li
263.614 519.942 li
263.825 519.869 li
264.81 519.869 li
264.617 519.707 li
264.358 519.366 li
264.174 519.013 li
264.217 518.842 li
263.194 519.045 li
262.807 519.03 li
262.812 518.837 li
262.76 518.422 li
262.755 518.226 li
262.472 518.341 li
261.378 518.544 li
261.049 518.525 li
260.586 518.341 li
260.281 518.393 li
260.003 518.534 li
259.615 518.636 li
260.256 519.133 li
260.363 519.797 li
260.258 520.519 li
260.255 521.201 li
260.381 522.122 li
260.258 522.831 li
259.926 523.37 li
257.215 525.185 li
256.604 526.401 li
257.276 528.101 li
257.673 527.478 li
257.91 527.205 li
258.1 527.179 li
258.489 527.551 li
258.814 527.768 li
259.156 527.869 li
259.581 527.896 li
259.915 527.835 li
260.113 527.645 li
260.159 527.324 li
260.05 526.87 li
259.845 526.505 li
259.6 526.299 li
259.313 526.123 li
258.984 525.848 li
259.329 525.854 li
259.956 526.17 li
260.305 526.255 li
260.476 526.141 li
260.279 525.874 li
259.943 525.597 li
259.689 525.438 li
259.92 525.126 li
260.268 525.172 li
260.645 525.423 li
260.984 525.734 li
261.208 526.168 li
261.182 526.637 li
261.063 527.089 li
261.012 527.484 li
261.536 527.171 li
261.758 526.959 li
261.931 526.648 li
262.474 527.299 li
263.228 527.6 li
264.021 527.81 li
264.687 528.202 li
265.095 528.366 li
265.397 528.093 li
265.533 527.588 li
265.464 527.075 li
265.231 526.879 li
cp
263.06 528.492 mo
262.261 528.133 li
261.988 528.101 li
261.856 528.167 li
261.621 528.436 li
259.895 528.807 li
259.557 528.801 li
258.793 528.334 li
258.369 528.151 li
257.922 528.101 li
258.2 528.474 li
258.502 528.723 li
259.15 529.124 li
259.424 529.374 li
259.576 529.567 li
259.78 529.692 li
263.083 529.922 li
263.175 529.641 li
263.516 529.697 li
263.832 529.659 li
264.403 529.386 li
265.035 529.27 li
265.333 529.124 li
264.76 528.833 li
263.06 528.492 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
254.727 443.155 mo
254.54 442.85 li
254.337 442.578 li
254.403 441.948 li
254.482 441.747 li
254.069 441.88 li
253.099 442.987 li
253.149 443.215 li
253.984 443.016 li
254.203 443.104 li
254.526 443.551 li
254.697 443.728 li
254.95 443.838 li
254.877 443.486 li
254.727 443.155 li
cp
557.263 492.334 mo
557.293 491.833 li
557.09 491.32 li
556.8 491.041 li
556.449 490.905 li
556.1 490.891 li
555.791 490.979 li
555.449 491.262 li
554.604 492.275 li
554.416 492.631 li
554.592 493.465 li
555.206 493.899 li
555.986 494.062 li
556.963 494.088 li
557.153 494.058 li
557.219 493.857 li
557.159 493.353 li
557.17 492.839 li
557.263 492.334 li
cp
265.231 526.879 mo
264.798 526.654 li
264.333 526.49 li
264.001 526.461 li
263.95 526.255 li
264.153 526.273 li
264.555 526.237 li
264.76 526.255 li
264.593 526 li
264.492 525.734 li
264.46 525.478 li
264.499 525.216 li
264.174 525.169 li
263.576 525.237 li
263.204 525.216 li
263.347 524.719 li
263.433 524.19 li
262.923 524.159 li
262 523.777 li
261.537 523.779 li
261.485 523.574 li
262.091 523.47 li
263.376 523.586 li
263.888 523.37 li
263.5 523.167 li
263.088 523.063 li
262.7 523.059 li
262.368 523.167 li
262.722 522.682 li
262.874 522.552 li
262.76 522.38 li
262.545 521.936 li
262.715 522.004 li
263.07 522.077 li
263.244 522.142 li
262.832 521.408 li
262.591 521.116 li
262.285 520.893 li
262.643 520.701 li
262.961 520.822 li
263.271 520.904 li
263.598 520.585 li
263.628 520.358 li
263.589 520.128 li
263.614 519.942 li
263.825 519.869 li
264.81 519.869 li
264.617 519.707 li
264.358 519.366 li
264.174 519.013 li
264.217 518.842 li
263.194 519.045 li
262.807 519.03 li
262.812 518.837 li
262.76 518.422 li
262.755 518.226 li
262.472 518.341 li
261.378 518.544 li
261.049 518.525 li
260.586 518.341 li
260.281 518.393 li
260.003 518.534 li
259.615 518.636 li
260.256 519.133 li
260.363 519.797 li
260.258 520.519 li
260.255 521.201 li
260.381 522.122 li
260.258 522.831 li
259.926 523.37 li
257.215 525.185 li
256.604 526.401 li
257.276 528.101 li
257.673 527.478 li
257.91 527.205 li
258.1 527.179 li
258.489 527.551 li
258.814 527.768 li
259.156 527.869 li
259.581 527.896 li
259.915 527.835 li
260.113 527.645 li
260.159 527.324 li
260.05 526.87 li
259.845 526.505 li
259.6 526.299 li
259.313 526.123 li
258.984 525.848 li
259.329 525.854 li
259.956 526.17 li
260.305 526.255 li
260.476 526.141 li
260.279 525.874 li
259.943 525.597 li
259.689 525.438 li
259.92 525.126 li
260.268 525.172 li
260.645 525.423 li
260.984 525.734 li
261.208 526.168 li
261.182 526.637 li
261.063 527.089 li
261.012 527.484 li
261.536 527.171 li
261.758 526.959 li
261.931 526.648 li
262.474 527.299 li
263.228 527.6 li
264.021 527.81 li
264.687 528.202 li
265.095 528.366 li
265.397 528.093 li
265.533 527.588 li
265.464 527.075 li
265.231 526.879 li
cp
263.06 528.492 mo
262.261 528.133 li
261.988 528.101 li
261.856 528.167 li
261.621 528.436 li
259.895 528.807 li
259.557 528.801 li
258.793 528.334 li
258.369 528.151 li
257.922 528.101 li
258.2 528.474 li
258.502 528.723 li
259.15 529.124 li
259.424 529.374 li
259.576 529.567 li
259.78 529.692 li
263.083 529.922 li
263.175 529.641 li
263.516 529.697 li
263.832 529.659 li
264.403 529.386 li
265.035 529.27 li
265.333 529.124 li
264.76 528.833 li
263.06 528.492 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
307.69 396.91 mo
307.538 396.304 li
306.289 395.116 li
306.035 394.469 li
305.882 393.68 li
305.516 392.876 li
305.063 392.111 li
305.055 391.187 li
305.253 390.418 li
305.236 389.546 li
304.891 387.579 li
303.768 385.906 li
303.328 385.067 li
303.213 384.297 li
302.735 383.266 li
301.863 382.239 li
301.073 381.462 li
300.655 380.484 li
300.453 379.595 li
300.38 378.738 li
300.123 377.976 li
299.68 377.324 li
298.839 376.747 li
298.345 376.341 li
298.02 375.284 li
297.751 374.666 li
297.586 374.124 li
297.428 373.285 li
297.378 372.322 li
297.488 370.981 li
298.461 368.294 li
299.384 364.405 li
300.253 363.565 li
299.563 362.28 li
296.882 360.109 li
295.903 359.652 li
294.903 360.168 li
292.894 363.569 li
291.911 364.009 li
290.929 363.882 li
290.041 363.581 li
289.221 362.523 li
287.265 360.582 li
286.237 359.061 li
285.623 358.797 li
281.672 360.528 li
280.08 360.639 li
279.089 360.593 li
277.772 360.042 li
277.252 359.138 li
277.042 358.302 li
275.974 356.874 li
275.351 355.86 li
275.058 354.983 li
275.444 352.429 li
275.251 351.857 li
273.752 351.297 li
272.963 348.238 li
272.103 347.436 li
271.434 346.499 li
270.989 345.516 li
270.627 344.382 li
270.907 343.236 li
270.818 340.828 li
270.526 339.743 li
270.693 337.49 li
270.938 336.371 li
271.547 335.078 li
272.188 334.158 li
272.904 333.658 li
273.34 333.165 li
273.554 330.758 li
273.651 330.257 li
273.721 329.555 li
273.304 329.031 li
272.923 328.423 li
272.287 327.775 li
271.704 327.273 li
270.763 326.778 li
269.82 326.428 li
268.585 326.494 li
267.325 326.884 li
267.422 326.979 li
267.506 327.438 li
267.314 327.958 li
267.108 328.073 li
264.887 328.073 li
265.212 329.061 li
264.734 329.746 li
263.952 330.29 li
263.349 330.849 li
261.723 332.888 li
261.292 333.626 li
261.56 333.971 li
261.799 334.412 li
262.134 335.283 li
262.26 336.086 li
262.345 336.31 li
262.52 336.531 li
262.652 336.591 li
262.78 336.615 li
262.95 336.721 li
263.732 337.337 li
264.348 337.632 li
264.508 337.75 li
264.754 338.131 li
264.909 338.593 li
264.946 339.042 li
264.844 339.389 li
263.813 338.059 li
263.424 337.744 li
262.506 337.316 li
261.239 336.447 li
260.482 336.302 li
259.814 336.568 li
259.242 337.235 li
259.091 337.36 li
258.695 337.475 li
258.552 337.564 li
258.459 337.758 li
258.349 338.186 li
258.211 338.366 li
256.976 338.695 li
256.642 338.978 li
256.527 339.408 li
256.7 339.725 li
257.436 340.231 li
258.572 341.239 li
259.032 341.444 li
258.362 341.277 li
257.859 341.06 li
257.384 340.707 li
256.802 340.128 li
256.494 339.967 li
256.259 340.088 li
256.054 340.304 li
255.625 340.515 li
255.728 340.739 li
256.079 341.136 li
256.347 341.66 li
257.122 342.287 li
257.301 342.899 li
257.221 343.433 li
257.044 343.829 li
256.927 344.275 li
257.019 344.954 li
256.516 344.661 li
256.194 344.307 li
256.035 343.867 li
256.039 343.311 li
256.176 342.885 li
256.331 342.668 li
256.359 342.463 li
256.101 342.06 li
255.178 341.396 li
254.311 341.499 li
253.723 342.165 li
253.633 343.198 li
253.778 343.565 li
254.338 344.54 li
254.583 344.853 li
254.844 345.291 li
254.932 345.77 li
254.972 346.205 li
255.1 346.506 li
255.701 346.941 li
255.809 347.123 li
255.871 347.343 li
255.971 347.578 li
256.1 347.793 li
256.238 347.957 li
256.382 348.285 li
255.967 348.348 li
255.038 348.263 li
255.089 347.702 li
254.834 347.333 li
254.472 347.025 li
254.191 346.617 li
254.16 346.333 li
254.284 345.756 li
254.289 345.469 li
254.152 345.178 li
253.93 344.954 li
253.721 344.78 li
253.614 344.648 li
253.086 343.717 li
252.285 343.762 li
250.599 344.751 li
250.759 344.896 li
251.064 345.231 li
251.229 345.365 li
250.648 345.394 li
250.202 345.478 li
249.837 345.661 li
248.801 346.584 li
248.475 347 li
248.454 347.425 li
248.794 347.682 li
252.066 351.681 li
252.553 351.798 li
252.274 352.133 li
251.674 351.87 li
250.971 351.416 li
250.408 351.179 li
249.727 351.023 li
249.013 348.232 li
248.346 348.064 li
247.788 348.263 li
247.562 351.239 li
247.703 351.734 li
248.098 352.237 li
248.617 352.729 li
249.195 353.024 li
250.683 353.478 li
251.134 353.856 li
249.614 353.709 li
249.274 353.856 li
249.213 354.09 li
249.412 354.696 li
249.368 355.108 li
249.032 354.842 li
248.92 354.505 li
248.876 354.104 li
248.731 353.667 li
247.518 352.311 li
246.949 352.194 li
246.462 352.697 li
245.782 354.078 li
246.397 354.122 li
246.994 354.506 li
248.1 355.52 li
249.121 356.171 li
249.295 356.362 li
249.151 356.58 li
248.771 356.58 li
248.33 356.446 li
248.007 356.249 li
246.802 355.079 li
246.143 354.71 li
245.409 354.696 li
244.926 355.018 li
244.855 355.52 li
245.208 356.867 li
245.385 357.212 li
245.904 357.54 li
246.181 358.145 li
246.529 358.745 li
246.664 359.145 li
247.133 359.361 li
249.094 359.181 li
249.688 359.04 li
250.543 358.657 li
251.46 358.643 li
251.47 358.68 li
251.29 358.816 li
251.218 359.145 li
251.292 359.719 li
251.387 359.858 li
251.693 360.175 li
252.081 360.395 li
252.935 360.354 li
253.353 360.463 li
253.167 360.861 li
252.758 361.027 li
252.248 361.013 li
251.764 360.875 li
251.364 360.604 li
250.784 359.878 li
250.484 359.637 li
250.023 359.599 li
247.665 360.25 li
247.295 360.455 li
247.028 360.875 li
249.954 363.021 li
251.526 364.467 li
251.868 365.452 li
251.674 365.308 li
251.324 365.156 li
251.113 365.04 li
251.074 365.147 li
250.985 365.226 li
250.33 364.204 li
250.017 363.491 li
249.716 363.244 li
249.372 363.064 li
248.595 362.536 li
248.453 362.699 li
248.437 363.091 li
248.35 363.479 li
248.101 363.805 li
247.841 363.962 li
247.018 364.007 li
246.765 363.877 li
246.969 363.597 li
247.508 363.16 li
247.658 362.772 li
247.642 362.476 li
247.484 362.21 li
247.249 361.927 li
246.419 361.303 li
245.768 361.356 li
245.141 361.643 li
244.375 361.722 li
244.404 361.436 li
244.512 361.207 li
244.671 361.023 li
244.863 360.875 li
243.752 360.441 li
243.209 360.057 li
242.906 359.545 li
242.648 359.44 li
242.188 359.799 li
241.518 360.575 li
241.286 361.075 li
241.225 361.454 li
241.375 361.783 li
241.767 362.134 li
242.261 362.408 li
243.318 362.841 li
243.836 363.16 li
243.987 362.462 li
244.429 362.733 li
244.967 363.478 li
245.396 364.193 li
244.292 363.978 li
242.966 363.298 li
241.676 362.861 li
240.687 363.366 li
240.54 363.84 li
240.486 365.658 li
239.941 367.38 li
240.036 367.832 li
240.452 368.384 li
240.675 368.506 li
241.114 368.546 li
241.39 368.517 li
241.894 368.384 li
242.159 368.359 li
243.369 367.696 li
245.31 367.345 li
248.255 365.846 li
248.205 366.608 li
247.586 367.076 li
246.095 367.512 li
246.462 367.843 li
246.858 367.963 li
247.68 367.945 li
247.245 368.379 li
246.562 368.344 li
245.186 367.945 li
244.486 368.052 li
243.378 368.619 li
242.749 368.753 li
242.222 368.944 li
242.052 369.441 li
242.176 370.111 li
242.517 370.834 li
242.952 370.934 li
245.247 370.628 li
244.929 370.914 li
243.696 371.248 li
243.324 371.506 li
243.098 371.827 li
242.832 372.715 li
243.438 372.883 li
245.601 372.302 li
247.398 372.487 li
247.764 372.434 li
248.732 372.075 li
248.563 372.705 li
248.119 373.059 li
247.029 373.517 li
246.614 373.832 li
246.419 374.032 li
246.265 374.261 li
246.025 374.459 li
245.694 374.473 li
244.949 374.365 li
244.3 374.461 li
243.091 374.89 li
242.482 374.985 li
240.958 374.993 li
240.272 375.173 li
239.764 375.626 li
239.532 375.398 li
239.671 375.191 li
237.983 375.191 li
236.443 375.398 li
236.105 375.695 li
236.095 376.396 li
236.67 379.119 li
236.93 379.72 li
237.049 380.129 li
237.033 380.479 li
237.086 380.727 li
237.298 381.106 li
237.562 381.46 li
237.774 381.617 li
237.937 381.5 li
238.395 380.947 li
238.679 380.771 li
240.874 380.173 li
241.165 379.84 li
241.189 379.542 li
241.652 378.599 li
241.771 378.469 li
242.165 378.188 li
242.157 378.02 li
242.192 377.803 li
242.254 377.602 li
242.325 377.464 li
242.505 377.254 li
242.736 377.061 li
243.003 377.015 li
243.299 377.256 li
243.301 377.487 li
243.149 377.803 li
242.119 379.223 li
242.228 379.414 li
242.643 379.582 li
243.132 379.692 li
243.474 379.72 li
244.273 379.473 li
245.033 379.119 li
244.769 379.804 li
244.191 380.07 li
242.783 380.375 li
242.182 380.765 li
241.816 381.231 li
241.686 381.89 li
241.81 382.858 li
241.379 382.648 li
241.213 382.886 li
241.233 383.367 li
241.348 383.894 li
243.045 383.561 li
243.733 383.169 li
243.856 382.222 li
244.174 382.443 li
244.228 382.697 li
244.179 382.929 li
244.191 383.082 li
244.462 383.347 li
244.528 383.359 li
244.546 383.235 li
245.152 382.511 li
245.24 382.447 li
245.222 382.156 li
245.105 381.956 li
244.999 381.736 li
245.016 381.394 li
245.295 381.007 li
245.807 380.722 li
246.798 380.375 li
248.118 379.597 li
248.637 379.53 li
248.677 379.72 li
248.145 380.041 li
247.196 380.84 li
246.514 380.997 li
246.066 381.258 li
245.806 381.874 li
245.42 383.289 li
244.806 384.325 li
244.069 385.248 li
243.858 385.41 li
243.225 385.684 li
243.12 385.879 li
243.292 386.166 li
244.201 387.016 li
245.765 387.892 li
247.451 388.144 li
250.785 388.069 li
252.535 388.464 li
252.957 388.479 li
253.358 388.415 li
253.773 388.404 li
255.47 389.045 li
255.763 389.104 li
255.873 389.198 li
256.019 389.382 li
256.181 389.504 li
256.332 389.414 li
256.457 389.293 li
256.633 389.204 li
257.017 389.104 li
257.551 389.135 li
258.623 389.474 li
259.119 389.518 li
259.454 389.398 li
260.11 388.991 li
260.485 388.878 li
261.321 388.932 li
261.673 388.836 li
261.911 388.464 li
261.959 388.015 li
261.923 387.61 li
261.935 387.193 li
262.115 386.717 li
262.159 386.485 li
262.076 385.991 li
262.177 385.775 li
262.363 385.717 li
265.214 385.979 li
265.586 386.061 li
266.873 386.717 li
267.394 386.854 li
268.405 386.944 li
268.829 387.222 li
268.961 387.83 li
269.752 388.702 li
271.301 390.139 li
271.148 390.51 li
270.892 390.689 li
270.583 390.807 li
270.283 390.984 li
270.619 391.197 li
271.254 391.489 li
271.532 391.693 li
271.995 392.256 li
272.268 392.526 li
272.564 392.643 li
272.852 392.938 li
273.134 393.146 li
273.435 393.247 li
273.565 393.188 li
273.874 392.9 li
274.026 392.832 li
274.223 392.862 li
274.601 393.019 li
274.867 393.099 li
275.167 393.137 li
275.438 393.057 li
275.506 392.738 li
275.652 392.449 li
276.118 392.437 li
276.878 392.54 li
277.161 392.434 li
277.603 392.553 li
278.071 392.732 li
278.446 392.832 li
278.474 392.669 li
278.314 392.313 li
278.255 391.96 li
278.572 391.798 li
280.883 391.431 li
281.607 391.591 li
282.09 391.969 li
283.828 394.063 li
284.59 395.315 li
284.961 395.729 li
285.468 395.78 li
285.846 395.344 li
285.944 394.634 li
285.59 393.868 li
286.208 393.863 li
286.807 394.578 li
287.179 395.562 li
287.12 396.371 li
286.037 397.295 li
285.925 397.5 li
285.761 397.285 li
285.736 397.151 li
285.675 397.068 li
285.404 396.993 li
285.139 396.981 li
284.432 397.182 li
284.552 397.533 li
284.712 397.8 li
284.929 397.972 li
285.607 398.155 li
285.813 398.44 li
285.918 398.728 li
286.029 398.856 li
286.628 399.086 li
287.705 400.019 li
288.394 400.12 li
287.995 399.571 li
287.086 398.752 li
286.803 398.136 li
286.904 397.604 li
287.411 397.7 li
288.503 398.238 li
290.617 398.194 li
291.373 398.44 li
292.04 398.965 li
291.64 399.137 li
290.91 399.015 li
290.587 398.668 li
290.275 398.584 li
289.403 398.569 li
289.074 398.668 li
288.899 398.804 li
288.792 398.955 li
288.594 399.478 li
292.865 399.854 li
294.095 399.478 li
293.989 399.384 li
293.787 399.157 li
293.677 399.063 li
293.929 398.747 li
293.739 398.521 li
293.369 398.249 li
293.088 397.824 li
294.311 397.858 li
294.948 397.981 li
295.488 398.238 li
295.187 398.387 li
294.859 398.433 li
294.586 398.538 li
294.451 398.856 li
295.284 398.863 li
297.693 398.44 li
298.364 398.209 li
298.696 398.209 li
298.905 398.556 li
299.01 398.856 li
300.011 400.759 li
300.369 401.118 li
300.829 401.182 li
301.614 401.158 li
302.335 401.354 li
303.242 401.717 li
304.102 401.903 li
304.689 401.572 li
304.698 401.193 li
304.548 400.82 li
304.501 400.552 li
304.806 400.516 li
305.008 400.671 li
305.229 400.96 li
305.539 401.236 li
306 401.365 li
306.742 401.365 li
306.874 401.294 li
306.907 401.146 li
306.923 400.998 li
307.183 400.787 li
307.026 400.108 li
307.203 399.895 li
307.522 399.965 li
307.274 398.35 li
307.552 397.693 li
307.69 396.91 li
cp
242.712 358.351 mo
243.058 358.731 li
243.345 359.146 li
243.871 359.367 li
244.439 359.523 li
244.884 359.74 li
245.397 360.128 li
245.745 360.208 li
246.537 360.072 li
245.194 358.041 li
244.627 357.021 li
244.175 355.932 li
244.085 355.828 li
244.005 355.753 li
243.939 355.667 li
243.904 355.52 li
242.856 357.582 li
242.756 357.877 li
242.832 358.009 li
242.604 358.115 li
242.712 358.351 li
cp
237.136 372.493 mo
238.327 370.93 li
238.741 370.884 li
239.209 371.456 li
239.254 371.804 li
239.456 372.415 li
239.712 373.014 li
239.923 373.331 li
240.116 373.39 li
240.34 373.379 li
240.515 373.261 li
240.569 372.715 li
240.801 372.867 li
241.045 373.172 li
241.13 373.331 li
241.663 373.266 li
242.034 372.99 li
242.211 372.511 li
242.167 371.846 li
241.958 371.199 li
241.609 370.505 li
241.159 369.924 li
240.635 369.613 li
240.409 369.578 li
239.957 369.604 li
238.122 370.195 li
237.502 370.178 li
237.224 370.243 li
237.13 370.691 li
236.946 371.154 li
236.894 371.248 li
236.656 371.458 li
236.47 371.95 li
236.354 372.498 li
236.31 372.896 li
236.794 372.74 li
237.136 372.493 li
cp
287.303 413.647 mo
286.073 413.009 li
286.029 412.801 li
286.364 412.829 li
286.67 412.917 li
286.949 412.947 li
287.19 412.801 li
287.21 412.599 li
287.2 411.827 li
287.258 411.538 li
287.049 411.446 li
286.8 411.284 li
286.567 411.063 li
286.444 410.824 li
286.335 410.7 li
286.162 410.75 li
285.873 410.915 li
285.566 410.933 li
284.341 411.343 li
284.061 411.333 li
284.018 411.126 li
284.187 411.02 li
284.277 410.893 li
284.328 410.736 li
284.377 410.521 li
283.346 410.156 li
282.698 410.012 li
281.938 409.581 li
281.669 409.483 li
281.188 409.726 li
280.539 410.666 li
279.94 410.73 li
280.823 409.302 li
280.822 408.965 li
280.453 408.376 li
280.869 408.175 li
282.247 408.22 li
282.167 408.634 li
284.414 408.823 li
284.975 408.634 li
284.936 408.446 li
284.392 408.22 li
284.787 407.828 li
284.414 407.444 li
283.804 407.167 li
283.487 407.083 li
283.26 406.667 li
282.857 406.385 li
282.396 406.142 li
281.988 405.836 li
279.268 403.204 li
278.757 402.788 li
278.221 402.446 li
276.971 401.938 li
276.705 401.992 li
276.43 402.295 li
276.148 402.45 li
275.763 402.397 li
275.066 402.19 li
274.332 402.213 li
273.822 402.368 li
273.578 402.809 li
273.623 403.663 li
273.606 403.831 li
273.541 403.983 li
273.537 404.154 li
273.685 404.378 li
273.829 404.525 li
273.932 404.655 li
274.007 404.804 li
274.056 404.999 li
274.005 405.222 li
273.865 405.446 li
273.818 405.713 li
274.037 406.046 li
275.083 407.113 li
275.541 407.76 li
275.812 408.446 li
275.843 408.865 li
275.777 409.194 li
275.5 409.795 li
275.232 410.04 li
274.516 410.04 li
274.252 410.201 li
274.274 410.855 li
274.633 411.664 li
274.88 412.392 li
274.549 412.801 li
274.215 412.775 li
273.898 412.642 li
273.566 412.562 li
273.196 412.688 li
272.692 413.021 li
272.48 413.222 li
272.296 413.528 li
272.202 413.953 li
272.275 414.289 li
272.431 414.641 li
272.566 415.101 li
272.527 415.48 li
272.424 415.797 li
272.491 416.077 li
272.965 416.328 li
272.2 416.685 li
271.78 417.022 li
271.318 417.081 li
271.111 417.28 li
270.934 417.759 li
270.796 418.497 li
270.807 419.269 li
271.067 419.856 li
271.59 419.994 li
272.412 419.946 li
273.189 419.776 li
273.586 419.569 li
273.841 419.134 li
274.186 418.745 li
274.491 418.734 li
274.644 419.476 li
275.254 418.769 li
275.445 418.378 li
275.611 417.797 li
274.242 418.288 li
273.513 418.412 li
272.992 418.007 li
273.651 417.794 li
274.711 416.938 li
275.147 417.176 li
275.148 416.438 li
275.133 416.328 li
275.296 416.226 li
275.685 416.138 li
276.103 415.738 li
276.349 415.957 li
276.598 416.396 li
276.91 416.762 li
277.219 416.802 li
278.073 416.678 li
278.489 416.855 li
278.863 417.108 li
279.322 417.274 li
279.753 417.286 li
280.03 417.063 li
280.374 416.558 li
281.632 415.343 li
282.188 415.101 li
283.646 414.876 li
285.458 414.876 li
285.08 414.402 li
285.984 414.719 li
286.22 414.565 li
285.911 413.819 li
285.993 413.602 li
286.535 413.631 li
286.745 413.755 li
287.011 414.148 li
287.164 414.252 li
287.35 414.265 li
287.598 414.235 li
287.761 414.136 li
287.679 413.942 li
287.303 413.647 li
cp
293.5 403.841 mo
293.271 404.097 li
292.945 404.23 li
292.576 404.266 li
292.854 404.646 li
293.179 404.938 li
293.396 405.206 li
293.35 405.526 li
293.519 405.239 li
293.923 404.739 li
294.089 404.108 li
293.569 403.436 li
293.5 403.841 li
cp
271.899 405.34 mo
272.246 405.239 li
272.476 405.008 li
272.623 404.492 li
272.258 404.266 li
271.918 404.19 li
271.57 404.23 li
271.328 404.434 li
271.312 404.837 li
271.557 405.233 li
271.899 405.34 li
cp
269.021 417.863 mo
268.522 418.2 li
268.323 418.628 li
268.597 418.992 li
269.114 418.835 li
269.627 418.468 li
269.89 418.212 li
269.568 417.81 li
269.021 417.863 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
307.69 396.91 mo
307.538 396.304 li
306.289 395.116 li
306.035 394.469 li
305.882 393.68 li
305.516 392.876 li
305.063 392.111 li
305.055 391.187 li
305.253 390.418 li
305.236 389.546 li
304.891 387.579 li
303.768 385.906 li
303.328 385.067 li
303.213 384.297 li
302.735 383.266 li
301.863 382.239 li
301.073 381.462 li
300.655 380.484 li
300.453 379.595 li
300.38 378.738 li
300.123 377.976 li
299.68 377.324 li
298.839 376.747 li
298.345 376.341 li
298.02 375.284 li
297.751 374.666 li
297.586 374.124 li
297.428 373.285 li
297.378 372.322 li
297.488 370.981 li
298.461 368.294 li
299.384 364.405 li
300.253 363.565 li
299.563 362.28 li
296.882 360.109 li
295.903 359.652 li
294.903 360.168 li
292.894 363.569 li
291.911 364.009 li
290.929 363.882 li
290.041 363.581 li
289.221 362.523 li
287.265 360.582 li
286.237 359.061 li
285.623 358.797 li
281.672 360.528 li
280.08 360.639 li
279.089 360.593 li
277.772 360.042 li
277.252 359.138 li
277.042 358.302 li
275.974 356.874 li
275.351 355.86 li
275.058 354.983 li
275.444 352.429 li
275.251 351.857 li
273.752 351.297 li
272.963 348.238 li
272.103 347.436 li
271.434 346.499 li
270.989 345.516 li
270.627 344.382 li
270.907 343.236 li
270.818 340.828 li
270.526 339.743 li
270.693 337.49 li
270.938 336.371 li
271.547 335.078 li
272.188 334.158 li
272.904 333.658 li
273.34 333.165 li
273.554 330.758 li
273.651 330.257 li
273.721 329.555 li
273.304 329.031 li
272.923 328.423 li
272.287 327.775 li
271.704 327.273 li
270.763 326.778 li
269.82 326.428 li
268.585 326.494 li
267.325 326.884 li
267.422 326.979 li
267.506 327.438 li
267.314 327.958 li
267.108 328.073 li
264.887 328.073 li
265.212 329.061 li
264.734 329.746 li
263.952 330.29 li
263.349 330.849 li
261.723 332.888 li
261.292 333.626 li
261.56 333.971 li
261.799 334.412 li
262.134 335.283 li
262.26 336.086 li
262.345 336.31 li
262.52 336.531 li
262.652 336.591 li
262.78 336.615 li
262.95 336.721 li
263.732 337.337 li
264.348 337.632 li
264.508 337.75 li
264.754 338.131 li
264.909 338.593 li
264.946 339.042 li
264.844 339.389 li
263.813 338.059 li
263.424 337.744 li
262.506 337.316 li
261.239 336.447 li
260.482 336.302 li
259.814 336.568 li
259.242 337.235 li
259.091 337.36 li
258.695 337.475 li
258.552 337.564 li
258.459 337.758 li
258.349 338.186 li
258.211 338.366 li
256.976 338.695 li
256.642 338.978 li
256.527 339.408 li
256.7 339.725 li
257.436 340.231 li
258.572 341.239 li
259.032 341.444 li
258.362 341.277 li
257.859 341.06 li
257.384 340.707 li
256.802 340.128 li
256.494 339.967 li
256.259 340.088 li
256.054 340.304 li
255.625 340.515 li
255.728 340.739 li
256.079 341.136 li
256.347 341.66 li
257.122 342.287 li
257.301 342.899 li
257.221 343.433 li
257.044 343.829 li
256.927 344.275 li
257.019 344.954 li
256.516 344.661 li
256.194 344.307 li
256.035 343.867 li
256.039 343.311 li
256.176 342.885 li
256.331 342.668 li
256.359 342.463 li
256.101 342.06 li
255.178 341.396 li
254.311 341.499 li
253.723 342.165 li
253.633 343.198 li
253.778 343.565 li
254.338 344.54 li
254.583 344.853 li
254.844 345.291 li
254.932 345.77 li
254.972 346.205 li
255.1 346.506 li
255.701 346.941 li
255.809 347.123 li
255.871 347.343 li
255.971 347.578 li
256.1 347.793 li
256.238 347.957 li
256.382 348.285 li
255.967 348.348 li
255.038 348.263 li
255.089 347.702 li
254.834 347.333 li
254.472 347.025 li
254.191 346.617 li
254.16 346.333 li
254.284 345.756 li
254.289 345.469 li
254.152 345.178 li
253.93 344.954 li
253.721 344.78 li
253.614 344.648 li
253.086 343.717 li
252.285 343.762 li
250.599 344.751 li
250.759 344.896 li
251.064 345.231 li
251.229 345.365 li
250.648 345.394 li
250.202 345.478 li
249.837 345.661 li
248.801 346.584 li
248.475 347 li
248.454 347.425 li
248.794 347.682 li
252.066 351.681 li
252.553 351.798 li
252.274 352.133 li
251.674 351.87 li
250.971 351.416 li
250.408 351.179 li
249.727 351.023 li
249.013 348.232 li
248.346 348.064 li
247.788 348.263 li
247.562 351.239 li
247.703 351.734 li
248.098 352.237 li
248.617 352.729 li
249.195 353.024 li
250.683 353.478 li
251.134 353.856 li
249.614 353.709 li
249.274 353.856 li
249.213 354.09 li
249.412 354.696 li
249.368 355.108 li
249.032 354.842 li
248.92 354.505 li
248.876 354.104 li
248.731 353.667 li
247.518 352.311 li
246.949 352.194 li
246.462 352.697 li
245.782 354.078 li
246.397 354.122 li
246.994 354.506 li
248.1 355.52 li
249.121 356.171 li
249.295 356.362 li
249.151 356.58 li
248.771 356.58 li
248.33 356.446 li
248.007 356.249 li
246.802 355.079 li
246.143 354.71 li
245.409 354.696 li
244.926 355.018 li
244.855 355.52 li
245.208 356.867 li
245.385 357.212 li
245.904 357.54 li
246.181 358.145 li
246.529 358.745 li
246.664 359.145 li
247.133 359.361 li
249.094 359.181 li
249.688 359.04 li
250.543 358.657 li
251.46 358.643 li
251.47 358.68 li
251.29 358.816 li
251.218 359.145 li
251.292 359.719 li
251.387 359.858 li
251.693 360.175 li
252.081 360.395 li
252.935 360.354 li
253.353 360.463 li
253.167 360.861 li
252.758 361.027 li
252.248 361.013 li
251.764 360.875 li
251.364 360.604 li
250.784 359.878 li
250.484 359.637 li
250.023 359.599 li
247.665 360.25 li
247.295 360.455 li
247.028 360.875 li
249.954 363.021 li
251.526 364.467 li
251.868 365.452 li
251.674 365.308 li
251.324 365.156 li
251.113 365.04 li
251.074 365.147 li
250.985 365.226 li
250.33 364.204 li
250.017 363.491 li
249.716 363.244 li
249.372 363.064 li
248.595 362.536 li
248.453 362.699 li
248.437 363.091 li
248.35 363.479 li
248.101 363.805 li
247.841 363.962 li
247.018 364.007 li
246.765 363.877 li
246.969 363.597 li
247.508 363.16 li
247.658 362.772 li
247.642 362.476 li
247.484 362.21 li
247.249 361.927 li
246.419 361.303 li
245.768 361.356 li
245.141 361.643 li
244.375 361.722 li
244.404 361.436 li
244.512 361.207 li
244.671 361.023 li
244.863 360.875 li
243.752 360.441 li
243.209 360.057 li
242.906 359.545 li
242.648 359.44 li
242.188 359.799 li
241.518 360.575 li
241.286 361.075 li
241.225 361.454 li
241.375 361.783 li
241.767 362.134 li
242.261 362.408 li
243.318 362.841 li
243.836 363.16 li
243.987 362.462 li
244.429 362.733 li
244.967 363.478 li
245.396 364.193 li
244.292 363.978 li
242.966 363.298 li
241.676 362.861 li
240.687 363.366 li
240.54 363.84 li
240.486 365.658 li
239.941 367.38 li
240.036 367.832 li
240.452 368.384 li
240.675 368.506 li
241.114 368.546 li
241.39 368.517 li
241.894 368.384 li
242.159 368.359 li
243.369 367.696 li
245.31 367.345 li
248.255 365.846 li
248.205 366.608 li
247.586 367.076 li
246.095 367.512 li
246.462 367.843 li
246.858 367.963 li
247.68 367.945 li
247.245 368.379 li
246.562 368.344 li
245.186 367.945 li
244.486 368.052 li
243.378 368.619 li
242.749 368.753 li
242.222 368.944 li
242.052 369.441 li
242.176 370.111 li
242.517 370.834 li
242.952 370.934 li
245.247 370.628 li
244.929 370.914 li
243.696 371.248 li
243.324 371.506 li
243.098 371.827 li
242.832 372.715 li
243.438 372.883 li
245.601 372.302 li
247.398 372.487 li
247.764 372.434 li
248.732 372.075 li
248.563 372.705 li
248.119 373.059 li
247.029 373.517 li
246.614 373.832 li
246.419 374.032 li
246.265 374.261 li
246.025 374.459 li
245.694 374.473 li
244.949 374.365 li
244.3 374.461 li
243.091 374.89 li
242.482 374.985 li
240.958 374.993 li
240.272 375.173 li
239.764 375.626 li
239.532 375.398 li
239.671 375.191 li
237.983 375.191 li
236.443 375.398 li
236.105 375.695 li
236.095 376.396 li
236.67 379.119 li
236.93 379.72 li
237.049 380.129 li
237.033 380.479 li
237.086 380.727 li
237.298 381.106 li
237.562 381.46 li
237.774 381.617 li
237.937 381.5 li
238.395 380.947 li
238.679 380.771 li
240.874 380.173 li
241.165 379.84 li
241.189 379.542 li
241.652 378.599 li
241.771 378.469 li
242.165 378.188 li
242.157 378.02 li
242.192 377.803 li
242.254 377.602 li
242.325 377.464 li
242.505 377.254 li
242.736 377.061 li
243.003 377.015 li
243.299 377.256 li
243.301 377.487 li
243.149 377.803 li
242.119 379.223 li
242.228 379.414 li
242.643 379.582 li
243.132 379.692 li
243.474 379.72 li
244.273 379.473 li
245.033 379.119 li
244.769 379.804 li
244.191 380.07 li
242.783 380.375 li
242.182 380.765 li
241.816 381.231 li
241.686 381.89 li
241.81 382.858 li
241.379 382.648 li
241.213 382.886 li
241.233 383.367 li
241.348 383.894 li
243.045 383.561 li
243.733 383.169 li
243.856 382.222 li
244.174 382.443 li
244.228 382.697 li
244.179 382.929 li
244.191 383.082 li
244.462 383.347 li
244.528 383.359 li
244.546 383.235 li
245.152 382.511 li
245.24 382.447 li
245.222 382.156 li
245.105 381.956 li
244.999 381.736 li
245.016 381.394 li
245.295 381.007 li
245.807 380.722 li
246.798 380.375 li
248.118 379.597 li
248.637 379.53 li
248.677 379.72 li
248.145 380.041 li
247.196 380.84 li
246.514 380.997 li
246.066 381.258 li
245.806 381.874 li
245.42 383.289 li
244.806 384.325 li
244.069 385.248 li
243.858 385.41 li
243.225 385.684 li
243.12 385.879 li
243.292 386.166 li
244.201 387.016 li
245.765 387.892 li
247.451 388.144 li
250.785 388.069 li
252.535 388.464 li
252.957 388.479 li
253.358 388.415 li
253.773 388.404 li
255.47 389.045 li
255.763 389.104 li
255.873 389.198 li
256.019 389.382 li
256.181 389.504 li
256.332 389.414 li
256.457 389.293 li
256.633 389.204 li
257.017 389.104 li
257.551 389.135 li
258.623 389.474 li
259.119 389.518 li
259.454 389.398 li
260.11 388.991 li
260.485 388.878 li
261.321 388.932 li
261.673 388.836 li
261.911 388.464 li
261.959 388.015 li
261.923 387.61 li
261.935 387.193 li
262.115 386.717 li
262.159 386.485 li
262.076 385.991 li
262.177 385.775 li
262.363 385.717 li
265.214 385.979 li
265.586 386.061 li
266.873 386.717 li
267.394 386.854 li
268.405 386.944 li
268.829 387.222 li
268.961 387.83 li
269.752 388.702 li
271.301 390.139 li
271.148 390.51 li
270.892 390.689 li
270.583 390.807 li
270.283 390.984 li
270.619 391.197 li
271.254 391.489 li
271.532 391.693 li
271.995 392.256 li
272.268 392.526 li
272.564 392.643 li
272.852 392.938 li
273.134 393.146 li
273.435 393.247 li
273.565 393.188 li
273.874 392.9 li
274.026 392.832 li
274.223 392.862 li
274.601 393.019 li
274.867 393.099 li
275.167 393.137 li
275.438 393.057 li
275.506 392.738 li
275.652 392.449 li
276.118 392.437 li
276.878 392.54 li
277.161 392.434 li
277.603 392.553 li
278.071 392.732 li
278.446 392.832 li
278.474 392.669 li
278.314 392.313 li
278.255 391.96 li
278.572 391.798 li
280.883 391.431 li
281.607 391.591 li
282.09 391.969 li
283.828 394.063 li
284.59 395.315 li
284.961 395.729 li
285.468 395.78 li
285.846 395.344 li
285.944 394.634 li
285.59 393.868 li
286.208 393.863 li
286.807 394.578 li
287.179 395.562 li
287.12 396.371 li
286.037 397.295 li
285.925 397.5 li
285.761 397.285 li
285.736 397.151 li
285.675 397.068 li
285.404 396.993 li
285.139 396.981 li
284.432 397.182 li
284.552 397.533 li
284.712 397.8 li
284.929 397.972 li
285.607 398.155 li
285.813 398.44 li
285.918 398.728 li
286.029 398.856 li
286.628 399.086 li
287.705 400.019 li
288.394 400.12 li
287.995 399.571 li
287.086 398.752 li
286.803 398.136 li
286.904 397.604 li
287.411 397.7 li
288.503 398.238 li
290.617 398.194 li
291.373 398.44 li
292.04 398.965 li
291.64 399.137 li
290.91 399.015 li
290.587 398.668 li
290.275 398.584 li
289.403 398.569 li
289.074 398.668 li
288.899 398.804 li
288.792 398.955 li
288.594 399.478 li
292.865 399.854 li
294.095 399.478 li
293.989 399.384 li
293.787 399.157 li
293.677 399.063 li
293.929 398.747 li
293.739 398.521 li
293.369 398.249 li
293.088 397.824 li
294.311 397.858 li
294.948 397.981 li
295.488 398.238 li
295.187 398.387 li
294.859 398.433 li
294.586 398.538 li
294.451 398.856 li
295.284 398.863 li
297.693 398.44 li
298.364 398.209 li
298.696 398.209 li
298.905 398.556 li
299.01 398.856 li
300.011 400.759 li
300.369 401.118 li
300.829 401.182 li
301.614 401.158 li
302.335 401.354 li
303.242 401.717 li
304.102 401.903 li
304.689 401.572 li
304.698 401.193 li
304.548 400.82 li
304.501 400.552 li
304.806 400.516 li
305.008 400.671 li
305.229 400.96 li
305.539 401.236 li
306 401.365 li
306.742 401.365 li
306.874 401.294 li
306.907 401.146 li
306.923 400.998 li
307.183 400.787 li
307.026 400.108 li
307.203 399.895 li
307.522 399.965 li
307.274 398.35 li
307.552 397.693 li
307.69 396.91 li
cp
242.712 358.351 mo
243.058 358.731 li
243.345 359.146 li
243.871 359.367 li
244.439 359.523 li
244.884 359.74 li
245.397 360.128 li
245.745 360.208 li
246.537 360.072 li
245.194 358.041 li
244.627 357.021 li
244.175 355.932 li
244.085 355.828 li
244.005 355.753 li
243.939 355.667 li
243.904 355.52 li
242.856 357.582 li
242.756 357.877 li
242.832 358.009 li
242.604 358.115 li
242.712 358.351 li
cp
237.136 372.493 mo
238.327 370.93 li
238.741 370.884 li
239.209 371.456 li
239.254 371.804 li
239.456 372.415 li
239.712 373.014 li
239.923 373.331 li
240.116 373.39 li
240.34 373.379 li
240.515 373.261 li
240.569 372.715 li
240.801 372.867 li
241.045 373.172 li
241.13 373.331 li
241.663 373.266 li
242.034 372.99 li
242.211 372.511 li
242.167 371.846 li
241.958 371.199 li
241.609 370.505 li
241.159 369.924 li
240.635 369.613 li
240.409 369.578 li
239.957 369.604 li
238.122 370.195 li
237.502 370.178 li
237.224 370.243 li
237.13 370.691 li
236.946 371.154 li
236.894 371.248 li
236.656 371.458 li
236.47 371.95 li
236.354 372.498 li
236.31 372.896 li
236.794 372.74 li
237.136 372.493 li
cp
287.303 413.647 mo
286.073 413.009 li
286.029 412.801 li
286.364 412.829 li
286.67 412.917 li
286.949 412.947 li
287.19 412.801 li
287.21 412.599 li
287.2 411.827 li
287.258 411.538 li
287.049 411.446 li
286.8 411.284 li
286.567 411.063 li
286.444 410.824 li
286.335 410.7 li
286.162 410.75 li
285.873 410.915 li
285.566 410.933 li
284.341 411.343 li
284.061 411.333 li
284.018 411.126 li
284.187 411.02 li
284.277 410.893 li
284.328 410.736 li
284.377 410.521 li
283.346 410.156 li
282.698 410.012 li
281.938 409.581 li
281.669 409.483 li
281.188 409.726 li
280.539 410.666 li
279.94 410.73 li
280.823 409.302 li
280.822 408.965 li
280.453 408.376 li
280.869 408.175 li
282.247 408.22 li
282.167 408.634 li
284.414 408.823 li
284.975 408.634 li
284.936 408.446 li
284.392 408.22 li
284.787 407.828 li
284.414 407.444 li
283.804 407.167 li
283.487 407.083 li
283.26 406.667 li
282.857 406.385 li
282.396 406.142 li
281.988 405.836 li
279.268 403.204 li
278.757 402.788 li
278.221 402.446 li
276.971 401.938 li
276.705 401.992 li
276.43 402.295 li
276.148 402.45 li
275.763 402.397 li
275.066 402.19 li
274.332 402.213 li
273.822 402.368 li
273.578 402.809 li
273.623 403.663 li
273.606 403.831 li
273.541 403.983 li
273.537 404.154 li
273.685 404.378 li
273.829 404.525 li
273.932 404.655 li
274.007 404.804 li
274.056 404.999 li
274.005 405.222 li
273.865 405.446 li
273.818 405.713 li
274.037 406.046 li
275.083 407.113 li
275.541 407.76 li
275.812 408.446 li
275.843 408.865 li
275.777 409.194 li
275.5 409.795 li
275.232 410.04 li
274.516 410.04 li
274.252 410.201 li
274.274 410.855 li
274.633 411.664 li
274.88 412.392 li
274.549 412.801 li
274.215 412.775 li
273.898 412.642 li
273.566 412.562 li
273.196 412.688 li
272.692 413.021 li
272.48 413.222 li
272.296 413.528 li
272.202 413.953 li
272.275 414.289 li
272.431 414.641 li
272.566 415.101 li
272.527 415.48 li
272.424 415.797 li
272.491 416.077 li
272.965 416.328 li
272.2 416.685 li
271.78 417.022 li
271.318 417.081 li
271.111 417.28 li
270.934 417.759 li
270.796 418.497 li
270.807 419.269 li
271.067 419.856 li
271.59 419.994 li
272.412 419.946 li
273.189 419.776 li
273.586 419.569 li
273.841 419.134 li
274.186 418.745 li
274.491 418.734 li
274.644 419.476 li
275.254 418.769 li
275.445 418.378 li
275.611 417.797 li
274.242 418.288 li
273.513 418.412 li
272.992 418.007 li
273.651 417.794 li
274.711 416.938 li
275.147 417.176 li
275.148 416.438 li
275.133 416.328 li
275.296 416.226 li
275.685 416.138 li
276.103 415.738 li
276.349 415.957 li
276.598 416.396 li
276.91 416.762 li
277.219 416.802 li
278.073 416.678 li
278.489 416.855 li
278.863 417.108 li
279.322 417.274 li
279.753 417.286 li
280.03 417.063 li
280.374 416.558 li
281.632 415.343 li
282.188 415.101 li
283.646 414.876 li
285.458 414.876 li
285.08 414.402 li
285.984 414.719 li
286.22 414.565 li
285.911 413.819 li
285.993 413.602 li
286.535 413.631 li
286.745 413.755 li
287.011 414.148 li
287.164 414.252 li
287.35 414.265 li
287.598 414.235 li
287.761 414.136 li
287.679 413.942 li
287.303 413.647 li
cp
293.5 403.841 mo
293.271 404.097 li
292.945 404.23 li
292.576 404.266 li
292.854 404.646 li
293.179 404.938 li
293.396 405.206 li
293.35 405.526 li
293.519 405.239 li
293.923 404.739 li
294.089 404.108 li
293.569 403.436 li
293.5 403.841 li
cp
271.899 405.34 mo
272.246 405.239 li
272.476 405.008 li
272.623 404.492 li
272.258 404.266 li
271.918 404.19 li
271.57 404.23 li
271.328 404.434 li
271.312 404.837 li
271.557 405.233 li
271.899 405.34 li
cp
269.021 417.863 mo
268.522 418.2 li
268.323 418.628 li
268.597 418.992 li
269.114 418.835 li
269.627 418.468 li
269.89 418.212 li
269.568 417.81 li
269.021 417.863 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
303.438 317.725 mo
303.953 319.383 li
303.807 320.127 li
303.368 321.047 li
303.096 321.854 li
302.68 322.444 li
302.249 323.271 li
302.051 323.861 li
301.684 324.557 li
301.747 325.216 li
302.812 330.657 li
303.028 331.387 li
303.253 331.845 li
304.078 332.125 li
304.886 332.672 li
305.422 333.451 li
306.206 335.445 li
306.795 336.016 li
307.412 336.3 li
308.083 336.202 li
308.913 337.006 li
310.551 338.295 li
312.325 338.086 li
313.184 338.417 li
314.093 339.242 li
314.885 340.312 li
316.088 342.486 li
317.293 344.279 li
318.231 345.313 li
318.877 345.892 li
319.715 346.247 li
321.482 346.365 li
323.569 345.95 li
324.515 345.994 li
325.026 346.272 li
325.457 346.863 li
325.498 347.524 li
325.806 348.36 li
326.2 351.639 li
326.901 352.415 li
327.476 352.831 li
329.642 351.634 li
332.886 346.063 li
333.685 345.679 li
334.609 345.453 li
335.572 345.434 li
337.331 345.07 li
338.577 345.228 li
338.581 345.226 li
345.126 347.235 li
345.829 347.651 li
345.924 348.011 li
344.781 353.232 li
342.525 355.681 li
341.673 358.198 li
341.497 360.349 li
341.292 360.979 li
341.145 361.745 li
341.559 362.118 li
342.051 362.468 li
342.137 363.16 li
341.405 364.1 li
341.257 364.509 li
341.316 364.838 li
341.473 365.167 li
341.607 365.555 li
341.37 366.104 li
340.766 366.509 li
340.35 366.978 li
340.668 367.719 li
340.445 368.08 li
340.184 368.259 li
339.845 368.226 li
339.373 367.945 li
339.467 368.274 li
339.61 368.583 li
339.942 369.166 li
339.6 369.5 li
339.307 369.618 li
338.42 369.595 li
337.956 369.748 li
338.029 370.06 li
338.443 370.352 li
339.014 370.421 li
338.649 371.518 li
338.488 371.682 li
338.227 371.749 li
337.951 371.921 li
337.522 372.302 li
337.332 372.366 li
337.162 372.319 li
337.052 372.336 li
337.064 372.6 li
337.12 372.887 li
337.174 373.045 li
337.291 373.114 li
337.516 373.124 li
337.907 373.241 li
338.269 373.43 li
338.591 373.472 li
338.851 373.124 li
339.362 373.459 li
340.063 373.752 li
340.618 374.063 li
340.707 374.467 li
340.329 374.756 li
339.18 374.966 li
338.732 375.191 li
338.39 375.848 li
338.247 376.039 li
338.046 376.107 li
337.778 376.16 li
337.557 376.271 li
337.399 377.039 li
336.589 377.566 li
336.455 378.084 li
336.873 377.875 li
337.714 377.669 li
338.348 377.108 li
339.382 376.734 li
339.664 376.448 li
339.902 375.76 li
340.128 375.398 li
340.426 375.202 li
340.72 375.133 li
340.972 374.989 li
341.152 374.572 li
341.477 374.955 li
341.663 375.423 li
341.896 377.079 li
341.76 377.476 li
341.429 377.631 li
340.913 377.669 li
340.409 377.64 li
340.318 377.685 li
340.101 377.858 li
340.01 378.06 li
340.056 378.267 li
340.035 378.434 li
335.062 378.892 li
333.093 379.508 li
331.505 380.667 li
330.436 382.447 li
330.192 383.153 li
330.169 383.502 li
330.271 384.41 li
330.161 384.971 li
330.167 385.248 li
330.114 385.891 li
329.79 386.465 li
329.333 386.925 li
328.875 387.222 li
327.675 387.685 li
327.137 388.02 li
326.717 388.577 li
326.407 389.131 li
326.037 389.592 li
323.075 391.68 li
322.431 392.692 li
322.418 394.282 li
322.638 395.089 li
322.586 395.398 li
321.943 395.617 li
321.458 396.048 li
321.281 396.146 li
320.85 396.081 li
319.972 395.797 li
319.544 395.729 li
319.137 395.781 li
318.489 396.052 li
318.115 396.146 li
318.525 396.285 li
320.503 396.371 li
320.225 397.419 li
319.551 397.871 li
318.734 398.169 li
318.048 398.762 li
317.697 398.733 li
317.021 398.508 li
316.307 398.356 li
315.839 398.556 li
315.583 398.812 li
314.429 399.478 li
314.596 399.621 li
314.909 399.975 li
315.076 400.12 li
314.453 400.302 li
313.593 400.086 li
312.834 400.036 li
312.525 400.743 li
311.946 400.392 li
311.777 400.327 li
310.914 400.196 li
310.492 400.23 li
310.203 400.42 li
309.801 400.895 li
309.547 401.078 li
309.271 401.158 li
308.444 401.261 li
308.107 401.212 li
307.731 400.93 li
307.701 400.322 li
307.569 399.975 li
307.522 399.965 li
307.522 399.965 li
307.274 398.35 li
307.552 397.693 li
307.69 396.91 li
307.538 396.304 li
306.289 395.116 li
306.035 394.469 li
305.882 393.68 li
305.516 392.876 li
305.063 392.111 li
305.055 391.187 li
305.253 390.418 li
305.236 389.546 li
304.891 387.579 li
303.768 385.906 li
303.328 385.067 li
303.213 384.297 li
302.735 383.266 li
301.863 382.239 li
301.073 381.462 li
300.655 380.484 li
300.453 379.595 li
300.38 378.738 li
300.123 377.976 li
299.68 377.324 li
298.839 376.747 li
298.345 376.341 li
298.02 375.284 li
297.751 374.666 li
297.586 374.124 li
297.428 373.285 li
297.378 372.322 li
297.488 370.981 li
298.461 368.294 li
299.384 364.405 li
300.253 363.565 li
299.563 362.28 li
296.882 360.109 li
295.903 359.652 li
294.903 360.168 li
292.894 363.569 li
291.911 364.009 li
290.929 363.882 li
290.041 363.581 li
289.221 362.523 li
287.265 360.582 li
286.237 359.061 li
285.623 358.797 li
281.672 360.528 li
280.08 360.639 li
279.089 360.593 li
277.772 360.042 li
277.252 359.138 li
277.042 358.302 li
275.974 356.874 li
275.351 355.86 li
275.058 354.983 li
275.444 352.429 li
275.251 351.857 li
273.752 351.297 li
272.963 348.238 li
272.103 347.436 li
271.434 346.499 li
270.989 345.516 li
270.627 344.382 li
270.907 343.236 li
270.818 340.828 li
270.526 339.743 li
270.693 337.49 li
270.938 336.371 li
271.547 335.078 li
272.188 334.158 li
272.904 333.658 li
273.34 333.165 li
276.366 332.882 li
280.778 330.843 li
282.35 330.646 li
282.963 330.271 li
283.722 329.421 li
284.13 328.664 li
284.449 327.22 li
284.495 326.629 li
284.616 325.986 li
284.975 325.5 li
285.445 325.007 li
286.222 324.564 li
286.908 323.625 li
287.064 323.074 li
287.266 322.778 li
288.279 321.948 li
289.324 321.501 li
290.342 321.353 li
291.566 321.41 li
293.07 321.2 li
293.912 320.768 li
294.643 320.745 li
295.121 321.028 li
295.806 321.33 li
296.648 321.52 li
297.53 321.07 li
298.244 320.512 li
299.189 320.058 li
299.99 319.5 li
300.646 319.163 li
301.026 318.583 li
301.263 317.965 li
301.578 317.438 li
302.177 317.345 li
302.637 317.338 li
303.438 317.725 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
303.438 317.725 mo
303.953 319.383 li
303.807 320.127 li
303.368 321.047 li
303.096 321.854 li
302.68 322.444 li
302.249 323.271 li
302.051 323.861 li
301.684 324.557 li
301.747 325.216 li
302.812 330.657 li
303.028 331.387 li
303.253 331.845 li
304.078 332.125 li
304.886 332.672 li
305.422 333.451 li
306.206 335.445 li
306.795 336.016 li
307.412 336.3 li
308.083 336.202 li
308.913 337.006 li
310.551 338.295 li
312.325 338.086 li
313.184 338.417 li
314.093 339.242 li
314.885 340.312 li
316.088 342.486 li
317.293 344.279 li
318.231 345.313 li
318.877 345.892 li
319.715 346.247 li
321.482 346.365 li
323.569 345.95 li
324.515 345.994 li
325.026 346.272 li
325.457 346.863 li
325.498 347.524 li
325.806 348.36 li
326.2 351.639 li
326.901 352.415 li
327.476 352.831 li
329.642 351.634 li
332.886 346.063 li
333.685 345.679 li
334.609 345.453 li
335.572 345.434 li
337.331 345.07 li
338.577 345.228 li
338.581 345.226 li
345.126 347.235 li
345.829 347.651 li
345.924 348.011 li
344.781 353.232 li
342.525 355.681 li
341.673 358.198 li
341.497 360.349 li
341.292 360.979 li
341.145 361.745 li
341.559 362.118 li
342.051 362.468 li
342.137 363.16 li
341.405 364.1 li
341.257 364.509 li
341.316 364.838 li
341.473 365.167 li
341.607 365.555 li
341.37 366.104 li
340.766 366.509 li
340.35 366.978 li
340.668 367.719 li
340.445 368.08 li
340.184 368.259 li
339.845 368.226 li
339.373 367.945 li
339.467 368.274 li
339.61 368.583 li
339.942 369.166 li
339.6 369.5 li
339.307 369.618 li
338.42 369.595 li
337.956 369.748 li
338.029 370.06 li
338.443 370.352 li
339.014 370.421 li
338.649 371.518 li
338.488 371.682 li
338.227 371.749 li
337.951 371.921 li
337.522 372.302 li
337.332 372.366 li
337.162 372.319 li
337.052 372.336 li
337.064 372.6 li
337.12 372.887 li
337.174 373.045 li
337.291 373.114 li
337.516 373.124 li
337.907 373.241 li
338.269 373.43 li
338.591 373.472 li
338.851 373.124 li
339.362 373.459 li
340.063 373.752 li
340.618 374.063 li
340.707 374.467 li
340.329 374.756 li
339.18 374.966 li
338.732 375.191 li
338.39 375.848 li
338.247 376.039 li
338.046 376.107 li
337.778 376.16 li
337.557 376.271 li
337.399 377.039 li
336.589 377.566 li
336.455 378.084 li
336.873 377.875 li
337.714 377.669 li
338.348 377.108 li
339.382 376.734 li
339.664 376.448 li
339.902 375.76 li
340.128 375.398 li
340.426 375.202 li
340.72 375.133 li
340.972 374.989 li
341.152 374.572 li
341.477 374.955 li
341.663 375.423 li
341.896 377.079 li
341.76 377.476 li
341.429 377.631 li
340.913 377.669 li
340.409 377.64 li
340.318 377.685 li
340.101 377.858 li
340.01 378.06 li
340.056 378.267 li
340.035 378.434 li
335.062 378.892 li
333.093 379.508 li
331.505 380.667 li
330.436 382.447 li
330.192 383.153 li
330.169 383.502 li
330.271 384.41 li
330.161 384.971 li
330.167 385.248 li
330.114 385.891 li
329.79 386.465 li
329.333 386.925 li
328.875 387.222 li
327.675 387.685 li
327.137 388.02 li
326.717 388.577 li
326.407 389.131 li
326.037 389.592 li
323.075 391.68 li
322.431 392.692 li
322.418 394.282 li
322.638 395.089 li
322.586 395.398 li
321.943 395.617 li
321.458 396.048 li
321.281 396.146 li
320.85 396.081 li
319.972 395.797 li
319.544 395.729 li
319.137 395.781 li
318.489 396.052 li
318.115 396.146 li
318.525 396.285 li
320.503 396.371 li
320.225 397.419 li
319.551 397.871 li
318.734 398.169 li
318.048 398.762 li
317.697 398.733 li
317.021 398.508 li
316.307 398.356 li
315.839 398.556 li
315.583 398.812 li
314.429 399.478 li
314.596 399.621 li
314.909 399.975 li
315.076 400.12 li
314.453 400.302 li
313.593 400.086 li
312.834 400.036 li
312.525 400.743 li
311.946 400.392 li
311.777 400.327 li
310.914 400.196 li
310.492 400.23 li
310.203 400.42 li
309.801 400.895 li
309.547 401.078 li
309.271 401.158 li
308.444 401.261 li
308.107 401.212 li
307.731 400.93 li
307.701 400.322 li
307.569 399.975 li
307.522 399.965 li
307.522 399.965 li
307.274 398.35 li
307.552 397.693 li
307.69 396.91 li
307.538 396.304 li
306.289 395.116 li
306.035 394.469 li
305.882 393.68 li
305.516 392.876 li
305.063 392.111 li
305.055 391.187 li
305.253 390.418 li
305.236 389.546 li
304.891 387.579 li
303.768 385.906 li
303.328 385.067 li
303.213 384.297 li
302.735 383.266 li
301.863 382.239 li
301.073 381.462 li
300.655 380.484 li
300.453 379.595 li
300.38 378.738 li
300.123 377.976 li
299.68 377.324 li
298.839 376.747 li
298.345 376.341 li
298.02 375.284 li
297.751 374.666 li
297.586 374.124 li
297.428 373.285 li
297.378 372.322 li
297.488 370.981 li
298.461 368.294 li
299.384 364.405 li
300.253 363.565 li
299.563 362.28 li
296.882 360.109 li
295.903 359.652 li
294.903 360.168 li
292.894 363.569 li
291.911 364.009 li
290.929 363.882 li
290.041 363.581 li
289.221 362.523 li
287.265 360.582 li
286.237 359.061 li
285.623 358.797 li
281.672 360.528 li
280.08 360.639 li
279.089 360.593 li
277.772 360.042 li
277.252 359.138 li
277.042 358.302 li
275.974 356.874 li
275.351 355.86 li
275.058 354.983 li
275.444 352.429 li
275.251 351.857 li
273.752 351.297 li
272.963 348.238 li
272.103 347.436 li
271.434 346.499 li
270.989 345.516 li
270.627 344.382 li
270.907 343.236 li
270.818 340.828 li
270.526 339.743 li
270.693 337.49 li
270.938 336.371 li
271.547 335.078 li
272.188 334.158 li
272.904 333.658 li
273.34 333.165 li
276.366 332.882 li
280.778 330.843 li
282.35 330.646 li
282.963 330.271 li
283.722 329.421 li
284.13 328.664 li
284.449 327.22 li
284.495 326.629 li
284.616 325.986 li
284.975 325.5 li
285.445 325.007 li
286.222 324.564 li
286.908 323.625 li
287.064 323.074 li
287.266 322.778 li
288.279 321.948 li
289.324 321.501 li
290.342 321.353 li
291.566 321.41 li
293.07 321.2 li
293.912 320.768 li
294.643 320.745 li
295.121 321.028 li
295.806 321.33 li
296.648 321.52 li
297.53 321.07 li
298.244 320.512 li
299.189 320.058 li
299.99 319.5 li
300.646 319.163 li
301.026 318.583 li
301.263 317.965 li
301.578 317.438 li
302.177 317.345 li
302.637 317.338 li
303.438 317.725 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
391.071 78.3682 mo
390.652 78.0649 li
390.333 77.6782 li
390.111 76.9321 li
390.145 76.5898 li
390.258 76.3203 li
390.252 76.0269 li
389.951 75.6201 li
389.651 75.46 li
389.002 75.46 li
388.68 75.4009 li
388.165 75.1411 li
386.905 74.2871 li
386.542 73.8911 li
386.433 73.3174 li
386.366 72.5073 li
386.18 71.7358 li
385.7 71.2832 li
386.209 70.7119 li
386.573 70.0845 li
386.604 69.4619 li
386.112 68.9121 li
385.532 68.7168 li
383.797 68.4956 li
383.338 68.5771 li
383.187 68.9272 li
383.079 69.3364 li
382.886 69.6016 li
382.479 69.5366 li
382.267 69.2896 li
382.147 68.9023 li
382.13 68.4883 li
382.226 68.1641 li
382.252 67.6323 li
381.922 65.9204 li
381.956 65.2261 li
382.281 65.5576 li
382.528 65.9048 li
382.704 66.2856 li
382.841 66.7319 li
382.901 67.3081 li
382.85 67.5703 li
382.909 67.6323 li
383.316 67.6167 li
383.422 67.5137 li
383.506 67.0688 li
383.67 66.9688 li
383.841 67.0386 li
384.141 67.3311 li
384.328 67.3799 li
384.688 67.2822 li
385.317 66.999 li
385.698 66.9688 li
385.732 67.478 li
386.497 67.6943 li
386.389 68.2852 li
387.014 68.6733 li
387.565 69.1973 li
388.133 69.5288 li
388.819 69.3394 li
388.063 68.1641 li
387.967 67.8784 li
388.049 67.1226 li
387.979 66.7319 li
387.674 66.3936 li
386.046 65.4629 li
386.317 65.3862 li
386.586 65.2471 li
386.783 65.0205 li
386.834 64.6948 li
386.694 64.4253 li
386.408 64.3018 li
385.727 64.1475 li
386.077 63.9526 li
386.209 63.9106 li
385.168 63.377 li
384.696 63.0146 li
384.949 62.853 li
385.417 62.873 li
386.598 63.0635 li
387.017 63.2837 li
387.227 62.2158 li
386.907 61.4707 li
385.503 60.1509 li
384.021 59.0522 li
383.859 58.6724 li
384.856 58.5288 li
384.671 58.1455 li
383.931 57.0381 li
383.683 56.8047 li
383.607 56.748 li
383.484 56.4805 li
383.368 56.3735 li
383.262 56.3628 li
383.205 56.4346 li
383.188 56.5225 li
383.215 56.5674 li
382.67 56.4346 li
382.131 56.3735 li
381.499 55.9268 li
380.298 53.8052 li
379.785 53.1055 li
380.064 53.3599 li
380.95 53.9873 li
381.767 54.7466 li
381.932 54.8496 li
382.274 54.5132 li
381.369 53.5518 li
381.563 53.1055 li
381.54 52.9106 li
380.964 52.9443 li
380.393 52.8823 li
379.917 52.562 li
379.63 51.814 li
379.701 51.0806 li
379.975 50.4399 li
380.119 49.7993 li
379.825 49.0239 li
379.108 49.6763 li
378.493 50.4375 li
378.396 50.7446 li
378.418 50.896 li
378.393 51.0039 li
378.124 51.1729 li
378.11 51.0703 li
377.835 50.978 li
377.484 50.9268 li
377.219 50.958 li
377.295 51.0703 li
377.465 51.3882 li
376.127 51.2036 li
375.513 51.2402 li
375.197 51.6035 li
374.994 51.3882 li
375.3 51.8809 li
375.974 52.208 li
376.738 52.4033 li
377.317 52.4648 li
377.548 52.5981 li
377.671 52.9014 li
377.646 53.2056 li
377.425 53.3413 li
377.205 53.2441 li
377.02 53.0439 li
376.783 52.8853 li
376.413 52.9106 li
376.475 53.0518 li
376.593 53.3979 li
376.666 53.5366 li
376.365 53.501 li
376.081 53.3931 li
375.537 53.1055 li
375.507 53.5415 li
375.392 54.0493 li
375.256 54.3877 li
375.17 54.2979 li
375.011 53.4521 li
374.882 53.0669 li
374.713 52.793 li
373.618 51.7832 li
373.405 51.3882 li
373.434 50.9883 li
373.571 50.5889 li
373.572 50.1606 li
373.199 49.666 li
372.962 49.8608 li
372.687 49.9272 li
372.4 49.8608 li
372.125 49.666 li
371.599 49.8994 li
371.157 49.5762 li
371.185 49.1333 li
372.048 49.0239 li
371.466 48.2705 li
371.199 48.0703 li
371.438 47.8633 li
372.023 47.5176 li
372.384 47.9502 li
372.65 47.9556 li
372.846 47.7935 li
372.968 47.75 li
373.119 48.0703 li
373.187 48.4214 li
373.303 48.7085 li
373.611 48.8232 li
374.646 48.4858 li
374.346 47.6943 li
373.771 47.0439 li
373.082 46.6089 li
372.44 46.4419 li
370.974 46.6138 li
370.14 46.4849 li
369.717 45.9072 li
369.458 45.1367 li
368.992 44.6377 li
367.854 43.8447 li
367.346 43.3096 li
367.078 42.9414 li
367.129 42.7729 li
366.37 42.7192 li
365.987 42.7451 li
365.552 42.9873 li
365.123 43.0571 li
364.959 43.2207 li
364.945 43.4043 li
365.063 43.8701 li
365.063 44.0615 li
364.662 45.1343 li
364.683 45.4282 li
364.757 45.6357 li
364.651 45.7583 li
364.119 45.7993 li
363.142 45.0366 li
363.067 44.771 li
363.284 44.4995 li
363.813 44.0615 li
363.917 43.7705 li
363.968 43.4482 li
364.089 43.1641 li
364.402 42.9873 li
364.044 42.8418 li
363.865 42.7905 li
363.662 42.7729 li
363.435 42.709 li
363.313 42.5356 li
363.209 42.3154 li
363.045 42.1133 li
362.96 41.937 li
362.949 41.7295 li
362.885 41.5591 li
362.623 41.4863 li
362.435 41.5537 li
362.35 41.6987 li
362.305 41.8496 li
362.227 41.917 li
361.441 41.9141 li
361.053 41.7632 li
360.695 41.0703 li
360.38 40.9092 li
360.032 40.9556 li
359.763 41.2725 li
359.416 40.7959 li
359.022 40.4746 li
358.685 40.4951 li
358.499 41.0391 li
358.594 41.5327 li
358.889 41.896 li
359.259 42.2056 li
359.584 42.5581 li
359.544 42.7114 li
359.313 43.2207 li
358.752 42.5815 li
358.235 42.4126 li
357 42.5581 li
356.42 42.4512 li
355.879 42.1621 li
355.395 41.7476 li
354.981 41.2725 li
354.693 40.8687 li
354.366 40.311 li
354.167 39.7173 li
354.284 39.2144 li
354.517 39.1074 li
355.598 39.1074 li
356.603 38.6626 li
356.153 38.1699 li
356.045 37.9121 li
356.138 37.5898 li
355.854 37.6431 li
355.119 38.0366 li
355.217 37.5308 li
355.22 37.2451 li
355.161 36.9644 li
354.986 36.5762 li
354.793 36.3564 li
354.578 36.3618 li
354.328 36.6377 li
354.355 36.8413 li
354.511 37.1426 li
354.612 37.5107 li
354.487 37.9297 li
353.925 38.3018 li
353.302 38.4155 li
352.841 38.6294 li
352.782 39.3223 li
353.326 40.8398 li
353.493 41.7227 li
353.212 42.1133 li
352.859 42.252 li
352.76 42.5713 li
352.724 42.9414 li
352.556 43.2207 li
352.349 43.2358 li
351.466 42.9873 li
351.179 42.9727 li
351.014 42.9951 li
350.921 42.8208 li
350.779 41.5229 li
350.825 41.2056 li
350.951 40.9395 li
351.42 40.27 li
351.453 39.9072 li
347.755 37.8779 li
346.537 36.7754 li
346.299 35.6592 li
346.891 36.0913 li
348.334 37.5898 li
347.928 36.272 li
346.925 35.2075 li
345.744 34.2656 li
344.784 33.3037 li
344.35 32.0771 li
343.866 30.2427 li
343.292 28.709 li
342.577 28.3677 li
343.053 29.0342 li
343.319 29.937 li
343.367 30.8599 li
343.167 31.5947 li
342.937 31.8037 li
342.811 31.5869 li
342.602 29.7813 li
342.505 29.3765 li
342.319 29.0039 li
342.219 29.3228 li
342.02 29.4683 li
341.753 29.4482 li
341.45 29.2588 li
341.553 29.0474 li
341.613 28.833 li
341.693 28.3677 li
341.406 28.4229 li
341.232 28.6191 li
341.142 28.9097 li
341.11 29.2588 li
340.216 28.6494 li
339.927 28.3677 li
340.147 28.2373 li
340.292 28.0537 li
340.364 27.8071 li
340.348 27.4902 li
340.806 27.7554 li
340.972 27.5571 li
340.977 26.8687 li
341.074 26.0815 li
341.26 26.0234 li
341.8 26.207 li
341.765 26.3569 li
341.735 26.7241 li
341.705 26.8687 li
342.091 27.0215 li
342.324 27.3936 li
342.472 27.7661 li
342.62 27.939 li
343.032 27.9009 li
343.235 27.7607 li
343.304 27.5005 li
343.321 27.083 li
343.07 25.4072 li
343.193 24.7798 li
343.883 24.3066 li
343.426 23.8662 li
343.139 23.9453 li
342.911 24.2559 li
342.653 24.5005 li
342.208 24.584 li
339.23 24.3247 li
338.511 24.8467 li
337.722 25.0303 li
337.435 25.3765 li
336.735 24.9839 li
335.208 24.9175 li
334.582 24.6069 li
334.125 24.3091 li
334.042 24.6226 li
334.138 25.1211 li
334.218 25.3765 li
334.019 25.957 li
333.876 26.1885 li
333.643 26.4409 li
336.004 27.7637 li
337.16 28.6655 li
343.294 35.6313 li
343.784 35.874 li
344.161 36.1978 li
345.213 38.249 li
345.773 38.9214 li
347.525 40.5024 li
347.93 41.0244 li
348.998 42.9873 li
349.538 44.5684 li
349.642 46.1816 li
349.333 47.6587 li
348.641 48.8232 li
348.146 48.5781 li
347.629 48.4673 li
347.281 48.6416 li
347.298 49.2563 li
347.539 49.6714 li
348.704 50.7603 li
349.414 51.5776 li
349.809 51.8906 li
350.274 52.0288 li
350.739 51.9165 li
351.424 51.4805 li
351.822 51.6035 li
351.565 51.9746 li
350.737 52.6519 li
350.559 52.9106 li
350.746 53.2441 li
351.67 54.1821 li
351.977 54.4185 li
352.112 53.6035 li
352.312 52.8823 li
352.72 52.3906 li
353.493 52.2646 li
353.386 52.6191 li
353.207 52.9443 li
352.767 53.5366 li
352.941 53.521 li
353.298 53.5469 li
353.473 53.5366 li
352.717 54.5444 li
352.647 55.0703 li
353.063 55.9219 li
355.661 59.0166 li
355.896 59.2222 li
356.125 59.1709 li
356.181 58.9087 li
355.979 56.5674 li
355.936 56.5781 li
355.849 56.4834 li
355.765 56.3223 li
355.75 56.1367 li
355.959 55.8682 li
356.265 55.7217 li
356.41 55.5107 li
356.127 55.0649 li
356.581 54.665 li
356.851 54.5054 li
357.048 54.5132 li
357.411 54.9902 li
357.593 55.0981 li
357.816 54.957 li
358.028 54.8599 li
358.306 54.79 li
358.451 54.6392 li
358.131 54.0215 li
358.26 53.9058 li
358.521 53.937 li
359.237 54.3667 li
359.742 54.375 li
360.123 54.0981 li
360.201 53.5366 li
359.941 53.0288 li
359.547 52.4395 li
359.366 51.8599 li
359.761 51.3882 li
360.364 52.8696 li
360.708 53.3413 li
360.571 52.1982 li
360.644 52.0288 li
360.935 52.0654 li
361.07 52.188 li
361.13 52.4214 li
361.168 52.793 li
361.469 52.8823 li
362.38 52.5981 li
362.045 53.3135 li
361.962 53.9727 li
361.883 54.1821 li
361.582 54.4038 li
361.413 54.3257 li
361.246 54.1719 li
361.004 54.1821 li
360.61 54.6211 li
360.571 55.2139 li
360.632 55.835 li
360.552 56.3735 li
359.714 55.2749 li
359.684 55.6807 li
359.867 56.7759 li
359.837 56.9995 li
359.452 56.8677 li
359.137 56.5605 li
358.853 56.2041 li
358.558 55.9219 li
358.544 56.0605 li
358.438 56.3735 li
357.903 56.1274 li
357.622 56.5371 li
357.531 57.2656 li
357.565 57.9771 li
357.435 58.5029 li
356.726 59.6426 li
356.6 60.1509 li
356.836 60.7422 li
363.621 68.5464 li
370.402 76.3584 li
371.561 78.2109 li
375.471 82.7646 li
376.67 85.813 li
377.425 86.9204 li
378.666 86.8901 li
379.797 86.3696 li
380.254 85.9419 li
380.38 85.2778 li
380.01 84.5874 li
379.423 84.0522 li
379.127 83.6709 li
379.623 83.4316 li
379.342 83.0327 li
378.971 83.0171 li
378.586 83.0737 li
378.237 82.8833 li
376.555 80.7207 li
376.338 80.5352 li
376.052 80.3428 li
375.797 80.123 li
375.495 79.5117 li
375.18 79.3081 li
374.831 79.1606 li
374.567 78.9829 li
374.324 78.6465 li
373.915 77.9463 li
373.7 77.6709 li
373.427 77.0845 li
373.209 76.2505 li
372.896 75.5093 li
372.317 75.1851 li
372.102 74.8584 li
370.551 73.0083 li
370.594 72.4995 li
371.509 71.9727 li
371.581 71.2832 li
371.423 71.1279 li
371.143 70.9072 li
370.916 70.6016 li
370.916 70.1846 li
371.092 70.167 li
371.398 70.3618 li
371.704 70.6401 li
371.879 70.8506 li
372.096 71.6426 li
371.912 72.1318 li
371.076 73.0083 li
371.945 73.5928 li
372.31 73.9629 li
372.722 74.9072 li
373.558 75.6797 li
373.78 76.1582 li
373.954 77.3857 li
374.201 77.9644 li
374.639 78.2109 li
374.998 78.3633 li
375.488 78.708 li
375.922 79.1094 li
376.119 79.4077 li
376.39 79.5986 li
377.622 79.6392 li
378.11 79.7402 li
378.603 80.1421 li
378.942 80.5918 li
379.228 81.0557 li
379.957 81.9619 li
380.137 82.0752 li
380.425 82.1162 li
380.688 82.2139 li
381.078 82.6519 li
381.298 82.7646 li
381.554 82.7676 li
381.763 82.7056 li
381.894 82.5381 li
381.914 82.2349 li
382.052 82.1675 li
382.946 81.9204 li
382.403 81.2231 li
382.09 80.9443 li
381.854 80.9429 li
381.687 81.2715 li
381.575 81.4238 li
381.392 81.4878 li
381.136 81.3599 li
381.098 81.0557 li
381.201 80.605 li
380.884 80.2036 li
380.607 80.0156 li
380.273 79.959 li
379.807 79.9565 li
379.445 79.8198 li
379.36 79.1353 li
379.057 78.875 li
380.072 77.9795 li
380.463 77.9976 li
380.463 78.875 li
380.926 78.2422 li
381.18 78.0381 li
381.585 78.0132 li
381.429 78.6279 li
381.378 78.9551 li
381.392 79.3081 li
381.469 79.7539 li
381.561 79.8613 li
381.725 79.8511 li
382.017 79.9565 li
382.25 79.9746 li
382.465 79.9077 li
382.64 80 li
382.771 80.4971 li
382.894 80.7744 li
383.112 80.7876 li
383.391 80.7363 li
383.691 80.8394 li
383.575 80.9629 li
383.244 81.4878 li
383.938 81.1226 li
384.456 80.2524 li
384.665 79.1816 li
384.419 78.2109 li
385.429 78.4893 li
385.706 78.6592 li
386.07 79.1606 li
386.026 79.4468 li
385.713 79.4956 li
385.261 79.2891 li
385.201 79.7549 li
385.205 80.0313 li
385.183 80.2578 li
385.067 80.605 li
384.563 81.3799 li
384.294 82.3965 li
384.254 83.1997 li
384.061 83.167 li
383.579 82.7646 li
382.795 82.5225 li
382.556 82.6519 li
382.755 83.2153 li
382.99 83.3853 li
383.376 83.5249 li
384.04 83.6484 li
384.478 83.3882 li
384.921 82.9063 li
385.308 82.6318 li
385.555 82.999 li
385.813 82.8164 li
386.353 82.2397 li
386.589 82.1162 li
386.849 82.0903 li
386.949 82.0806 li
387.294 81.9673 li
387.605 81.771 li
387.843 81.4878 li
388.531 80.9331 li
390.774 78.7949 li
391.208 78.5039 li
391.071 78.3682 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
391.071 78.3682 mo
390.652 78.0649 li
390.333 77.6782 li
390.111 76.9321 li
390.145 76.5898 li
390.258 76.3203 li
390.252 76.0269 li
389.951 75.6201 li
389.651 75.46 li
389.002 75.46 li
388.68 75.4009 li
388.165 75.1411 li
386.905 74.2871 li
386.542 73.8911 li
386.433 73.3174 li
386.366 72.5073 li
386.18 71.7358 li
385.7 71.2832 li
386.209 70.7119 li
386.573 70.0845 li
386.604 69.4619 li
386.112 68.9121 li
385.532 68.7168 li
383.797 68.4956 li
383.338 68.5771 li
383.187 68.9272 li
383.079 69.3364 li
382.886 69.6016 li
382.479 69.5366 li
382.267 69.2896 li
382.147 68.9023 li
382.13 68.4883 li
382.226 68.1641 li
382.252 67.6323 li
381.922 65.9204 li
381.956 65.2261 li
382.281 65.5576 li
382.528 65.9048 li
382.704 66.2856 li
382.841 66.7319 li
382.901 67.3081 li
382.85 67.5703 li
382.909 67.6323 li
383.316 67.6167 li
383.422 67.5137 li
383.506 67.0688 li
383.67 66.9688 li
383.841 67.0386 li
384.141 67.3311 li
384.328 67.3799 li
384.688 67.2822 li
385.317 66.999 li
385.698 66.9688 li
385.732 67.478 li
386.497 67.6943 li
386.389 68.2852 li
387.014 68.6733 li
387.565 69.1973 li
388.133 69.5288 li
388.819 69.3394 li
388.063 68.1641 li
387.967 67.8784 li
388.049 67.1226 li
387.979 66.7319 li
387.674 66.3936 li
386.046 65.4629 li
386.317 65.3862 li
386.586 65.2471 li
386.783 65.0205 li
386.834 64.6948 li
386.694 64.4253 li
386.408 64.3018 li
385.727 64.1475 li
386.077 63.9526 li
386.209 63.9106 li
385.168 63.377 li
384.696 63.0146 li
384.949 62.853 li
385.417 62.873 li
386.598 63.0635 li
387.017 63.2837 li
387.227 62.2158 li
386.907 61.4707 li
385.503 60.1509 li
384.021 59.0522 li
383.859 58.6724 li
384.856 58.5288 li
384.671 58.1455 li
383.931 57.0381 li
383.683 56.8047 li
383.607 56.748 li
383.484 56.4805 li
383.368 56.3735 li
383.262 56.3628 li
383.205 56.4346 li
383.188 56.5225 li
383.215 56.5674 li
382.67 56.4346 li
382.131 56.3735 li
381.499 55.9268 li
380.298 53.8052 li
379.785 53.1055 li
380.064 53.3599 li
380.95 53.9873 li
381.767 54.7466 li
381.932 54.8496 li
382.274 54.5132 li
381.369 53.5518 li
381.563 53.1055 li
381.54 52.9106 li
380.964 52.9443 li
380.393 52.8823 li
379.917 52.562 li
379.63 51.814 li
379.701 51.0806 li
379.975 50.4399 li
380.119 49.7993 li
379.825 49.0239 li
379.108 49.6763 li
378.493 50.4375 li
378.396 50.7446 li
378.418 50.896 li
378.393 51.0039 li
378.124 51.1729 li
378.11 51.0703 li
377.835 50.978 li
377.484 50.9268 li
377.219 50.958 li
377.295 51.0703 li
377.465 51.3882 li
376.127 51.2036 li
375.513 51.2402 li
375.197 51.6035 li
374.994 51.3882 li
375.3 51.8809 li
375.974 52.208 li
376.738 52.4033 li
377.317 52.4648 li
377.548 52.5981 li
377.671 52.9014 li
377.646 53.2056 li
377.425 53.3413 li
377.205 53.2441 li
377.02 53.0439 li
376.783 52.8853 li
376.413 52.9106 li
376.475 53.0518 li
376.593 53.3979 li
376.666 53.5366 li
376.365 53.501 li
376.081 53.3931 li
375.537 53.1055 li
375.507 53.5415 li
375.392 54.0493 li
375.256 54.3877 li
375.17 54.2979 li
375.011 53.4521 li
374.882 53.0669 li
374.713 52.793 li
373.618 51.7832 li
373.405 51.3882 li
373.434 50.9883 li
373.571 50.5889 li
373.572 50.1606 li
373.199 49.666 li
372.962 49.8608 li
372.687 49.9272 li
372.4 49.8608 li
372.125 49.666 li
371.599 49.8994 li
371.157 49.5762 li
371.185 49.1333 li
372.048 49.0239 li
371.466 48.2705 li
371.199 48.0703 li
371.438 47.8633 li
372.023 47.5176 li
372.384 47.9502 li
372.65 47.9556 li
372.846 47.7935 li
372.968 47.75 li
373.119 48.0703 li
373.187 48.4214 li
373.303 48.7085 li
373.611 48.8232 li
374.646 48.4858 li
374.346 47.6943 li
373.771 47.0439 li
373.082 46.6089 li
372.44 46.4419 li
370.974 46.6138 li
370.14 46.4849 li
369.717 45.9072 li
369.458 45.1367 li
368.992 44.6377 li
367.854 43.8447 li
367.346 43.3096 li
367.078 42.9414 li
367.129 42.7729 li
366.37 42.7192 li
365.987 42.7451 li
365.552 42.9873 li
365.123 43.0571 li
364.959 43.2207 li
364.945 43.4043 li
365.063 43.8701 li
365.063 44.0615 li
364.662 45.1343 li
364.683 45.4282 li
364.757 45.6357 li
364.651 45.7583 li
364.119 45.7993 li
363.142 45.0366 li
363.067 44.771 li
363.284 44.4995 li
363.813 44.0615 li
363.917 43.7705 li
363.968 43.4482 li
364.089 43.1641 li
364.402 42.9873 li
364.044 42.8418 li
363.865 42.7905 li
363.662 42.7729 li
363.435 42.709 li
363.313 42.5356 li
363.209 42.3154 li
363.045 42.1133 li
362.96 41.937 li
362.949 41.7295 li
362.885 41.5591 li
362.623 41.4863 li
362.435 41.5537 li
362.35 41.6987 li
362.305 41.8496 li
362.227 41.917 li
361.441 41.9141 li
361.053 41.7632 li
360.695 41.0703 li
360.38 40.9092 li
360.032 40.9556 li
359.763 41.2725 li
359.416 40.7959 li
359.022 40.4746 li
358.685 40.4951 li
358.499 41.0391 li
358.594 41.5327 li
358.889 41.896 li
359.259 42.2056 li
359.584 42.5581 li
359.544 42.7114 li
359.313 43.2207 li
358.752 42.5815 li
358.235 42.4126 li
357 42.5581 li
356.42 42.4512 li
355.879 42.1621 li
355.395 41.7476 li
354.981 41.2725 li
354.693 40.8687 li
354.366 40.311 li
354.167 39.7173 li
354.284 39.2144 li
354.517 39.1074 li
355.598 39.1074 li
356.603 38.6626 li
356.153 38.1699 li
356.045 37.9121 li
356.138 37.5898 li
355.854 37.6431 li
355.119 38.0366 li
355.217 37.5308 li
355.22 37.2451 li
355.161 36.9644 li
354.986 36.5762 li
354.793 36.3564 li
354.578 36.3618 li
354.328 36.6377 li
354.355 36.8413 li
354.511 37.1426 li
354.612 37.5107 li
354.487 37.9297 li
353.925 38.3018 li
353.302 38.4155 li
352.841 38.6294 li
352.782 39.3223 li
353.326 40.8398 li
353.493 41.7227 li
353.212 42.1133 li
352.859 42.252 li
352.76 42.5713 li
352.724 42.9414 li
352.556 43.2207 li
352.349 43.2358 li
351.466 42.9873 li
351.179 42.9727 li
351.014 42.9951 li
350.921 42.8208 li
350.779 41.5229 li
350.825 41.2056 li
350.951 40.9395 li
351.42 40.27 li
351.453 39.9072 li
347.755 37.8779 li
346.537 36.7754 li
346.299 35.6592 li
346.891 36.0913 li
348.334 37.5898 li
347.928 36.272 li
346.925 35.2075 li
345.744 34.2656 li
344.784 33.3037 li
344.35 32.0771 li
343.866 30.2427 li
343.292 28.709 li
342.577 28.3677 li
343.053 29.0342 li
343.319 29.937 li
343.367 30.8599 li
343.167 31.5947 li
342.937 31.8037 li
342.811 31.5869 li
342.602 29.7813 li
342.505 29.3765 li
342.319 29.0039 li
342.219 29.3228 li
342.02 29.4683 li
341.753 29.4482 li
341.45 29.2588 li
341.553 29.0474 li
341.613 28.833 li
341.693 28.3677 li
341.406 28.4229 li
341.232 28.6191 li
341.142 28.9097 li
341.11 29.2588 li
340.216 28.6494 li
339.927 28.3677 li
340.147 28.2373 li
340.292 28.0537 li
340.364 27.8071 li
340.348 27.4902 li
340.806 27.7554 li
340.972 27.5571 li
340.977 26.8687 li
341.074 26.0815 li
341.26 26.0234 li
341.8 26.207 li
341.765 26.3569 li
341.735 26.7241 li
341.705 26.8687 li
342.091 27.0215 li
342.324 27.3936 li
342.472 27.7661 li
342.62 27.939 li
343.032 27.9009 li
343.235 27.7607 li
343.304 27.5005 li
343.321 27.083 li
343.07 25.4072 li
343.193 24.7798 li
343.883 24.3066 li
343.426 23.8662 li
343.139 23.9453 li
342.911 24.2559 li
342.653 24.5005 li
342.208 24.584 li
339.23 24.3247 li
338.511 24.8467 li
337.722 25.0303 li
337.435 25.3765 li
336.735 24.9839 li
335.208 24.9175 li
334.582 24.6069 li
334.125 24.3091 li
334.042 24.6226 li
334.138 25.1211 li
334.218 25.3765 li
334.019 25.957 li
333.876 26.1885 li
333.643 26.4409 li
336.004 27.7637 li
337.16 28.6655 li
343.294 35.6313 li
343.784 35.874 li
344.161 36.1978 li
345.213 38.249 li
345.773 38.9214 li
347.525 40.5024 li
347.93 41.0244 li
348.998 42.9873 li
349.538 44.5684 li
349.642 46.1816 li
349.333 47.6587 li
348.641 48.8232 li
348.146 48.5781 li
347.629 48.4673 li
347.281 48.6416 li
347.298 49.2563 li
347.539 49.6714 li
348.704 50.7603 li
349.414 51.5776 li
349.809 51.8906 li
350.274 52.0288 li
350.739 51.9165 li
351.424 51.4805 li
351.822 51.6035 li
351.565 51.9746 li
350.737 52.6519 li
350.559 52.9106 li
350.746 53.2441 li
351.67 54.1821 li
351.977 54.4185 li
352.112 53.6035 li
352.312 52.8823 li
352.72 52.3906 li
353.493 52.2646 li
353.386 52.6191 li
353.207 52.9443 li
352.767 53.5366 li
352.941 53.521 li
353.298 53.5469 li
353.473 53.5366 li
352.717 54.5444 li
352.647 55.0703 li
353.063 55.9219 li
355.661 59.0166 li
355.896 59.2222 li
356.125 59.1709 li
356.181 58.9087 li
355.979 56.5674 li
355.936 56.5781 li
355.849 56.4834 li
355.765 56.3223 li
355.75 56.1367 li
355.959 55.8682 li
356.265 55.7217 li
356.41 55.5107 li
356.127 55.0649 li
356.581 54.665 li
356.851 54.5054 li
357.048 54.5132 li
357.411 54.9902 li
357.593 55.0981 li
357.816 54.957 li
358.028 54.8599 li
358.306 54.79 li
358.451 54.6392 li
358.131 54.0215 li
358.26 53.9058 li
358.521 53.937 li
359.237 54.3667 li
359.742 54.375 li
360.123 54.0981 li
360.201 53.5366 li
359.941 53.0288 li
359.547 52.4395 li
359.366 51.8599 li
359.761 51.3882 li
360.364 52.8696 li
360.708 53.3413 li
360.571 52.1982 li
360.644 52.0288 li
360.935 52.0654 li
361.07 52.188 li
361.13 52.4214 li
361.168 52.793 li
361.469 52.8823 li
362.38 52.5981 li
362.045 53.3135 li
361.962 53.9727 li
361.883 54.1821 li
361.582 54.4038 li
361.413 54.3257 li
361.246 54.1719 li
361.004 54.1821 li
360.61 54.6211 li
360.571 55.2139 li
360.632 55.835 li
360.552 56.3735 li
359.714 55.2749 li
359.684 55.6807 li
359.867 56.7759 li
359.837 56.9995 li
359.452 56.8677 li
359.137 56.5605 li
358.853 56.2041 li
358.558 55.9219 li
358.544 56.0605 li
358.438 56.3735 li
357.903 56.1274 li
357.622 56.5371 li
357.531 57.2656 li
357.565 57.9771 li
357.435 58.5029 li
356.726 59.6426 li
356.6 60.1509 li
356.836 60.7422 li
363.621 68.5464 li
370.402 76.3584 li
371.561 78.2109 li
375.471 82.7646 li
376.67 85.813 li
377.425 86.9204 li
378.666 86.8901 li
379.797 86.3696 li
380.254 85.9419 li
380.38 85.2778 li
380.01 84.5874 li
379.423 84.0522 li
379.127 83.6709 li
379.623 83.4316 li
379.342 83.0327 li
378.971 83.0171 li
378.586 83.0737 li
378.237 82.8833 li
376.555 80.7207 li
376.338 80.5352 li
376.052 80.3428 li
375.797 80.123 li
375.495 79.5117 li
375.18 79.3081 li
374.831 79.1606 li
374.567 78.9829 li
374.324 78.6465 li
373.915 77.9463 li
373.7 77.6709 li
373.427 77.0845 li
373.209 76.2505 li
372.896 75.5093 li
372.317 75.1851 li
372.102 74.8584 li
370.551 73.0083 li
370.594 72.4995 li
371.509 71.9727 li
371.581 71.2832 li
371.423 71.1279 li
371.143 70.9072 li
370.916 70.6016 li
370.916 70.1846 li
371.092 70.167 li
371.398 70.3618 li
371.704 70.6401 li
371.879 70.8506 li
372.096 71.6426 li
371.912 72.1318 li
371.076 73.0083 li
371.945 73.5928 li
372.31 73.9629 li
372.722 74.9072 li
373.558 75.6797 li
373.78 76.1582 li
373.954 77.3857 li
374.201 77.9644 li
374.639 78.2109 li
374.998 78.3633 li
375.488 78.708 li
375.922 79.1094 li
376.119 79.4077 li
376.39 79.5986 li
377.622 79.6392 li
378.11 79.7402 li
378.603 80.1421 li
378.942 80.5918 li
379.228 81.0557 li
379.957 81.9619 li
380.137 82.0752 li
380.425 82.1162 li
380.688 82.2139 li
381.078 82.6519 li
381.298 82.7646 li
381.554 82.7676 li
381.763 82.7056 li
381.894 82.5381 li
381.914 82.2349 li
382.052 82.1675 li
382.946 81.9204 li
382.403 81.2231 li
382.09 80.9443 li
381.854 80.9429 li
381.687 81.2715 li
381.575 81.4238 li
381.392 81.4878 li
381.136 81.3599 li
381.098 81.0557 li
381.201 80.605 li
380.884 80.2036 li
380.607 80.0156 li
380.273 79.959 li
379.807 79.9565 li
379.445 79.8198 li
379.36 79.1353 li
379.057 78.875 li
380.072 77.9795 li
380.463 77.9976 li
380.463 78.875 li
380.926 78.2422 li
381.18 78.0381 li
381.585 78.0132 li
381.429 78.6279 li
381.378 78.9551 li
381.392 79.3081 li
381.469 79.7539 li
381.561 79.8613 li
381.725 79.8511 li
382.017 79.9565 li
382.25 79.9746 li
382.465 79.9077 li
382.64 80 li
382.771 80.4971 li
382.894 80.7744 li
383.112 80.7876 li
383.391 80.7363 li
383.691 80.8394 li
383.575 80.9629 li
383.244 81.4878 li
383.938 81.1226 li
384.456 80.2524 li
384.665 79.1816 li
384.419 78.2109 li
385.429 78.4893 li
385.706 78.6592 li
386.07 79.1606 li
386.026 79.4468 li
385.713 79.4956 li
385.261 79.2891 li
385.201 79.7549 li
385.205 80.0313 li
385.183 80.2578 li
385.067 80.605 li
384.563 81.3799 li
384.294 82.3965 li
384.254 83.1997 li
384.061 83.167 li
383.579 82.7646 li
382.795 82.5225 li
382.556 82.6519 li
382.755 83.2153 li
382.99 83.3853 li
383.376 83.5249 li
384.04 83.6484 li
384.478 83.3882 li
384.921 82.9063 li
385.308 82.6318 li
385.555 82.999 li
385.813 82.8164 li
386.353 82.2397 li
386.589 82.1162 li
386.849 82.0903 li
386.949 82.0806 li
387.294 81.9673 li
387.605 81.771 li
387.843 81.4878 li
388.531 80.9331 li
390.774 78.7949 li
391.208 78.5039 li
391.071 78.3682 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
385.523 230.049 mo
385.473 229.828 li
385.429 229.849 li
385.048 230.208 li
384.886 230.629 li
385.192 230.96 li
385.041 231.291 li
384.827 231.277 li
384.591 231.153 li
384.371 231.169 li
384.202 231.371 li
383.911 232.099 li
383.622 232.433 li
383.239 232.695 li
382.427 233.032 li
382.485 232.814 li
382.515 232.538 li
382.463 232.301 li
382.292 232.201 li
382.047 232.301 li
381.836 232.743 li
381.249 232.986 li
379.919 234.397 li
379.15 235.64 li
378.793 236.079 li
378.004 236.564 li
377.194 237.305 li
376.75 237.522 li
376.539 237.559 li
376.702 237.935 li
377.36 238.687 li
378.466 239.52 li
379.447 239.937 li
380.057 239.717 li
380.801 239.185 li
381.787 238.15 li
383.47 235.055 li
384.364 234.139 li
384.982 233.219 li
385.288 232.638 li
385.546 231.576 li
385.593 230.595 li
385.523 230.049 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
385.523 230.049 mo
385.473 229.828 li
385.429 229.849 li
385.048 230.208 li
384.886 230.629 li
385.192 230.96 li
385.041 231.291 li
384.827 231.277 li
384.591 231.153 li
384.371 231.169 li
384.202 231.371 li
383.911 232.099 li
383.622 232.433 li
383.239 232.695 li
382.427 233.032 li
382.485 232.814 li
382.515 232.538 li
382.463 232.301 li
382.292 232.201 li
382.047 232.301 li
381.836 232.743 li
381.249 232.986 li
379.919 234.397 li
379.15 235.64 li
378.793 236.079 li
378.004 236.564 li
377.194 237.305 li
376.75 237.522 li
376.539 237.559 li
376.702 237.935 li
377.36 238.687 li
378.466 239.52 li
379.447 239.937 li
380.057 239.717 li
380.801 239.185 li
381.787 238.15 li
383.47 235.055 li
384.364 234.139 li
384.982 233.219 li
385.288 232.638 li
385.546 231.576 li
385.593 230.595 li
385.523 230.049 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
405.936 250.433 mo
405.291 250.364 li
404.687 250.063 li
404.363 249.537 li
404.193 249.339 li
403.397 247.685 li
403.326 247.361 li
402.854 247.354 li
402.324 247.737 li
401.613 248.498 li
401.362 248.616 li
399.739 248.962 li
399.485 248.983 li
399.457 248.907 li
399.938 248.601 li
401.347 248.012 li
401.977 247.568 li
402.571 246.891 li
402.795 246.305 li
402.633 245.675 li
400.902 243.523 li
400.506 243.248 li
400.652 243.715 li
400.979 244.331 li
401.132 244.469 li
401.107 245.08 li
400.844 245.161 li
400.547 245 li
400.436 244.882 li
400.492 244.696 li
400.313 244.296 li
399.957 243.927 li
399.469 243.832 li
399.553 243.329 li
399.437 242.893 li
399.017 241.97 li
398.89 241.4 li
398.952 241.025 li
399.431 240.297 li
399.771 239.486 li
400.027 238.613 li
400.391 237.858 li
401.04 237.398 li
400.938 237.837 li
401.292 237.917 li
401.738 237.438 li
402.003 237.515 li
401.982 237.699 li
401.66 238.359 li
401.584 238.663 li
401.938 238.563 li
402.464 238.123 li
403.218 237.93 li
403.349 237.693 li
403.391 237.395 li
403.469 237.101 li
403.671 236.812 li
404.102 236.389 li
404.256 236.18 li
404.534 235.469 li
404.727 234.707 li
403.805 235.438 li
403.312 235.664 li
402.652 235.744 li
402.403 235.811 li
402.087 236.107 li
401.79 236.18 li
401.458 236.1 li
401.063 235.894 li
400.676 235.623 li
400.366 235.331 li
400.147 235.414 li
399.645 235.522 li
399.201 235.824 li
398.924 235.804 li
398.641 235.725 li
398.359 235.744 li
397.952 236.02 li
397.655 236.303 li
397.306 236.44 li
396.728 236.27 li
396.49 236.431 li
395.813 236.615 li
395.227 236.629 li
395.245 236.27 li
395.55 235.974 li
395.958 235.715 li
396.401 235.602 li
396.813 235.744 li
396.942 235.428 li
397.184 235.3 li
397.493 235.344 li
397.824 235.537 li
398.162 235.1 li
398.803 234.923 li
400.119 234.916 li
400.461 234.849 li
400.614 234.688 li
400.718 234.491 li
400.888 234.292 li
401.347 234.003 li
401.365 234.066 li
401.441 234.032 li
401.745 233.931 li
401.852 233.877 li
401.622 233.413 li
401.403 233.143 li
400.793 232.617 li
400.547 232.313 li
400.297 231.913 li
400.266 231.66 li
400.664 231.806 li
400.702 231.511 li
400.823 231.142 li
400.962 230.922 li
401.063 231.065 li
401.258 232.304 li
401.418 232.612 li
401.66 232.617 li
401.875 232.488 li
401.963 232.408 li
401.892 232.335 li
402.161 232.102 li
402.485 231.919 li
402.579 231.995 li
402.615 231.731 li
402.55 231.142 li
402.648 230.843 li
403.643 228.946 li
403.755 228.421 li
403.501 228.03 li
403.162 228.154 li
402.3 229.091 li
401.872 229.724 li
401.51 230.119 li
401.049 230.281 li
400.538 229.921 li
400.383 229.656 li
400.344 229.456 li
400.44 229.327 li
400.964 229.247 li
401.073 229.135 li
401.067 228.916 li
401.011 228.559 li
400.815 228.124 li
400.429 227.666 li
399.976 227.316 li
399.577 227.197 li
399.761 227.767 li
399.591 228.253 li
399.197 228.421 li
398.709 228.03 li
398.414 228.571 li
397.962 228.718 li
397.411 228.569 li
396.825 228.236 li
395.776 227.361 li
395.313 227.188 li
395.369 227.826 li
394.952 227.65 li
394.799 227.77 li
394.877 228.073 li
395.142 228.465 li
394.267 228.465 li
394.511 228.825 li
395.406 229.597 li
395.76 229.745 li
395.871 229.426 li
395.899 228.951 li
396.017 228.655 li
396.432 228.659 li
396.692 228.996 li
396.748 229.445 li
396.416 230.065 li
396.578 230.361 li
397.097 230.96 li
396.336 230.964 li
396.063 231.301 li
395.938 231.882 li
395.616 232.617 li
395.322 231.683 li
395.313 231.212 li
395.5 230.727 li
394.597 230.539 li
394.685 230.853 li
394.681 231.044 li
394.572 231.138 li
394.355 231.169 li
394.18 231.237 li
394.218 231.4 li
394.304 231.614 li
394.285 231.806 li
394.006 232.06 li
393.719 232.266 li
393.501 232.551 li
393.451 233.032 li
393.821 233.961 li
394.489 233.992 li
395.752 233.467 li
395.645 233.877 li
395.798 233.98 li
395.911 234.042 li
396.029 234.063 li
396.198 234.066 li
396.419 234.015 li
396.45 233.889 li
396.43 233.751 li
396.479 233.655 li
396.892 233.531 li
399.713 233.467 li
399.252 234.015 li
398.558 234.198 li
397.048 234.066 li
397.491 234.411 li
397.661 234.505 li
397.3 234.703 li
396.724 234.881 li
396.127 234.95 li
395.707 234.811 li
395.282 234.599 li
394.751 234.585 li
393.719 234.707 li
393.958 234.975 li
394.246 235.023 li
394.582 235.013 li
394.969 235.123 li
395.002 235.331 li
394.095 235.564 li
391.669 236.989 li
391.446 236.907 li
391.204 236.761 li
390.992 236.522 li
390.852 236.18 li
392.167 235.809 li
392.829 235.473 li
393.083 235.123 li
393.082 234.757 li
393.219 234.08 li
393.224 233.767 li
392.996 233.338 li
392.565 233.024 li
392.081 232.848 li
391.69 232.844 li
391.882 232.395 li
392.26 232.276 li
392.586 232.073 li
392.657 231.371 li
392.883 231.482 li
393.055 231.484 li
393.146 231.357 li
393.136 231.065 li
393.085 230.936 li
392.931 230.758 li
392.883 230.636 li
392.905 230.386 li
393.061 230.396 li
393.248 230.502 li
393.381 230.539 li
393.567 230.574 li
393.82 230.692 li
394.025 230.709 li
394.065 230.427 li
394.066 230.124 li
394.179 229.946 li
394.391 229.881 li
394.671 229.921 li
393.971 229.604 li
393.094 229.638 li
391.481 229.921 li
391.484 230.065 li
391.027 230.843 li
390.992 231.322 li
390.759 231.484 li
390.457 231.409 li
390.207 231.169 li
390.405 230.95 li
390.578 230.657 li
390.685 230.309 li
390.706 229.921 li
390.262 229.776 li
390.212 229.554 li
390.425 229.306 li
390.746 229.09 li
390.036 228.482 li
390.371 228.177 li
391.076 228.083 li
391.466 228.133 li
391.877 228.465 li
392.671 228.446 li
393.447 228.194 li
393.806 227.826 li
393.579 227.785 li
393.48 227.708 li
393.409 227.589 li
393.228 227.404 li
393.432 227.188 li
393.669 227.086 li
393.942 227.098 li
394.239 227.197 li
394.292 226.774 li
394.495 226.551 li
394.608 226.335 li
394.383 225.933 li
395.641 226.224 li
396.057 226.113 li
395.66 225.308 li
395.427 225.152 li
395.119 225.091 li
394.818 225.091 li
394.613 225.12 li
393.478 225.746 li
393.12 225.855 li
392.994 225.933 li
392.982 226.029 li
392.979 226.425 li
392.938 226.578 li
392.286 227.293 li
392.211 227.404 li
391.588 227.279 li
391.459 225.879 li
390.899 226.266 li
390.473 227.069 li
390.36 227.197 li
389.111 227.395 li
388.857 227.515 li
388.645 227.687 li
388.11 227.96 li
387.925 228.133 li
387.59 228.613 li
387.585 228.777 li
387.656 229.185 li
387.827 229.271 li
388.693 228.655 li
389.022 228.739 li
389.26 228.961 li
389.333 229.268 li
389.188 229.597 li
388.64 229.902 li
387.992 230.103 li
387.691 230.445 li
388.159 231.169 li
387.833 231.371 li
387.665 231.082 li
387.523 230.984 li
387.412 231.082 li
387.338 231.371 li
387.165 231.371 li
387.04 230.782 li
386.696 230.243 li
386.239 229.845 li
385.771 229.692 li
385.473 229.828 li
385.523 230.049 li
385.593 230.595 li
385.546 231.576 li
385.288 232.638 li
384.982 233.219 li
384.364 234.139 li
383.47 235.055 li
381.787 238.15 li
380.801 239.185 li
380.057 239.717 li
379.447 239.937 li
379.338 240.691 li
379.374 241.14 li
379.354 241.796 li
379.432 242.59 li
379.652 243.266 li
379.497 243.736 li
379.049 243.977 li
378.452 244.036 li
377.36 244.331 li
376.857 245.31 li
375.218 247.378 li
374.693 248.472 li
373.829 249.645 li
372.556 250.812 li
372.41 251.284 li
372.371 251.682 li
372.025 252.145 li
371.336 253.315 li
371.224 254.222 li
371.221 255.836 li
371.086 256.414 li
369.057 259.303 li
368.637 261.906 li
368.93 262.038 li
369.513 263.01 li
369.998 263.236 li
370.479 263.327 li
370.862 263.333 li
371.437 263.758 li
371.761 263.852 li
371.983 264.253 li
372.144 264.737 li
372.522 265.481 li
372.901 265.84 li
373.029 266.275 li
372.982 266.652 li
373.009 267.1 li
373.271 267.411 li
373.695 267.585 li
374.174 267.713 li
374.688 267.922 li
375.066 268.557 li
375.465 268.951 li
375.731 269.337 li
375.944 269.58 li
377.03 270.287 li
377.067 270.719 li
377.017 271.179 li
377.063 271.545 li
377.377 271.753 li
377.814 271.868 li
378.214 272.02 li
378.949 272.593 li
379.415 272.596 li
379.69 272.271 li
380.542 271.75 li
381.009 271.67 li
381.407 271.399 li
381.761 270.793 li
382.261 270.189 li
382.585 269.244 li
382.545 268.867 li
381.812 268.45 li
382.038 268.02 li
382.567 267.453 li
383.282 266.862 li
384.417 265.659 li
385.168 265.261 li
387.351 264.431 li
387.632 264.071 li
387.722 263.612 li
387.899 263.149 li
387.812 262.296 li
388.215 260.584 li
389.598 259.318 li
390.186 258.984 li
390.611 258.597 li
391.076 258.476 li
391.614 258.142 li
391.988 257.803 li
392.447 257.497 li
392.785 257.172 li
393.053 256.213 li
393.299 255.875 li
393.781 256.022 li
394.218 256.383 li
394.521 256.763 li
394.782 256.927 li
395.066 256.75 li
395.333 256.485 li
395.802 256.29 li
397.826 255.882 li
398.258 255.845 li
398.667 255.917 li
399.021 256.103 li
399.369 256.233 li
400.121 256.387 li
400.594 256.345 li
400.958 256.383 li
401.256 256.498 li
401.407 256.678 li
402.286 257.48 li
404.734 254.673 li
405.071 254.088 li
406.353 251.007 li
406.378 250.269 li
405.936 250.433 li
cp
404.646 233.659 mo
404.153 233.26 li
403.071 234.604 li
402.857 234.738 li
402.248 234.683 li
401.982 234.707 li
401.908 234.751 li
401.677 234.994 li
401.571 235.118 li
401.567 235.128 li
402.853 235.189 li
403.233 235.123 li
403.458 234.968 li
404 234.457 li
404.316 234.292 li
404.759 234.271 li
405.234 234.317 li
405.673 234.292 li
406.011 234.066 li
406.127 233.714 li
406.136 232.806 li
406.265 232.408 li
406.115 232.004 li
406.106 231.66 li
406.009 231.43 li
405.586 231.371 li
405.28 231.503 li
405.032 231.749 li
404.741 231.959 li
404.298 231.995 li
404.51 232.33 li
404.796 232.536 li
405.107 232.572 li
405.395 232.408 li
405.502 232.966 li
405.171 233.47 li
404.646 233.659 li
cp
389.332 224.333 mo
389.531 224.686 li
389.585 224.573 li
389.81 224.272 li
389.994 224.615 li
390.024 224.919 li
389.9 225.155 li
389.631 225.308 li
389.614 225.434 li
389.623 225.539 li
389.609 225.641 li
389.527 225.746 li
389.88 225.914 li
390.245 225.893 li
390.586 225.748 li
390.87 225.539 li
390.922 225.399 li
390.963 225.183 li
391.034 224.981 li
391.197 224.893 li
391.781 224.686 li
391.906 224.535 li
392.145 224.156 li
392.28 224.08 li
392.789 224.108 li
392.891 224.08 li
392.986 223.728 li
392.958 222.938 li
392.986 222.624 li
393.07 222.457 li
393.374 222.042 li
393.501 221.96 li
393.602 221.872 li
393.523 221.666 li
393.32 221.356 li
393.445 220.567 li
393.466 220.143 li
393.405 219.705 li
393.22 219.258 li
393.123 219.442 li
392.984 220.313 li
392.809 220.656 li
392.611 220.903 li
392.117 221.356 li
392.979 221.356 li
392.634 221.677 li
391.879 221.915 li
391.734 222.207 li
391.53 221.708 li
391.51 221.156 li
391.431 220.708 li
391.034 220.522 li
390.84 220.653 li
390.756 220.94 li
390.727 221.356 li
390.445 221.291 li
390.333 221.036 li
390.262 220.791 li
390.116 220.749 li
390.021 221.015 li
389.886 222.176 li
389.896 222.624 li
390.047 223.122 li
390.31 223.524 li
390.634 223.835 li
390.981 224.08 li
391.013 224.272 li
390.477 224.202 li
390.09 223.926 li
389.736 223.563 li
389.302 223.23 li
389.212 223.574 li
389.222 223.951 li
389.332 224.333 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
405.936 250.433 mo
405.291 250.364 li
404.687 250.063 li
404.363 249.537 li
404.193 249.339 li
403.397 247.685 li
403.326 247.361 li
402.854 247.354 li
402.324 247.737 li
401.613 248.498 li
401.362 248.616 li
399.739 248.962 li
399.485 248.983 li
399.457 248.907 li
399.938 248.601 li
401.347 248.012 li
401.977 247.568 li
402.571 246.891 li
402.795 246.305 li
402.633 245.675 li
400.902 243.523 li
400.506 243.248 li
400.652 243.715 li
400.979 244.331 li
401.132 244.469 li
401.107 245.08 li
400.844 245.161 li
400.547 245 li
400.436 244.882 li
400.492 244.696 li
400.313 244.296 li
399.957 243.927 li
399.469 243.832 li
399.553 243.329 li
399.437 242.893 li
399.017 241.97 li
398.89 241.4 li
398.952 241.025 li
399.431 240.297 li
399.771 239.486 li
400.027 238.613 li
400.391 237.858 li
401.04 237.398 li
400.938 237.837 li
401.292 237.917 li
401.738 237.438 li
402.003 237.515 li
401.982 237.699 li
401.66 238.359 li
401.584 238.663 li
401.938 238.563 li
402.464 238.123 li
403.218 237.93 li
403.349 237.693 li
403.391 237.395 li
403.469 237.101 li
403.671 236.812 li
404.102 236.389 li
404.256 236.18 li
404.534 235.469 li
404.727 234.707 li
403.805 235.438 li
403.312 235.664 li
402.652 235.744 li
402.403 235.811 li
402.087 236.107 li
401.79 236.18 li
401.458 236.1 li
401.063 235.894 li
400.676 235.623 li
400.366 235.331 li
400.147 235.414 li
399.645 235.522 li
399.201 235.824 li
398.924 235.804 li
398.641 235.725 li
398.359 235.744 li
397.952 236.02 li
397.655 236.303 li
397.306 236.44 li
396.728 236.27 li
396.49 236.431 li
395.813 236.615 li
395.227 236.629 li
395.245 236.27 li
395.55 235.974 li
395.958 235.715 li
396.401 235.602 li
396.813 235.744 li
396.942 235.428 li
397.184 235.3 li
397.493 235.344 li
397.824 235.537 li
398.162 235.1 li
398.803 234.923 li
400.119 234.916 li
400.461 234.849 li
400.614 234.688 li
400.718 234.491 li
400.888 234.292 li
401.347 234.003 li
401.365 234.066 li
401.441 234.032 li
401.745 233.931 li
401.852 233.877 li
401.622 233.413 li
401.403 233.143 li
400.793 232.617 li
400.547 232.313 li
400.297 231.913 li
400.266 231.66 li
400.664 231.806 li
400.702 231.511 li
400.823 231.142 li
400.962 230.922 li
401.063 231.065 li
401.258 232.304 li
401.418 232.612 li
401.66 232.617 li
401.875 232.488 li
401.963 232.408 li
401.892 232.335 li
402.161 232.102 li
402.485 231.919 li
402.579 231.995 li
402.615 231.731 li
402.55 231.142 li
402.648 230.843 li
403.643 228.946 li
403.755 228.421 li
403.501 228.03 li
403.162 228.154 li
402.3 229.091 li
401.872 229.724 li
401.51 230.119 li
401.049 230.281 li
400.538 229.921 li
400.383 229.656 li
400.344 229.456 li
400.44 229.327 li
400.964 229.247 li
401.073 229.135 li
401.067 228.916 li
401.011 228.559 li
400.815 228.124 li
400.429 227.666 li
399.976 227.316 li
399.577 227.197 li
399.761 227.767 li
399.591 228.253 li
399.197 228.421 li
398.709 228.03 li
398.414 228.571 li
397.962 228.718 li
397.411 228.569 li
396.825 228.236 li
395.776 227.361 li
395.313 227.188 li
395.369 227.826 li
394.952 227.65 li
394.799 227.77 li
394.877 228.073 li
395.142 228.465 li
394.267 228.465 li
394.511 228.825 li
395.406 229.597 li
395.76 229.745 li
395.871 229.426 li
395.899 228.951 li
396.017 228.655 li
396.432 228.659 li
396.692 228.996 li
396.748 229.445 li
396.416 230.065 li
396.578 230.361 li
397.097 230.96 li
396.336 230.964 li
396.063 231.301 li
395.938 231.882 li
395.616 232.617 li
395.322 231.683 li
395.313 231.212 li
395.5 230.727 li
394.597 230.539 li
394.685 230.853 li
394.681 231.044 li
394.572 231.138 li
394.355 231.169 li
394.18 231.237 li
394.218 231.4 li
394.304 231.614 li
394.285 231.806 li
394.006 232.06 li
393.719 232.266 li
393.501 232.551 li
393.451 233.032 li
393.821 233.961 li
394.489 233.992 li
395.752 233.467 li
395.645 233.877 li
395.798 233.98 li
395.911 234.042 li
396.029 234.063 li
396.198 234.066 li
396.419 234.015 li
396.45 233.889 li
396.43 233.751 li
396.479 233.655 li
396.892 233.531 li
399.713 233.467 li
399.252 234.015 li
398.558 234.198 li
397.048 234.066 li
397.491 234.411 li
397.661 234.505 li
397.3 234.703 li
396.724 234.881 li
396.127 234.95 li
395.707 234.811 li
395.282 234.599 li
394.751 234.585 li
393.719 234.707 li
393.958 234.975 li
394.246 235.023 li
394.582 235.013 li
394.969 235.123 li
395.002 235.331 li
394.095 235.564 li
391.669 236.989 li
391.446 236.907 li
391.204 236.761 li
390.992 236.522 li
390.852 236.18 li
392.167 235.809 li
392.829 235.473 li
393.083 235.123 li
393.082 234.757 li
393.219 234.08 li
393.224 233.767 li
392.996 233.338 li
392.565 233.024 li
392.081 232.848 li
391.69 232.844 li
391.882 232.395 li
392.26 232.276 li
392.586 232.073 li
392.657 231.371 li
392.883 231.482 li
393.055 231.484 li
393.146 231.357 li
393.136 231.065 li
393.085 230.936 li
392.931 230.758 li
392.883 230.636 li
392.905 230.386 li
393.061 230.396 li
393.248 230.502 li
393.381 230.539 li
393.567 230.574 li
393.82 230.692 li
394.025 230.709 li
394.065 230.427 li
394.066 230.124 li
394.179 229.946 li
394.391 229.881 li
394.671 229.921 li
393.971 229.604 li
393.094 229.638 li
391.481 229.921 li
391.484 230.065 li
391.027 230.843 li
390.992 231.322 li
390.759 231.484 li
390.457 231.409 li
390.207 231.169 li
390.405 230.95 li
390.578 230.657 li
390.685 230.309 li
390.706 229.921 li
390.262 229.776 li
390.212 229.554 li
390.425 229.306 li
390.746 229.09 li
390.036 228.482 li
390.371 228.177 li
391.076 228.083 li
391.466 228.133 li
391.877 228.465 li
392.671 228.446 li
393.447 228.194 li
393.806 227.826 li
393.579 227.785 li
393.48 227.708 li
393.409 227.589 li
393.228 227.404 li
393.432 227.188 li
393.669 227.086 li
393.942 227.098 li
394.239 227.197 li
394.292 226.774 li
394.495 226.551 li
394.608 226.335 li
394.383 225.933 li
395.641 226.224 li
396.057 226.113 li
395.66 225.308 li
395.427 225.152 li
395.119 225.091 li
394.818 225.091 li
394.613 225.12 li
393.478 225.746 li
393.12 225.855 li
392.994 225.933 li
392.982 226.029 li
392.979 226.425 li
392.938 226.578 li
392.286 227.293 li
392.211 227.404 li
391.588 227.279 li
391.459 225.879 li
390.899 226.266 li
390.473 227.069 li
390.36 227.197 li
389.111 227.395 li
388.857 227.515 li
388.645 227.687 li
388.11 227.96 li
387.925 228.133 li
387.59 228.613 li
387.585 228.777 li
387.656 229.185 li
387.827 229.271 li
388.693 228.655 li
389.022 228.739 li
389.26 228.961 li
389.333 229.268 li
389.188 229.597 li
388.64 229.902 li
387.992 230.103 li
387.691 230.445 li
388.159 231.169 li
387.833 231.371 li
387.665 231.082 li
387.523 230.984 li
387.412 231.082 li
387.338 231.371 li
387.165 231.371 li
387.04 230.782 li
386.696 230.243 li
386.239 229.845 li
385.771 229.692 li
385.473 229.828 li
385.523 230.049 li
385.593 230.595 li
385.546 231.576 li
385.288 232.638 li
384.982 233.219 li
384.364 234.139 li
383.47 235.055 li
381.787 238.15 li
380.801 239.185 li
380.057 239.717 li
379.447 239.937 li
379.338 240.691 li
379.374 241.14 li
379.354 241.796 li
379.432 242.59 li
379.652 243.266 li
379.497 243.736 li
379.049 243.977 li
378.452 244.036 li
377.36 244.331 li
376.857 245.31 li
375.218 247.378 li
374.693 248.472 li
373.829 249.645 li
372.556 250.812 li
372.41 251.284 li
372.371 251.682 li
372.025 252.145 li
371.336 253.315 li
371.224 254.222 li
371.221 255.836 li
371.086 256.414 li
369.057 259.303 li
368.637 261.906 li
368.93 262.038 li
369.513 263.01 li
369.998 263.236 li
370.479 263.327 li
370.862 263.333 li
371.437 263.758 li
371.761 263.852 li
371.983 264.253 li
372.144 264.737 li
372.522 265.481 li
372.901 265.84 li
373.029 266.275 li
372.982 266.652 li
373.009 267.1 li
373.271 267.411 li
373.695 267.585 li
374.174 267.713 li
374.688 267.922 li
375.066 268.557 li
375.465 268.951 li
375.731 269.337 li
375.944 269.58 li
377.03 270.287 li
377.067 270.719 li
377.017 271.179 li
377.063 271.545 li
377.377 271.753 li
377.814 271.868 li
378.214 272.02 li
378.949 272.593 li
379.415 272.596 li
379.69 272.271 li
380.542 271.75 li
381.009 271.67 li
381.407 271.399 li
381.761 270.793 li
382.261 270.189 li
382.585 269.244 li
382.545 268.867 li
381.812 268.45 li
382.038 268.02 li
382.567 267.453 li
383.282 266.862 li
384.417 265.659 li
385.168 265.261 li
387.351 264.431 li
387.632 264.071 li
387.722 263.612 li
387.899 263.149 li
387.812 262.296 li
388.215 260.584 li
389.598 259.318 li
390.186 258.984 li
390.611 258.597 li
391.076 258.476 li
391.614 258.142 li
391.988 257.803 li
392.447 257.497 li
392.785 257.172 li
393.053 256.213 li
393.299 255.875 li
393.781 256.022 li
394.218 256.383 li
394.521 256.763 li
394.782 256.927 li
395.066 256.75 li
395.333 256.485 li
395.802 256.29 li
397.826 255.882 li
398.258 255.845 li
398.667 255.917 li
399.021 256.103 li
399.369 256.233 li
400.121 256.387 li
400.594 256.345 li
400.958 256.383 li
401.256 256.498 li
401.407 256.678 li
402.286 257.48 li
404.734 254.673 li
405.071 254.088 li
406.353 251.007 li
406.378 250.269 li
405.936 250.433 li
cp
404.646 233.659 mo
404.153 233.26 li
403.071 234.604 li
402.857 234.738 li
402.248 234.683 li
401.982 234.707 li
401.908 234.751 li
401.677 234.994 li
401.571 235.118 li
401.567 235.128 li
402.853 235.189 li
403.233 235.123 li
403.458 234.968 li
404 234.457 li
404.316 234.292 li
404.759 234.271 li
405.234 234.317 li
405.673 234.292 li
406.011 234.066 li
406.127 233.714 li
406.136 232.806 li
406.265 232.408 li
406.115 232.004 li
406.106 231.66 li
406.009 231.43 li
405.586 231.371 li
405.28 231.503 li
405.032 231.749 li
404.741 231.959 li
404.298 231.995 li
404.51 232.33 li
404.796 232.536 li
405.107 232.572 li
405.395 232.408 li
405.502 232.966 li
405.171 233.47 li
404.646 233.659 li
cp
389.332 224.333 mo
389.531 224.686 li
389.585 224.573 li
389.81 224.272 li
389.994 224.615 li
390.024 224.919 li
389.9 225.155 li
389.631 225.308 li
389.614 225.434 li
389.623 225.539 li
389.609 225.641 li
389.527 225.746 li
389.88 225.914 li
390.245 225.893 li
390.586 225.748 li
390.87 225.539 li
390.922 225.399 li
390.963 225.183 li
391.034 224.981 li
391.197 224.893 li
391.781 224.686 li
391.906 224.535 li
392.145 224.156 li
392.28 224.08 li
392.789 224.108 li
392.891 224.08 li
392.986 223.728 li
392.958 222.938 li
392.986 222.624 li
393.07 222.457 li
393.374 222.042 li
393.501 221.96 li
393.602 221.872 li
393.523 221.666 li
393.32 221.356 li
393.445 220.567 li
393.466 220.143 li
393.405 219.705 li
393.22 219.258 li
393.123 219.442 li
392.984 220.313 li
392.809 220.656 li
392.611 220.903 li
392.117 221.356 li
392.979 221.356 li
392.634 221.677 li
391.879 221.915 li
391.734 222.207 li
391.53 221.708 li
391.51 221.156 li
391.431 220.708 li
391.034 220.522 li
390.84 220.653 li
390.756 220.94 li
390.727 221.356 li
390.445 221.291 li
390.333 221.036 li
390.262 220.791 li
390.116 220.749 li
390.021 221.015 li
389.886 222.176 li
389.896 222.624 li
390.047 223.122 li
390.31 223.524 li
390.634 223.835 li
390.981 224.08 li
391.013 224.272 li
390.477 224.202 li
390.09 223.926 li
389.736 223.563 li
389.302 223.23 li
389.212 223.574 li
389.222 223.951 li
389.332 224.333 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
459.222 211.467 mo
458.086 210.598 li
457.29 210.226 li
454.57 210.004 li
453.607 209.432 li
452.749 208.648 li
452.661 207.727 li
452.671 206.674 li
452.448 205.726 li
451.515 204.081 li
451.393 203.252 li
451.492 202.747 li
451.334 202.168 li
450.371 201.36 li
450.033 201.018 li
449.86 200.559 li
449.875 200.15 li
449.666 199.778 li
449.464 199.666 li
449.25 199.591 li
448.83 199.539 li
448.432 199.307 li
446.75 198.078 li
445.109 198.14 li
444.582 198.011 li
444.041 199.952 li
443.898 199.594 li
443.893 199.366 li
444.112 197.002 li
444.095 194.937 li
444.715 190.956 li
444.681 190.543 li
444.76 190.19 li
444.962 190.126 li
445.034 189.93 li
444.56 189.261 li
444.176 188.465 li
444.264 187.992 li
444.064 187.594 li
443.748 187.517 li
443.438 187.322 li
443.751 186.989 li
444.222 186.678 li
445.195 185.212 li
445.926 184.847 li
446.719 184.626 li
447.209 184.259 li
446.863 182.493 li
446.838 181.543 li
447.057 180.745 li
446.287 180.188 li
445.669 179.944 li
445.49 179.553 li
445.635 179.112 li
445.679 178.635 li
446.157 178.215 li
446.14 177.955 li
445.976 177.751 li
445.782 177.162 li
445.421 176.527 li
443.649 176.076 li
442.737 174.938 li
442.409 173.459 li
441.691 173.246 li
440.276 173.74 li
438.332 173.662 li
437.243 173.806 li
437.119 173.9 li
437.069 174.068 li
436.509 174.865 li
435.543 175.227 li
435.288 175.579 li
435.17 175.989 li
434.959 176.416 li
434.82 176.881 li
434.775 177.365 li
434.533 177.741 li
433.602 178.22 li
432.532 178.103 li
430.214 178.131 li
427.93 177.51 li
427.66 176.284 li
428.091 175.142 li
428.463 173.824 li
428.574 172.39 li
428.271 171.762 li
427.878 171.255 li
427.93 170.541 li
428.284 169.93 li
428.606 169.058 li
428.502 168.375 li
427.677 168.323 li
426.863 168.448 li
425.898 167.955 li
425.965 166.81 li
426.116 166.412 li
426.007 165.913 li
425.438 165.354 li
425.187 164.579 li
425.542 163.719 li
425.409 162.812 li
424.59 162.209 li
424.021 161.354 li
424.739 160 li
425.14 158.702 li
425.317 157.657 li
425.938 156.862 li
426.224 155.968 li
425.851 155.603 li
425.19 156.058 li
424.435 156.294 li
423.331 155.831 li
422.377 155.256 li
420.819 155.25 li
419.345 155.594 li
418.744 155.614 li
418.263 155.229 li
417.778 155.577 li
417.692 155.916 li
417.692 156.284 li
417.451 156.379 li
417.14 156.55 li
416.76 156.922 li
415.815 157.469 li
415.208 157.535 li
414.163 157.348 li
413.126 157.3 li
412.862 157.473 li
412.661 157.648 li
412.369 157.519 li
412.087 157.57 li
411.607 158.005 li
411.07 158.27 li
409.522 158.566 li
409.364 158.965 li
409.568 159.562 li
409.071 160.579 li
409.038 160.843 li
409.098 161.118 li
408.184 161.438 li
407.367 161.962 li
406.969 162.229 li
406.454 162.405 li
406.334 162.541 li
406.254 162.663 li
405.846 163.766 li
406.252 164.973 li
407.082 166.02 li
407.902 165.621 li
408.407 166.369 li
408.473 167.402 li
408.85 168.276 li
409.502 168.894 li
410.563 169.106 li
411.07 169.907 li
411.197 170.87 li
412.935 171.265 li
413.497 171.692 li
413.842 172.23 li
413.544 172.43 li
413.109 172.285 li
412.816 172.374 li
411.051 175.06 li
410.686 176.141 li
410.27 176.334 li
409.698 176.438 li
409.091 177.179 li
408.818 178.209 li
408.622 178.676 li
408.616 179.104 li
409.867 179.872 li
410.421 180.134 li
410.61 180.584 li
410.543 180.904 li
410.433 181.207 li
410.554 181.893 li
410.866 182.533 li
411.747 183.43 li
413.056 184.413 li
413.546 185.364 li
413.906 186.287 li
413.712 187.688 li
413.892 189.125 li
414.147 189.388 li
414.371 189.685 li
413.948 190.091 li
413.405 190.255 li
413.161 190.364 li
413.075 190.588 li
413.151 191.188 li
413.283 191.621 li
412.937 192.136 li
412.394 192.315 li
411.749 192.885 li
411.218 193.593 li
410.626 193.952 li
410.181 194.464 li
409.672 195.662 li
410.777 195.651 li
411.447 195.765 li
412.944 196.386 li
414.86 197.432 li
417.532 199.909 li
418.167 198.266 li
420.362 200.14 li
420.86 200.837 li
421.31 201.651 li
422.03 203.312 li
422.65 205.318 li
423.153 206.043 li
424.029 206.248 li
424.787 205.953 li
425.313 205.361 li
425.667 204.58 li
425.92 203.732 li
426.072 203.732 li
426.166 204.502 li
426.047 205.124 li
425.77 205.623 li
425.391 206.021 li
424.884 206.426 li
424.598 206.583 li
424.276 206.669 li
423.857 206.621 li
423.568 206.518 li
423.428 206.628 li
423.508 207.847 li
423.453 209.605 li
423.313 210.145 li
423.311 210.404 li
423.407 210.86 li
423.555 211.327 li
423.787 211.803 li
423.641 211.9 li
423.409 211.938 li
423.225 211.939 li
423.153 212.015 li
423.176 212.192 li
423.228 212.394 li
423.238 212.551 li
423.209 213.253 li
423.375 214.979 li
423.254 215.599 li
423.066 216.124 li
422.693 218.209 li
421.876 220.649 li
420.799 222.831 li
419.54 224.326 li
421.192 224.009 li
423.854 223.289 li
427.464 222.93 li
432.109 219.054 li
430.326 223.529 li
434.998 223.649 li
440.308 223.409 li
444.918 222.45 li
447.458 222.209 li
449.742 222.93 li
451.527 224.08 li
452.107 222.05 li
452.562 221.172 li
453.19 218.885 li
453.32 218.607 li
453.485 218.482 li
453.887 218.433 li
454.043 218.324 li
454.417 217.443 li
454.505 217.107 li
454.559 216.751 li
454.555 216.443 li
454.715 216.055 li
456.016 214.661 li
457.163 212.446 li
457.63 212.299 li
458.282 212.438 li
458.893 212.401 li
459.225 211.713 li
459.222 211.467 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
459.222 211.467 mo
458.086 210.598 li
457.29 210.226 li
454.57 210.004 li
453.607 209.432 li
452.749 208.648 li
452.661 207.727 li
452.671 206.674 li
452.448 205.726 li
451.515 204.081 li
451.393 203.252 li
451.492 202.747 li
451.334 202.168 li
450.371 201.36 li
450.033 201.018 li
449.86 200.559 li
449.875 200.15 li
449.666 199.778 li
449.464 199.666 li
449.25 199.591 li
448.83 199.539 li
448.432 199.307 li
446.75 198.078 li
445.109 198.14 li
444.582 198.011 li
444.041 199.952 li
443.898 199.594 li
443.893 199.366 li
444.112 197.002 li
444.095 194.937 li
444.715 190.956 li
444.681 190.543 li
444.76 190.19 li
444.962 190.126 li
445.034 189.93 li
444.56 189.261 li
444.176 188.465 li
444.264 187.992 li
444.064 187.594 li
443.748 187.517 li
443.438 187.322 li
443.751 186.989 li
444.222 186.678 li
445.195 185.212 li
445.926 184.847 li
446.719 184.626 li
447.209 184.259 li
446.863 182.493 li
446.838 181.543 li
447.057 180.745 li
446.287 180.188 li
445.669 179.944 li
445.49 179.553 li
445.635 179.112 li
445.679 178.635 li
446.157 178.215 li
446.14 177.955 li
445.976 177.751 li
445.782 177.162 li
445.421 176.527 li
443.649 176.076 li
442.737 174.938 li
442.409 173.459 li
441.691 173.246 li
440.276 173.74 li
438.332 173.662 li
437.243 173.806 li
437.119 173.9 li
437.069 174.068 li
436.509 174.865 li
435.543 175.227 li
435.288 175.579 li
435.17 175.989 li
434.959 176.416 li
434.82 176.881 li
434.775 177.365 li
434.533 177.741 li
433.602 178.22 li
432.532 178.103 li
430.214 178.131 li
427.93 177.51 li
427.66 176.284 li
428.091 175.142 li
428.463 173.824 li
428.574 172.39 li
428.271 171.762 li
427.878 171.255 li
427.93 170.541 li
428.284 169.93 li
428.606 169.058 li
428.502 168.375 li
427.677 168.323 li
426.863 168.448 li
425.898 167.955 li
425.965 166.81 li
426.116 166.412 li
426.007 165.913 li
425.438 165.354 li
425.187 164.579 li
425.542 163.719 li
425.409 162.812 li
424.59 162.209 li
424.021 161.354 li
424.739 160 li
425.14 158.702 li
425.317 157.657 li
425.938 156.862 li
426.224 155.968 li
425.851 155.603 li
425.19 156.058 li
424.435 156.294 li
423.331 155.831 li
422.377 155.256 li
420.819 155.25 li
419.345 155.594 li
418.744 155.614 li
418.263 155.229 li
417.778 155.577 li
417.692 155.916 li
417.692 156.284 li
417.451 156.379 li
417.14 156.55 li
416.76 156.922 li
415.815 157.469 li
415.208 157.535 li
414.163 157.348 li
413.126 157.3 li
412.862 157.473 li
412.661 157.648 li
412.369 157.519 li
412.087 157.57 li
411.607 158.005 li
411.07 158.27 li
409.522 158.566 li
409.364 158.965 li
409.568 159.562 li
409.071 160.579 li
409.038 160.843 li
409.098 161.118 li
408.184 161.438 li
407.367 161.962 li
406.969 162.229 li
406.454 162.405 li
406.334 162.541 li
406.254 162.663 li
405.846 163.766 li
406.252 164.973 li
407.082 166.02 li
407.902 165.621 li
408.407 166.369 li
408.473 167.402 li
408.85 168.276 li
409.502 168.894 li
410.563 169.106 li
411.07 169.907 li
411.197 170.87 li
412.935 171.265 li
413.497 171.692 li
413.842 172.23 li
413.544 172.43 li
413.109 172.285 li
412.816 172.374 li
411.051 175.06 li
410.686 176.141 li
410.27 176.334 li
409.698 176.438 li
409.091 177.179 li
408.818 178.209 li
408.622 178.676 li
408.616 179.104 li
409.867 179.872 li
410.421 180.134 li
410.61 180.584 li
410.543 180.904 li
410.433 181.207 li
410.554 181.893 li
410.866 182.533 li
411.747 183.43 li
413.056 184.413 li
413.546 185.364 li
413.906 186.287 li
413.712 187.688 li
413.892 189.125 li
414.147 189.388 li
414.371 189.685 li
413.948 190.091 li
413.405 190.255 li
413.161 190.364 li
413.075 190.588 li
413.151 191.188 li
413.283 191.621 li
412.937 192.136 li
412.394 192.315 li
411.749 192.885 li
411.218 193.593 li
410.626 193.952 li
410.181 194.464 li
409.672 195.662 li
410.777 195.651 li
411.447 195.765 li
412.944 196.386 li
414.86 197.432 li
417.532 199.909 li
418.167 198.266 li
420.362 200.14 li
420.86 200.837 li
421.31 201.651 li
422.03 203.312 li
422.65 205.318 li
423.153 206.043 li
424.029 206.248 li
424.787 205.953 li
425.313 205.361 li
425.667 204.58 li
425.92 203.732 li
426.072 203.732 li
426.166 204.502 li
426.047 205.124 li
425.77 205.623 li
425.391 206.021 li
424.884 206.426 li
424.598 206.583 li
424.276 206.669 li
423.857 206.621 li
423.568 206.518 li
423.428 206.628 li
423.508 207.847 li
423.453 209.605 li
423.313 210.145 li
423.311 210.404 li
423.407 210.86 li
423.555 211.327 li
423.787 211.803 li
423.641 211.9 li
423.409 211.938 li
423.225 211.939 li
423.153 212.015 li
423.176 212.192 li
423.228 212.394 li
423.238 212.551 li
423.209 213.253 li
423.375 214.979 li
423.254 215.599 li
423.066 216.124 li
422.693 218.209 li
421.876 220.649 li
420.799 222.831 li
419.54 224.326 li
421.192 224.009 li
423.854 223.289 li
427.464 222.93 li
432.109 219.054 li
430.326 223.529 li
434.998 223.649 li
440.308 223.409 li
444.918 222.45 li
447.458 222.209 li
449.742 222.93 li
451.527 224.08 li
452.107 222.05 li
452.562 221.172 li
453.19 218.885 li
453.32 218.607 li
453.485 218.482 li
453.887 218.433 li
454.043 218.324 li
454.417 217.443 li
454.505 217.107 li
454.559 216.751 li
454.555 216.443 li
454.715 216.055 li
456.016 214.661 li
457.163 212.446 li
457.63 212.299 li
458.282 212.438 li
458.893 212.401 li
459.225 211.713 li
459.222 211.467 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
487.91 172.208 mo
487.021 171.797 li
485.242 171.614 li
485.352 170.989 li
485.628 170.531 li
485.774 170.076 li
485.475 169.458 li
485.591 168.939 li
485.504 167.712 li
484.545 166.482 li
483.353 166.29 li
480.332 163.985 li
475.54 159.369 li
475.16 156.963 li
472.717 155.519 li
472.451 157.155 li
466.628 154.015 li
466.201 154.231 li
465.597 154.439 li
465.354 155.166 li
465.149 155.462 li
465.008 155.795 li
463.862 156.231 li
463.575 156.812 li
463.118 157.048 li
462.914 156.938 li
462.617 157.052 li
462.156 157.418 li
461.8 157.883 li
461.674 158.381 li
461.52 158.806 li
461.257 159.251 li
460.88 159.689 li
460.228 159.663 li
459.505 159.526 li
457.926 158.688 li
455.83 159.253 li
455.23 159.597 li
454.55 160.1 li
454.12 160.845 li
454.383 162.434 li
454.248 162.72 li
454.136 163.049 li
454.375 164.068 li
453.577 165.334 li
452.483 166.604 li
452.201 167.333 li
452.386 168.162 li
452.673 168.689 li
452.313 168.846 li
451.069 169.007 li
449.214 168.999 li
448.15 170.514 li
448.5 171.577 li
448.665 172.425 li
447.953 172.614 li
447.41 173.048 li
447.785 173.69 li
447.442 174.144 li
445.396 173.527 li
443.476 171.962 li
442.409 173.459 li
442.737 174.938 li
443.649 176.076 li
445.421 176.527 li
445.782 177.162 li
445.976 177.751 li
446.14 177.955 li
446.157 178.215 li
445.679 178.635 li
445.635 179.112 li
445.49 179.553 li
445.669 179.944 li
446.287 180.188 li
447.057 180.745 li
446.838 181.543 li
446.863 182.493 li
447.209 184.259 li
446.719 184.626 li
445.926 184.847 li
445.195 185.212 li
444.222 186.678 li
443.751 186.989 li
443.438 187.322 li
443.748 187.517 li
444.064 187.594 li
444.264 187.992 li
444.176 188.465 li
444.56 189.261 li
445.034 189.93 li
444.962 190.126 li
444.76 190.19 li
444.681 190.543 li
444.715 190.956 li
444.095 194.937 li
444.112 197.002 li
443.893 199.366 li
443.898 199.594 li
444.041 199.952 li
444.582 198.011 li
445.109 198.14 li
446.75 198.078 li
448.432 199.307 li
448.83 199.539 li
449.25 199.591 li
449.464 199.666 li
449.666 199.778 li
449.875 200.15 li
449.86 200.559 li
450.033 201.018 li
450.371 201.36 li
451.334 202.168 li
451.492 202.747 li
451.393 203.252 li
451.515 204.081 li
452.448 205.726 li
452.671 206.674 li
452.661 207.727 li
452.749 208.648 li
453.607 209.432 li
454.57 210.004 li
457.29 210.226 li
458.086 210.598 li
459.222 211.467 li
459.191 209.53 li
460.375 206.44 li
460.115 206.478 li
459.905 206.608 li
459.732 206.818 li
459.604 207.088 li
459.607 206.471 li
459.758 205.961 li
460.274 205.106 li
460.523 204.923 li
460.772 205.061 li
461.021 205.301 li
461.278 205.413 li
461.476 205.323 li
462.443 204.371 li
463.266 202.989 li
463.727 201.844 li
463.979 200.786 li
464.033 200.644 li
464.293 200.175 li
464.322 200.03 li
464.311 199.824 li
464.159 199.046 li
464.122 198.64 li
464.193 198.354 li
464.469 197.837 li
464.84 199.09 li
465.307 196.368 li
465.563 195.767 li
465.688 195.682 li
466.057 195.526 li
466.146 195.46 li
466.163 195.251 li
466.125 195.069 li
466.074 194.922 li
466.059 194.806 li
466.353 192.741 li
466.504 192.396 li
467.056 192.181 li
467.346 192 li
467.585 191.76 li
467.671 191.521 li
467.834 190.76 li
468.196 190.144 li
468.233 189.72 li
467.402 189.521 li
466.553 189.626 li
466.11 189.614 li
465.754 189.415 li
465.55 189.249 li
464.83 188.771 li
464.387 188.564 li
464.209 188.385 li
464.048 188.393 li
463.851 188.847 li
463.832 189.225 li
463.971 189.887 li
463.893 190.073 li
463.426 189.785 li
463.37 188.915 li
463.639 187.266 li
463.104 184.375 li
462.837 183.742 li
462.503 183.395 li
462.188 183.175 li
461.934 182.897 li
461.777 182.378 li
461.724 181.834 li
461.754 181.428 li
461.885 181.074 li
462.15 180.679 li
462.316 179.822 li
462.39 179.721 li
462.923 179.277 li
463.711 178.332 li
464.224 177.53 li
464.486 176.919 li
464.666 176.234 li
464.681 175.546 li
464.939 175.168 li
468.212 173.568 li
472.631 171.36 li
473.214 170.785 li
473.459 170.856 li
473.717 171.067 li
474.046 171.188 li
478.173 171.293 li
482.207 171.472 li
482.61 171.614 li
483.45 172.127 li
483.733 172.25 li
484.005 171.766 li
484.477 171.73 li
484.869 171.983 li
484.895 172.349 li
484.705 172.697 li
484.538 173.148 li
484.406 173.657 li
484.341 174.17 li
484.438 175.089 li
484.756 176.089 li
485.693 178 li
486.03 177.596 li
486.391 177.285 li
486.66 176.932 li
486.753 175.932 li
487.155 174.36 li
488.364 172.996 li
487.91 172.208 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
487.91 172.208 mo
487.021 171.797 li
485.242 171.614 li
485.352 170.989 li
485.628 170.531 li
485.774 170.076 li
485.475 169.458 li
485.591 168.939 li
485.504 167.712 li
484.545 166.482 li
483.353 166.29 li
480.332 163.985 li
475.54 159.369 li
475.16 156.963 li
472.717 155.519 li
472.451 157.155 li
466.628 154.015 li
466.201 154.231 li
465.597 154.439 li
465.354 155.166 li
465.149 155.462 li
465.008 155.795 li
463.862 156.231 li
463.575 156.812 li
463.118 157.048 li
462.914 156.938 li
462.617 157.052 li
462.156 157.418 li
461.8 157.883 li
461.674 158.381 li
461.52 158.806 li
461.257 159.251 li
460.88 159.689 li
460.228 159.663 li
459.505 159.526 li
457.926 158.688 li
455.83 159.253 li
455.23 159.597 li
454.55 160.1 li
454.12 160.845 li
454.383 162.434 li
454.248 162.72 li
454.136 163.049 li
454.375 164.068 li
453.577 165.334 li
452.483 166.604 li
452.201 167.333 li
452.386 168.162 li
452.673 168.689 li
452.313 168.846 li
451.069 169.007 li
449.214 168.999 li
448.15 170.514 li
448.5 171.577 li
448.665 172.425 li
447.953 172.614 li
447.41 173.048 li
447.785 173.69 li
447.442 174.144 li
445.396 173.527 li
443.476 171.962 li
442.409 173.459 li
442.737 174.938 li
443.649 176.076 li
445.421 176.527 li
445.782 177.162 li
445.976 177.751 li
446.14 177.955 li
446.157 178.215 li
445.679 178.635 li
445.635 179.112 li
445.49 179.553 li
445.669 179.944 li
446.287 180.188 li
447.057 180.745 li
446.838 181.543 li
446.863 182.493 li
447.209 184.259 li
446.719 184.626 li
445.926 184.847 li
445.195 185.212 li
444.222 186.678 li
443.751 186.989 li
443.438 187.322 li
443.748 187.517 li
444.064 187.594 li
444.264 187.992 li
444.176 188.465 li
444.56 189.261 li
445.034 189.93 li
444.962 190.126 li
444.76 190.19 li
444.681 190.543 li
444.715 190.956 li
444.095 194.937 li
444.112 197.002 li
443.893 199.366 li
443.898 199.594 li
444.041 199.952 li
444.582 198.011 li
445.109 198.14 li
446.75 198.078 li
448.432 199.307 li
448.83 199.539 li
449.25 199.591 li
449.464 199.666 li
449.666 199.778 li
449.875 200.15 li
449.86 200.559 li
450.033 201.018 li
450.371 201.36 li
451.334 202.168 li
451.492 202.747 li
451.393 203.252 li
451.515 204.081 li
452.448 205.726 li
452.671 206.674 li
452.661 207.727 li
452.749 208.648 li
453.607 209.432 li
454.57 210.004 li
457.29 210.226 li
458.086 210.598 li
459.222 211.467 li
459.191 209.53 li
460.375 206.44 li
460.115 206.478 li
459.905 206.608 li
459.732 206.818 li
459.604 207.088 li
459.607 206.471 li
459.758 205.961 li
460.274 205.106 li
460.523 204.923 li
460.772 205.061 li
461.021 205.301 li
461.278 205.413 li
461.476 205.323 li
462.443 204.371 li
463.266 202.989 li
463.727 201.844 li
463.979 200.786 li
464.033 200.644 li
464.293 200.175 li
464.322 200.03 li
464.311 199.824 li
464.159 199.046 li
464.122 198.64 li
464.193 198.354 li
464.469 197.837 li
464.84 199.09 li
465.307 196.368 li
465.563 195.767 li
465.688 195.682 li
466.057 195.526 li
466.146 195.46 li
466.163 195.251 li
466.125 195.069 li
466.074 194.922 li
466.059 194.806 li
466.353 192.741 li
466.504 192.396 li
467.056 192.181 li
467.346 192 li
467.585 191.76 li
467.671 191.521 li
467.834 190.76 li
468.196 190.144 li
468.233 189.72 li
467.402 189.521 li
466.553 189.626 li
466.11 189.614 li
465.754 189.415 li
465.55 189.249 li
464.83 188.771 li
464.387 188.564 li
464.209 188.385 li
464.048 188.393 li
463.851 188.847 li
463.832 189.225 li
463.971 189.887 li
463.893 190.073 li
463.426 189.785 li
463.37 188.915 li
463.639 187.266 li
463.104 184.375 li
462.837 183.742 li
462.503 183.395 li
462.188 183.175 li
461.934 182.897 li
461.777 182.378 li
461.724 181.834 li
461.754 181.428 li
461.885 181.074 li
462.15 180.679 li
462.316 179.822 li
462.39 179.721 li
462.923 179.277 li
463.711 178.332 li
464.224 177.53 li
464.486 176.919 li
464.666 176.234 li
464.681 175.546 li
464.939 175.168 li
468.212 173.568 li
472.631 171.36 li
473.214 170.785 li
473.459 170.856 li
473.717 171.067 li
474.046 171.188 li
478.173 171.293 li
482.207 171.472 li
482.61 171.614 li
483.45 172.127 li
483.733 172.25 li
484.005 171.766 li
484.477 171.73 li
484.869 171.983 li
484.895 172.349 li
484.705 172.697 li
484.538 173.148 li
484.406 173.657 li
484.341 174.17 li
484.438 175.089 li
484.756 176.089 li
485.693 178 li
486.03 177.596 li
486.391 177.285 li
486.66 176.932 li
486.753 175.932 li
487.155 174.36 li
488.364 172.996 li
487.91 172.208 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
497.389 128.089 mo
496.915 127.448 li
496.292 126.873 li
495.848 126.554 li
495.449 126.384 li
495.124 126.323 li
494.338 126.338 li
493.992 126.238 li
493.45 125.791 li
493.121 125.69 li
492.225 125.697 li
491.784 125.636 li
491.342 125.479 li
491.036 125.253 li
490.508 124.759 li
490.179 124.616 li
490.154 124.399 li
490.461 124.06 li
490.11 123.797 li
489.493 123.615 li
484.34 123.366 li
484.398 123.89 li
483.979 124.684 li
482.568 125.146 li
482.044 125.411 li
482.025 125.78 li
482.18 126.071 li
482.547 126.976 li
482.648 128.012 li
482.507 128.644 li
482.492 129.364 li
483.131 129.834 li
483.714 129.295 li
484.324 129.331 li
484.647 130.002 li
484.081 131.195 li
483.227 132.115 li
482.199 134.585 li
481.34 139.556 li
480.464 140.915 li
479.292 140.25 li
478.167 139.432 li
477.1 138.458 li
476.187 138.206 li
475.931 138.471 li
476.316 139.206 li
476.443 140.429 li
476.418 141.14 li
475.951 141.716 li
475.879 142.105 li
475.773 142.479 li
475.446 142.721 li
475.073 142.882 li
474.57 143.456 li
474.012 143.937 li
473.361 144.236 li
472.678 144.332 li
472.062 144.598 li
471.896 145.076 li
472.128 145.652 li
472.164 146.784 li
471.769 147.78 li
470.907 148.653 li
467.982 149.892 li
466.412 151.062 li
466.588 152.093 li
466.962 153.196 li
466.628 154.015 li
472.451 157.155 li
472.717 155.519 li
475.16 156.963 li
475.54 159.369 li
480.332 163.985 li
483.353 166.29 li
484.545 166.482 li
485.504 167.712 li
485.735 166.79 li
485.779 164.956 li
485.597 163.31 li
485.669 162.611 li
486.02 161.831 li
486.035 161.471 li
485.772 161.122 li
485.24 160.637 li
485.168 160.489 li
485.048 160.158 li
485.021 159.994 li
485.001 159.622 li
485.095 159.602 li
485.261 159.667 li
485.474 159.566 li
485.959 159.183 li
486.579 159.022 li
487.243 159.162 li
488.359 160.063 li
488.777 159.83 li
491.1 157.612 li
493.594 154.518 li
493.703 154.264 li
493.437 152.23 li
493.515 151.957 li
494.413 151.465 li
494.56 151.204 li
494.521 150.759 li
494.33 150.427 li
494.043 150.202 li
493.717 150.095 li
493.837 149.682 li
493.815 148.991 li
493.881 148.592 li
494.237 148.154 li
494.426 147.852 li
494.464 147.498 li
494.15 147.073 li
493.59 146.525 li
493.163 145.9 li
493.227 145.25 li
493.552 144.707 li
493.779 144.086 li
493.792 143.456 li
492.994 142.128 li
493.185 141.631 li
493.654 141.251 li
494.019 140.831 li
494.059 140.01 li
493.708 139.322 li
493.252 138.666 li
492.974 137.927 li
493.018 137.583 li
493.173 137.276 li
493.534 136.741 li
493.755 136.241 li
494.238 134.262 li
494.526 133.568 li
495.371 132.937 li
495.633 132.159 li
495.98 130.692 li
496.828 129.699 li
497.22 128.905 li
497.4 128.621 li
497.389 128.089 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
497.389 128.089 mo
496.915 127.448 li
496.292 126.873 li
495.848 126.554 li
495.449 126.384 li
495.124 126.323 li
494.338 126.338 li
493.992 126.238 li
493.45 125.791 li
493.121 125.69 li
492.225 125.697 li
491.784 125.636 li
491.342 125.479 li
491.036 125.253 li
490.508 124.759 li
490.179 124.616 li
490.154 124.399 li
490.461 124.06 li
490.11 123.797 li
489.493 123.615 li
484.34 123.366 li
484.398 123.89 li
483.979 124.684 li
482.568 125.146 li
482.044 125.411 li
482.025 125.78 li
482.18 126.071 li
482.547 126.976 li
482.648 128.012 li
482.507 128.644 li
482.492 129.364 li
483.131 129.834 li
483.714 129.295 li
484.324 129.331 li
484.647 130.002 li
484.081 131.195 li
483.227 132.115 li
482.199 134.585 li
481.34 139.556 li
480.464 140.915 li
479.292 140.25 li
478.167 139.432 li
477.1 138.458 li
476.187 138.206 li
475.931 138.471 li
476.316 139.206 li
476.443 140.429 li
476.418 141.14 li
475.951 141.716 li
475.879 142.105 li
475.773 142.479 li
475.446 142.721 li
475.073 142.882 li
474.57 143.456 li
474.012 143.937 li
473.361 144.236 li
472.678 144.332 li
472.062 144.598 li
471.896 145.076 li
472.128 145.652 li
472.164 146.784 li
471.769 147.78 li
470.907 148.653 li
467.982 149.892 li
466.412 151.062 li
466.588 152.093 li
466.962 153.196 li
466.628 154.015 li
472.451 157.155 li
472.717 155.519 li
475.16 156.963 li
475.54 159.369 li
480.332 163.985 li
483.353 166.29 li
484.545 166.482 li
485.504 167.712 li
485.735 166.79 li
485.779 164.956 li
485.597 163.31 li
485.669 162.611 li
486.02 161.831 li
486.035 161.471 li
485.772 161.122 li
485.24 160.637 li
485.168 160.489 li
485.048 160.158 li
485.021 159.994 li
485.001 159.622 li
485.095 159.602 li
485.261 159.667 li
485.474 159.566 li
485.959 159.183 li
486.579 159.022 li
487.243 159.162 li
488.359 160.063 li
488.777 159.83 li
491.1 157.612 li
493.594 154.518 li
493.703 154.264 li
493.437 152.23 li
493.515 151.957 li
494.413 151.465 li
494.56 151.204 li
494.521 150.759 li
494.33 150.427 li
494.043 150.202 li
493.717 150.095 li
493.837 149.682 li
493.815 148.991 li
493.881 148.592 li
494.237 148.154 li
494.426 147.852 li
494.464 147.498 li
494.15 147.073 li
493.59 146.525 li
493.163 145.9 li
493.227 145.25 li
493.552 144.707 li
493.779 144.086 li
493.792 143.456 li
492.994 142.128 li
493.185 141.631 li
493.654 141.251 li
494.019 140.831 li
494.059 140.01 li
493.708 139.322 li
493.252 138.666 li
492.974 137.927 li
493.018 137.583 li
493.173 137.276 li
493.534 136.741 li
493.755 136.241 li
494.238 134.262 li
494.526 133.568 li
495.371 132.937 li
495.633 132.159 li
495.98 130.692 li
496.828 129.699 li
497.22 128.905 li
497.4 128.621 li
497.389 128.089 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
484.324 129.331 mo
483.714 129.295 li
483.131 129.834 li
482.492 129.364 li
482.507 128.644 li
482.648 128.012 li
482.547 126.976 li
482.18 126.071 li
482.025 125.78 li
482.044 125.411 li
482.568 125.146 li
483.979 124.684 li
484.398 123.89 li
484.34 123.366 li
483.161 123.309 li
482.128 123.104 li
482.49 123.6 li
482.65 123.947 li
482.601 124.255 li
482.304 124.616 li
481.853 124.821 li
480.73 124.942 li
480.361 125.15 li
479.863 126.066 li
479.565 126.415 li
479.123 126.554 li
478.61 126.59 li
476.148 127.31 li
475.987 127.534 li
475.965 127.904 li
475.839 128.184 li
475.506 128.621 li
475.278 129.176 li
475.125 130.332 li
474.797 130.887 li
473.801 131.457 li
473.67 131.649 li
473.627 131.958 li
473.293 132.729 li
473.392 133.532 li
473.323 133.82 li
473.1 134.159 li
472.396 134.811 li
470.567 136.013 li
470.155 136.418 li
469.589 136.795 li
467.322 136.957 li
466.584 137.149 li
466.3 137.173 li
466.141 137.273 li
466.164 137.496 li
466.208 137.719 li
466.119 137.82 li
465.977 137.873 li
465.877 137.981 li
465.764 138.029 li
465.602 137.927 li
465.265 137.455 li
465.193 137.388 li
463.523 137.388 li
463.174 137.227 li
462.933 136.996 li
462.667 136.849 li
462.248 136.957 li
462.478 137.285 li
462.641 137.722 li
462.625 138.104 li
462.316 138.271 li
461.94 138.211 li
461.592 138.06 li
460.313 137.242 li
460.135 137.042 li
460.405 136.957 li
461.9 136.957 li
460.877 136.434 li
458.464 136.121 li
456.959 135.247 li
455.191 135.001 li
453.583 134.421 li
451.938 134.159 li
450.844 133.671 li
445.291 130.023 li
445.011 130.234 li
444.824 130.139 li
444.687 129.936 li
444.55 129.807 li
443.783 129.807 li
443.45 129.674 li
442.762 129.078 li
442.455 128.95 li
441.691 128.78 li
440.057 128.041 li
439.338 127.871 li
438.671 127.51 li
437.568 125.907 li
437.016 125.479 li
436.688 125.598 li
436.88 126.045 li
437.57 126.986 li
438.109 128.513 li
437.734 128.559 li
437.343 128.678 li
437.022 128.69 li
436.858 128.405 li
436.8 127.873 li
436.721 127.485 li
436.542 127.202 li
436.174 126.986 li
435.673 126.903 li
435.533 127.161 li
435.445 127.488 li
435.1 127.654 li
434.817 127.472 li
434.557 127.132 li
434.28 126.948 li
433.918 127.223 li
433.61 126.754 li
433.404 126.297 li
433.146 125.914 li
432.664 125.69 li
432.584 125.757 li
432.506 125.914 li
432.387 126.071 li
432.195 126.142 li
431.744 126.122 li
431.603 126.055 li
431.454 125.907 li
431.394 125.752 li
431.186 125.042 li
431.212 124.934 li
431.296 124.764 li
431.334 124.572 li
431.266 124.399 li
431.155 124.34 li
430.878 124.287 li
430.73 124.184 li
430.657 124.189 li
430.533 124.235 li
430.377 124.201 li
430.178 123.968 li
430.11 123.742 li
430.114 123.507 li
430.161 123.284 li
430.23 123.104 li
430.095 122.975 li
429.817 122.625 li
429.637 122.435 li
430.807 122.211 li
431.476 122.244 li
432.014 122.553 li
432.415 122.959 li
432.893 123.35 li
433.862 123.968 li
433.097 124.255 li
432.852 124.399 li
433.32 124.791 li
433.722 124.857 li
434.096 124.795 li
434.494 124.832 li
434.818 124.986 li
435.821 125.69 li
435.654 125.145 li
435.295 124.754 li
434.479 124.076 li
434.221 123.692 li
433.702 122.758 li
433.387 122.336 li
432.992 121.972 li
432.521 121.627 li
432.025 121.344 li
431.576 121.161 li
430.527 121 li
430.26 120.79 li
430.406 120.297 li
430.609 120.253 li
430.826 120.436 li
430.96 120.495 li
430.92 120.081 li
430.786 119.818 li
430.391 119.54 li
430.286 119.316 li
430.121 118.854 li
429.532 117.865 li
429.437 117.59 li
428.457 118.006 li
428.488 119.187 li
428.053 120.03 li
427.616 120.251 li
427.576 120.799 li
428.24 121.306 li
428.224 121.716 li
427.351 121.47 li
426.541 121.063 li
426.294 121.496 li
426.158 121.997 li
426.545 122.383 li
426.898 122.969 li
426.761 123.476 li
426.792 124.205 li
427.323 125.075 li
427.459 126.014 li
428.104 127.125 li
428.865 128.132 li
430.048 130.327 li
430.69 132.87 li
430.92 133.264 li
431.729 134.119 li
431.812 134.825 li
431.703 135.549 li
432.263 136.882 li
432.608 137.394 li
433.025 137.486 li
433.469 137.531 li
434.358 137.899 li
434.763 138.775 li
435.411 139.339 li
436.223 139.771 li
438.095 140.069 li
439.346 141.13 li
439.803 141.625 li
439.876 142.326 li
440.362 143.628 li
440.757 144.965 li
441.205 145.827 li
441.737 146.535 li
442.054 147.036 li
442.396 147.432 li
446.499 149.113 li
447.246 149.726 li
447.64 150.961 li
447.393 153.442 li
446.995 154.298 li
445.375 153.583 li
444.973 153.908 li
444.874 154.563 li
444.677 155.242 li
444.14 155.517 li
443.514 155.472 li
443.101 155.233 li
443.121 154.897 li
443.24 154.531 li
443.611 154.099 li
443.717 153.84 li
443.719 153.458 li
443.563 153.091 li
443.267 152.838 li
442.903 152.708 li
442.563 152.708 li
442.345 152.815 li
441.991 153.185 li
441.777 153.352 li
441.389 153.506 li
440.988 153.564 li
440.136 153.567 li
439.975 153.428 li
439.369 152.785 li
438.804 152.5 li
438.266 152.076 li
437.697 152.725 li
437.44 153.12 li
437.263 153.581 li
436.939 153.69 li
436.574 153.766 li
436.42 154.463 li
436.78 155.132 li
438.305 155.514 li
440.519 156.339 li
440.972 156.798 li
440.541 158.144 li
440.412 159.378 li
441.574 160.536 li
442.305 161.721 li
441.906 162.177 li
441.381 162.371 li
439.594 161.744 li
439.083 161.724 li
438.935 162.435 li
438.906 163.467 li
439.24 163.89 li
440.042 165.153 li
440.94 166.332 li
441.685 166.932 li
442.491 167.091 li
443.041 166.767 li
443.532 167.197 li
444.388 170.036 li
443.476 171.962 li
445.396 173.527 li
447.442 174.144 li
447.785 173.69 li
447.41 173.048 li
447.953 172.614 li
448.665 172.425 li
448.5 171.577 li
448.15 170.514 li
449.214 168.999 li
451.069 169.007 li
452.313 168.846 li
452.673 168.689 li
452.386 168.162 li
452.201 167.333 li
452.483 166.604 li
453.577 165.334 li
454.375 164.068 li
454.136 163.049 li
454.248 162.72 li
454.383 162.434 li
454.12 160.845 li
454.55 160.1 li
455.23 159.597 li
455.83 159.253 li
457.926 158.688 li
459.505 159.526 li
460.228 159.663 li
460.88 159.689 li
461.257 159.251 li
461.52 158.806 li
461.674 158.381 li
461.8 157.883 li
462.156 157.418 li
462.617 157.052 li
462.914 156.938 li
463.118 157.048 li
463.575 156.812 li
463.862 156.231 li
465.008 155.795 li
465.149 155.462 li
465.354 155.166 li
465.597 154.439 li
466.201 154.231 li
466.628 154.015 li
466.962 153.196 li
466.588 152.093 li
466.412 151.062 li
467.982 149.892 li
470.907 148.653 li
471.769 147.78 li
472.164 146.784 li
472.128 145.652 li
471.896 145.076 li
472.062 144.598 li
472.678 144.332 li
473.361 144.236 li
474.012 143.937 li
474.57 143.456 li
475.073 142.882 li
475.446 142.721 li
475.773 142.479 li
475.879 142.105 li
475.951 141.716 li
476.418 141.14 li
476.443 140.429 li
476.316 139.206 li
475.931 138.471 li
476.187 138.206 li
477.1 138.458 li
478.167 139.432 li
479.292 140.25 li
480.464 140.915 li
481.34 139.556 li
482.199 134.585 li
483.227 132.115 li
484.081 131.195 li
484.647 130.002 li
484.324 129.331 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
484.324 129.331 mo
483.714 129.295 li
483.131 129.834 li
482.492 129.364 li
482.507 128.644 li
482.648 128.012 li
482.547 126.976 li
482.18 126.071 li
482.025 125.78 li
482.044 125.411 li
482.568 125.146 li
483.979 124.684 li
484.398 123.89 li
484.34 123.366 li
483.161 123.309 li
482.128 123.104 li
482.49 123.6 li
482.65 123.947 li
482.601 124.255 li
482.304 124.616 li
481.853 124.821 li
480.73 124.942 li
480.361 125.15 li
479.863 126.066 li
479.565 126.415 li
479.123 126.554 li
478.61 126.59 li
476.148 127.31 li
475.987 127.534 li
475.965 127.904 li
475.839 128.184 li
475.506 128.621 li
475.278 129.176 li
475.125 130.332 li
474.797 130.887 li
473.801 131.457 li
473.67 131.649 li
473.627 131.958 li
473.293 132.729 li
473.392 133.532 li
473.323 133.82 li
473.1 134.159 li
472.396 134.811 li
470.567 136.013 li
470.155 136.418 li
469.589 136.795 li
467.322 136.957 li
466.584 137.149 li
466.3 137.173 li
466.141 137.273 li
466.164 137.496 li
466.208 137.719 li
466.119 137.82 li
465.977 137.873 li
465.877 137.981 li
465.764 138.029 li
465.602 137.927 li
465.265 137.455 li
465.193 137.388 li
463.523 137.388 li
463.174 137.227 li
462.933 136.996 li
462.667 136.849 li
462.248 136.957 li
462.478 137.285 li
462.641 137.722 li
462.625 138.104 li
462.316 138.271 li
461.94 138.211 li
461.592 138.06 li
460.313 137.242 li
460.135 137.042 li
460.405 136.957 li
461.9 136.957 li
460.877 136.434 li
458.464 136.121 li
456.959 135.247 li
455.191 135.001 li
453.583 134.421 li
451.938 134.159 li
450.844 133.671 li
445.291 130.023 li
445.011 130.234 li
444.824 130.139 li
444.687 129.936 li
444.55 129.807 li
443.783 129.807 li
443.45 129.674 li
442.762 129.078 li
442.455 128.95 li
441.691 128.78 li
440.057 128.041 li
439.338 127.871 li
438.671 127.51 li
437.568 125.907 li
437.016 125.479 li
436.688 125.598 li
436.88 126.045 li
437.57 126.986 li
438.109 128.513 li
437.734 128.559 li
437.343 128.678 li
437.022 128.69 li
436.858 128.405 li
436.8 127.873 li
436.721 127.485 li
436.542 127.202 li
436.174 126.986 li
435.673 126.903 li
435.533 127.161 li
435.445 127.488 li
435.1 127.654 li
434.817 127.472 li
434.557 127.132 li
434.28 126.948 li
433.918 127.223 li
433.61 126.754 li
433.404 126.297 li
433.146 125.914 li
432.664 125.69 li
432.584 125.757 li
432.506 125.914 li
432.387 126.071 li
432.195 126.142 li
431.744 126.122 li
431.603 126.055 li
431.454 125.907 li
431.394 125.752 li
431.186 125.042 li
431.212 124.934 li
431.296 124.764 li
431.334 124.572 li
431.266 124.399 li
431.155 124.34 li
430.878 124.287 li
430.73 124.184 li
430.657 124.189 li
430.533 124.235 li
430.377 124.201 li
430.178 123.968 li
430.11 123.742 li
430.114 123.507 li
430.161 123.284 li
430.23 123.104 li
430.095 122.975 li
429.817 122.625 li
429.637 122.435 li
430.807 122.211 li
431.476 122.244 li
432.014 122.553 li
432.415 122.959 li
432.893 123.35 li
433.862 123.968 li
433.097 124.255 li
432.852 124.399 li
433.32 124.791 li
433.722 124.857 li
434.096 124.795 li
434.494 124.832 li
434.818 124.986 li
435.821 125.69 li
435.654 125.145 li
435.295 124.754 li
434.479 124.076 li
434.221 123.692 li
433.702 122.758 li
433.387 122.336 li
432.992 121.972 li
432.521 121.627 li
432.025 121.344 li
431.576 121.161 li
430.527 121 li
430.26 120.79 li
430.406 120.297 li
430.609 120.253 li
430.826 120.436 li
430.96 120.495 li
430.92 120.081 li
430.786 119.818 li
430.391 119.54 li
430.286 119.316 li
430.121 118.854 li
429.532 117.865 li
429.437 117.59 li
428.457 118.006 li
428.488 119.187 li
428.053 120.03 li
427.616 120.251 li
427.576 120.799 li
428.24 121.306 li
428.224 121.716 li
427.351 121.47 li
426.541 121.063 li
426.294 121.496 li
426.158 121.997 li
426.545 122.383 li
426.898 122.969 li
426.761 123.476 li
426.792 124.205 li
427.323 125.075 li
427.459 126.014 li
428.104 127.125 li
428.865 128.132 li
430.048 130.327 li
430.69 132.87 li
430.92 133.264 li
431.729 134.119 li
431.812 134.825 li
431.703 135.549 li
432.263 136.882 li
432.608 137.394 li
433.025 137.486 li
433.469 137.531 li
434.358 137.899 li
434.763 138.775 li
435.411 139.339 li
436.223 139.771 li
438.095 140.069 li
439.346 141.13 li
439.803 141.625 li
439.876 142.326 li
440.362 143.628 li
440.757 144.965 li
441.205 145.827 li
441.737 146.535 li
442.054 147.036 li
442.396 147.432 li
446.499 149.113 li
447.246 149.726 li
447.64 150.961 li
447.393 153.442 li
446.995 154.298 li
445.375 153.583 li
444.973 153.908 li
444.874 154.563 li
444.677 155.242 li
444.14 155.517 li
443.514 155.472 li
443.101 155.233 li
443.121 154.897 li
443.24 154.531 li
443.611 154.099 li
443.717 153.84 li
443.719 153.458 li
443.563 153.091 li
443.267 152.838 li
442.903 152.708 li
442.563 152.708 li
442.345 152.815 li
441.991 153.185 li
441.777 153.352 li
441.389 153.506 li
440.988 153.564 li
440.136 153.567 li
439.975 153.428 li
439.369 152.785 li
438.804 152.5 li
438.266 152.076 li
437.697 152.725 li
437.44 153.12 li
437.263 153.581 li
436.939 153.69 li
436.574 153.766 li
436.42 154.463 li
436.78 155.132 li
438.305 155.514 li
440.519 156.339 li
440.972 156.798 li
440.541 158.144 li
440.412 159.378 li
441.574 160.536 li
442.305 161.721 li
441.906 162.177 li
441.381 162.371 li
439.594 161.744 li
439.083 161.724 li
438.935 162.435 li
438.906 163.467 li
439.24 163.89 li
440.042 165.153 li
440.94 166.332 li
441.685 166.932 li
442.491 167.091 li
443.041 166.767 li
443.532 167.197 li
444.388 170.036 li
443.476 171.962 li
445.396 173.527 li
447.442 174.144 li
447.785 173.69 li
447.41 173.048 li
447.953 172.614 li
448.665 172.425 li
448.5 171.577 li
448.15 170.514 li
449.214 168.999 li
451.069 169.007 li
452.313 168.846 li
452.673 168.689 li
452.386 168.162 li
452.201 167.333 li
452.483 166.604 li
453.577 165.334 li
454.375 164.068 li
454.136 163.049 li
454.248 162.72 li
454.383 162.434 li
454.12 160.845 li
454.55 160.1 li
455.23 159.597 li
455.83 159.253 li
457.926 158.688 li
459.505 159.526 li
460.228 159.663 li
460.88 159.689 li
461.257 159.251 li
461.52 158.806 li
461.674 158.381 li
461.8 157.883 li
462.156 157.418 li
462.617 157.052 li
462.914 156.938 li
463.118 157.048 li
463.575 156.812 li
463.862 156.231 li
465.008 155.795 li
465.149 155.462 li
465.354 155.166 li
465.597 154.439 li
466.201 154.231 li
466.628 154.015 li
466.962 153.196 li
466.588 152.093 li
466.412 151.062 li
467.982 149.892 li
470.907 148.653 li
471.769 147.78 li
472.164 146.784 li
472.128 145.652 li
471.896 145.076 li
472.062 144.598 li
472.678 144.332 li
473.361 144.236 li
474.012 143.937 li
474.57 143.456 li
475.073 142.882 li
475.446 142.721 li
475.773 142.479 li
475.879 142.105 li
475.951 141.716 li
476.418 141.14 li
476.443 140.429 li
476.316 139.206 li
475.931 138.471 li
476.187 138.206 li
477.1 138.458 li
478.167 139.432 li
479.292 140.25 li
480.464 140.915 li
481.34 139.556 li
482.199 134.585 li
483.227 132.115 li
484.081 131.195 li
484.647 130.002 li
484.324 129.331 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
647.224 310.81 mo
646.588 310.706 li
644.826 309.972 li
644.488 309.93 li
643.459 309.972 li
643.18 309.892 li
642.609 309.621 li
642.392 309.564 li
641.879 309.69 li
641.735 310.032 li
641.695 310.526 li
641.495 311.098 li
641.035 311.391 li
638.84 311.611 li
638.564 311.516 li
637.898 311.102 li
637.825 310.995 li
637.496 311.15 li
637.554 311.374 li
637.731 311.624 li
637.765 311.833 li
637.301 312.174 li
636.793 312.3 li
636.338 312.496 li
636.047 313.063 li
636.843 313.648 li
638.557 313.164 li
639.325 313.471 li
639.676 313.313 li
640.063 313.331 li
640.276 313.268 li
640.094 312.858 li
640.249 312.635 li
640.522 312.75 li
640.736 312.672 li
640.979 312.525 li
641.332 312.447 li
641.701 312.501 li
642.024 312.635 li
642.655 313.063 li
643.266 313.595 li
644.584 315.418 li
644.833 316.128 li
644.419 316.602 li
643.893 316.942 li
643.809 317.277 li
643.568 317.541 li
642.24 318.563 li
641.72 318.816 li
641.535 319.035 li
641.671 319.175 li
641.938 319.297 li
642.154 319.448 li
642.889 320.601 li
643.139 321.161 li
643.285 321.804 li
643.517 322.06 li
643.985 322.152 li
645.526 322.152 li
645.701 322.112 li
645.792 321.495 li
646.844 321.053 li
647.389 320.561 li
648.02 320.322 li
648.252 320.155 li
648.903 320.024 li
649.945 319.972 li
650.632 319.735 li
650.219 319.037 li
649.92 318.89 li
649.229 318.734 li
648.878 318.508 li
648.379 318.03 li
648.223 317.743 li
648.124 317.277 li
647.882 316.615 li
647.035 317.348 li
646.406 316.953 li
646.272 316.577 li
646.244 316.196 li
646.185 315.812 li
645.943 315.418 li
644.967 314.393 li
645.043 313.995 li
646.686 312.635 li
644.373 312.204 li
643.863 311.833 li
643.712 311.131 li
644.245 310.967 li
645.674 311.2 li
647.028 311.217 li
647.791 311.438 li
648.317 312.038 li
648.293 312.605 li
647.978 313.264 li
647.555 313.814 li
647.21 314.086 li
647.389 314.385 li
647.479 314.7 li
647.563 315.418 li
647.675 315.689 li
647.853 315.757 li
648.008 315.659 li
648.056 315.418 li
648.067 314.834 li
648.221 314.341 li
649.207 312.512 li
649.964 311.552 li
650.913 311.091 li
651.996 311.611 li
651.944 311.143 li
652.062 310.791 li
652.325 310.593 li
652.713 310.586 li
652.69 310.403 li
647.224 310.81 li
cp
655.415 326.04 mo
655.238 325.904 li
655.141 325.718 li
655.102 325.524 li
655.045 325.334 li
654.896 325.185 li
654.538 325.093 li
654.054 325.103 li
653.574 325.202 li
653.235 325.385 li
652.974 325.718 li
653.078 325.869 li
653.377 326.03 li
653.688 326.412 li
653.674 326.639 li
653.447 327.419 li
653.341 327.662 li
653.444 327.753 li
653.364 327.849 li
653.469 327.946 li
653.654 328.182 li
653.756 328.279 li
653.775 328.698 li
654.249 328.513 li
655.079 327.958 li
655.084 327.313 li
655.28 326.931 li
656.078 326.412 li
655.415 326.04 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
647.224 310.81 mo
646.588 310.706 li
644.826 309.972 li
644.488 309.93 li
643.459 309.972 li
643.18 309.892 li
642.609 309.621 li
642.392 309.564 li
641.879 309.69 li
641.735 310.032 li
641.695 310.526 li
641.495 311.098 li
641.035 311.391 li
638.84 311.611 li
638.564 311.516 li
637.898 311.102 li
637.825 310.995 li
637.496 311.15 li
637.554 311.374 li
637.731 311.624 li
637.765 311.833 li
637.301 312.174 li
636.793 312.3 li
636.338 312.496 li
636.047 313.063 li
636.843 313.648 li
638.557 313.164 li
639.325 313.471 li
639.676 313.313 li
640.063 313.331 li
640.276 313.268 li
640.094 312.858 li
640.249 312.635 li
640.522 312.75 li
640.736 312.672 li
640.979 312.525 li
641.332 312.447 li
641.701 312.501 li
642.024 312.635 li
642.655 313.063 li
643.266 313.595 li
644.584 315.418 li
644.833 316.128 li
644.419 316.602 li
643.893 316.942 li
643.809 317.277 li
643.568 317.541 li
642.24 318.563 li
641.72 318.816 li
641.535 319.035 li
641.671 319.175 li
641.938 319.297 li
642.154 319.448 li
642.889 320.601 li
643.139 321.161 li
643.285 321.804 li
643.517 322.06 li
643.985 322.152 li
645.526 322.152 li
645.701 322.112 li
645.792 321.495 li
646.844 321.053 li
647.389 320.561 li
648.02 320.322 li
648.252 320.155 li
648.903 320.024 li
649.945 319.972 li
650.632 319.735 li
650.219 319.037 li
649.92 318.89 li
649.229 318.734 li
648.878 318.508 li
648.379 318.03 li
648.223 317.743 li
648.124 317.277 li
647.882 316.615 li
647.035 317.348 li
646.406 316.953 li
646.272 316.577 li
646.244 316.196 li
646.185 315.812 li
645.943 315.418 li
644.967 314.393 li
645.043 313.995 li
646.686 312.635 li
644.373 312.204 li
643.863 311.833 li
643.712 311.131 li
644.245 310.967 li
645.674 311.2 li
647.028 311.217 li
647.791 311.438 li
648.317 312.038 li
648.293 312.605 li
647.978 313.264 li
647.555 313.814 li
647.21 314.086 li
647.389 314.385 li
647.479 314.7 li
647.563 315.418 li
647.675 315.689 li
647.853 315.757 li
648.008 315.659 li
648.056 315.418 li
648.067 314.834 li
648.221 314.341 li
649.207 312.512 li
649.964 311.552 li
650.913 311.091 li
651.996 311.611 li
651.944 311.143 li
652.062 310.791 li
652.325 310.593 li
652.713 310.586 li
652.69 310.403 li
647.224 310.81 li
cp
655.415 326.04 mo
655.238 325.904 li
655.141 325.718 li
655.102 325.524 li
655.045 325.334 li
654.896 325.185 li
654.538 325.093 li
654.054 325.103 li
653.574 325.202 li
653.235 325.385 li
652.974 325.718 li
653.078 325.869 li
653.377 326.03 li
653.688 326.412 li
653.674 326.639 li
653.447 327.419 li
653.341 327.662 li
653.444 327.753 li
653.364 327.849 li
653.469 327.946 li
653.654 328.182 li
653.756 328.279 li
653.775 328.698 li
654.249 328.513 li
655.079 327.958 li
655.084 327.313 li
655.28 326.931 li
656.078 326.412 li
655.415 326.04 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
401.407 256.678 mo
401.256 256.498 li
400.958 256.383 li
400.594 256.345 li
400.121 256.387 li
399.369 256.233 li
399.021 256.103 li
398.667 255.917 li
398.258 255.845 li
397.826 255.882 li
395.802 256.29 li
395.333 256.485 li
395.066 256.75 li
394.782 256.927 li
394.521 256.763 li
394.218 256.383 li
393.781 256.022 li
393.299 255.875 li
393.053 256.213 li
392.785 257.172 li
392.447 257.497 li
391.988 257.803 li
391.614 258.142 li
391.076 258.476 li
390.611 258.597 li
390.186 258.984 li
389.598 259.318 li
388.215 260.584 li
387.812 262.296 li
387.899 263.149 li
387.722 263.612 li
387.632 264.071 li
387.351 264.431 li
385.168 265.261 li
384.417 265.659 li
383.282 266.862 li
382.567 267.453 li
382.038 268.02 li
381.812 268.45 li
382.545 268.867 li
382.585 269.244 li
382.261 270.189 li
381.761 270.793 li
381.407 271.399 li
381.009 271.67 li
380.542 271.75 li
379.69 272.271 li
379.415 272.596 li
378.949 272.593 li
378.214 272.02 li
377.814 271.868 li
377.377 271.753 li
377.063 271.545 li
377.017 271.179 li
377.067 270.719 li
377.03 270.287 li
375.944 269.58 li
375.731 269.337 li
375.465 268.951 li
375.066 268.557 li
374.688 267.922 li
374.174 267.713 li
373.695 267.585 li
373.271 267.411 li
373.009 267.1 li
372.982 266.652 li
373.029 266.275 li
372.901 265.84 li
372.522 265.481 li
372.144 264.737 li
371.983 264.253 li
371.761 263.852 li
371.437 263.758 li
370.862 263.333 li
370.479 263.327 li
369.998 263.236 li
369.513 263.01 li
368.93 262.038 li
368.637 261.906 li
368.241 261.834 li
368.054 261.752 li
367.765 261.705 li
367.471 261.697 li
367.216 261.765 li
367.051 261.916 li
367.024 262.226 li
367.021 262.656 li
366.642 264.36 li
366.41 265.008 li
365.48 266.252 li
365.068 266.605 li
364.683 266.862 li
363.981 267.024 li
363.946 267.607 li
363.896 267.902 li
363.81 268.245 li
363.583 268.84 li
363.562 269.176 li
363.478 269.524 li
363.223 269.836 li
362.625 270.078 li
362.174 270.173 li
361.493 270.468 li
360.4 271.475 li
359.061 272.547 li
358.751 272.912 li
358.582 273.361 li
358.408 273.646 li
357.956 274.121 li
357.771 274.553 li
357.565 274.873 li
356.58 275.669 li
356.131 276.877 li
355.508 277.439 li
354.91 277.746 li
354.483 277.892 li
353.765 277.939 li
353.404 278.039 li
352.762 278.498 li
352.334 278.898 li
351.891 279.663 li
351.42 280.298 li
351.364 280.646 li
351.379 281.204 li
349.993 282.025 li
348.759 282.389 li
348.651 282.523 li
348.606 282.844 li
348.561 283.626 li
348.411 284.447 li
348.392 284.849 li
348.316 285.194 li
348.106 285.483 li
347.767 285.688 li
346.512 285.652 li
345.631 285.839 li
344.601 285.908 li
343.724 286.159 li
343.549 286.184 li
343.401 286.169 li
343.21 286.063 li
342.955 286.008 li
342.642 286.02 li
341.775 286.338 li
341.323 286.69 li
340.975 286.897 li
340.538 286.98 li
339.733 287.043 li
338.783 287.408 li
338.273 287.779 li
337.381 288.699 li
337.157 289.258 li
337.07 289.709 li
337.03 290.056 li
336.794 290.372 li
336.376 290.633 li
334.517 291.18 li
333.967 291.137 li
333.108 291.674 li
331.998 294.046 li
331.178 294.608 li
328.896 295.734 li
325.115 298.79 li
323.153 301.172 li
322.497 301.165 li
322.053 301.029 li
321.226 301.143 li
320.118 301.563 li
317.103 303.252 li
314.759 304.032 li
314.068 304.439 li
312.425 305.962 li
311.902 306.634 li
311.653 307.283 li
311.444 308.04 li
310.965 308.855 li
310.433 309.532 li
310.128 310.346 li
309.66 310.877 li
309.195 311.945 li
305.876 314.738 li
305.209 315.607 li
304.489 316.351 li
303.438 317.725 li
303.953 319.383 li
303.807 320.127 li
303.368 321.047 li
303.096 321.854 li
302.68 322.444 li
302.249 323.271 li
302.051 323.861 li
301.684 324.557 li
301.747 325.216 li
302.812 330.657 li
303.028 331.387 li
303.253 331.845 li
304.078 332.125 li
304.886 332.672 li
305.422 333.451 li
306.206 335.445 li
306.795 336.016 li
307.412 336.3 li
308.083 336.202 li
308.913 337.006 li
310.551 338.295 li
312.325 338.086 li
313.184 338.417 li
314.093 339.242 li
314.885 340.312 li
316.088 342.486 li
317.293 344.279 li
318.231 345.313 li
318.877 345.892 li
319.715 346.247 li
321.482 346.365 li
323.569 345.95 li
324.515 345.994 li
325.026 346.272 li
325.457 346.863 li
325.498 347.524 li
325.806 348.36 li
326.2 351.639 li
326.901 352.415 li
327.476 352.831 li
329.642 351.634 li
332.886 346.063 li
333.685 345.679 li
334.609 345.453 li
335.572 345.434 li
337.331 345.07 li
338.577 345.228 li
338.581 345.226 li
345.192 346.617 li
345.996 346.584 li
346.43 346.271 li
346.572 345.661 li
346.44 343.879 li
346.276 342.896 li
345.896 342.165 li
345.169 342.06 li
345.339 341.692 li
345.642 341.53 li
345.892 341.304 li
345.911 340.738 li
345.777 340.221 li
345.221 338.771 li
344.792 336.509 li
344.469 335.475 li
343.811 334.877 li
344.455 334.502 li
344.648 334.447 li
344.905 334.322 li
344.934 334.031 li
344.88 333.691 li
344.88 333.42 li
345.454 332.672 li
345.7 332.228 li
345.728 331.667 li
345.406 329.951 li
345.437 329.607 li
346.368 327.445 li
346.398 327.152 li
346.184 326.91 li
345.644 326.637 li
344.974 326.449 li
342.889 326.412 li
343.483 326.08 li
345.555 326.206 li
345.972 326.318 li
346.404 326.523 li
346.804 326.621 li
347.117 326.412 li
347.642 326.577 li
348.185 326.27 li
349.428 324.849 li
349.69 324.638 li
350.29 324.429 li
350.048 324.163 li
349.335 323.766 li
348.818 323.339 li
348.267 322.729 li
347.8 322.046 li
347.545 321.393 li
347.223 320.799 li
346.646 320.336 li
346.003 319.913 li
345.493 319.448 li
345.463 319.115 li
346.038 319.229 li
346.802 319.576 li
347.648 320.162 li
348.334 320.383 li
348.648 320.572 li
349.219 321.087 li
349.781 321.701 li
350.495 322.744 li
350.869 323.394 li
351.362 323.356 li
351.616 323.261 li
352.193 322.836 li
352.855 322.653 li
353.092 322.431 li
353.306 322.155 li
353.561 321.906 li
353.916 321.774 li
354.8 321.597 li
356.426 320.47 li
356.55 320.003 li
355.699 316.953 li
356.001 317.289 li
356.122 317.629 li
356.179 317.994 li
356.304 318.405 li
356.93 319.383 li
357.057 319.746 li
357.493 320.322 li
358.217 320.214 li
362.425 317.158 li
364.803 316.091 li
365.242 315.694 li
365.328 315.016 li
364.251 314.188 li
363.279 313.063 li
362.44 311.843 li
361.885 311.248 li
361.295 310.995 li
360.638 310.901 li
359.146 310.325 li
357.613 309.247 li
356.94 308.579 li
363.188 311.145 li
364.768 312.342 li
366.767 314.494 li
367.163 314.75 li
367.467 314.803 li
369.473 314.513 li
369.717 314.393 li
369.951 314.033 li
369.991 313.884 li
369.911 313.708 li
369.767 313.266 li
369.644 312.531 li
369.586 311.647 li
369.687 310.901 li
370.044 310.586 li
370.718 310.454 li
371.316 310.213 li
371.934 310.117 li
372.65 310.403 li
372.889 310.612 li
373.267 311.031 li
373.467 311.2 li
373.923 311.355 li
374.69 311.253 li
375.008 311.315 li
375.765 311.714 li
375.992 311.94 li
375.646 312.038 li
375.273 312.082 li
371.75 313.214 li
371.103 313.31 li
370.822 313.441 li
370.616 313.662 li
370.576 313.982 li
370.81 314.098 li
371.786 313.956 li
373.839 313.266 li
375.252 313.14 li
375.883 312.818 li
377.857 312.562 li
378.482 312.271 li
378.912 312.244 li
378.534 312.805 li
378.632 313.206 li
379.751 314.086 li
380.385 314.698 li
380.721 314.901 li
381.258 314.747 li
381.934 315.347 li
382.303 315.521 li
383.921 315.521 li
384.521 315.623 li
384.591 315.557 li
383.615 314.475 li
383.21 313.668 li
383.091 312.848 li
383.3 312.038 li
382.937 311.775 li
382.804 311.429 li
382.913 311.127 li
383.274 310.995 li
383.624 311.145 li
383.708 311.509 li
383.737 311.949 li
383.941 312.344 li
384.294 312.73 li
384.369 312.961 li
384.343 313.214 li
384.425 313.679 li
384.594 314.073 li
385.03 314.747 li
385.205 315.127 li
385.374 314.926 li
385.575 314.825 li
385.803 314.876 li
386.049 315.127 li
386.026 314.926 li
386.068 314.291 li
386.535 314.385 li
387.019 313.679 li
387.396 314.086 li
387.576 313.34 li
387.626 312.496 li
387.544 311.625 li
387.307 310.81 li
387.214 310.662 li
386.955 310.354 li
386.86 310.177 li
386.867 310.032 li
386.92 309.822 li
386.947 309.576 li
386.882 309.341 li
386.535 308.982 li
386.146 308.738 li
385.804 308.434 li
385.607 307.906 li
385.336 308.062 li
384.757 308.744 li
384.585 308.335 li
384.258 308.08 li
383.865 307.942 li
383.489 307.906 li
383.192 308.046 li
383.039 308.363 li
382.924 308.719 li
382.75 308.95 li
382.425 309.034 li
382.303 308.853 li
382.231 308.021 li
382.097 307.516 li
381.907 307.263 li
381.187 306.9 li
381.102 307.657 li
381.12 308.427 li
381.03 308.529 li
380.757 308.288 li
380.448 307.861 li
380.26 307.406 li
379.851 307.344 li
378.963 307.334 li
378.077 307.541 li
377.668 308.13 li
377.093 307.979 li
376.388 307.875 li
376.056 307.644 li
376.623 307.108 li
377.322 306.89 li
378.94 306.794 li
379.594 306.514 li
378.013 306.143 li
377.592 305.899 li
377.313 305.479 li
377.398 305.285 li
377.699 305.333 li
378.075 305.674 li
378.037 305.199 li
377.01 303.425 li
376.226 301.554 li
375.875 300.945 li
374.868 301.716 li
373.795 302.244 li
371.285 302.811 li
367.745 302.015 li
371.016 302.081 li
372.654 301.839 li
374.07 301.356 li
374.324 301.171 li
374.943 300.542 li
375.298 300.488 li
376.14 300.502 li
376.273 300.317 li
376.036 298.726 li
376 297.971 li
376.052 297.248 li
373.121 297.452 li
369.546 296.544 li
374.688 296.854 li
375.137 296.795 li
375.497 296.635 li
375.645 296.433 li
375.727 296.188 li
376.17 295.377 li
376.515 294.131 li
376.769 293.543 li
378.456 292.309 li
378.998 291.557 li
379.765 291.217 li
382.99 290.481 li
384.045 289.649 li
384.224 289.444 li
384.284 289.183 li
384.313 288.847 li
384.404 288.55 li
385.351 288.074 li
386.039 287.979 li
386.299 287.895 li
387.278 287.294 li
387.474 287.089 li
387.53 286.878 li
387.519 286.459 li
387.656 286.307 li
387.857 286.204 li
388.049 285.942 li
388.161 285.577 li
388.148 285.403 li
388.089 285.239 li
388.037 284.9 li
387.821 284.318 li
387.818 284.013 li
388.533 283.655 li
388.916 283.117 li
389.182 282.479 li
389.275 281.432 li
390.571 277.708 li
390.425 277.638 li
390.312 277.57 li
390.185 277.515 li
390.008 277.502 li
389.97 277.279 li
390.981 276.768 li
391.385 275.663 li
391.548 274.346 li
391.848 273.195 li
392.912 271.76 li
393.189 271.533 li
393.434 271.439 li
393.895 271.015 li
394.203 270.918 li
394.595 270.977 li
394.904 271.144 li
395.521 271.76 li
395.674 271.559 li
395.802 271.328 li
395.582 271.046 li
395.077 270.576 li
394.932 270.301 li
394.892 269.811 li
395.037 269.563 li
395.273 269.396 li
395.516 269.162 li
395.588 268.99 li
395.748 268.455 li
396.105 268.473 li
396.271 268.445 li
396.399 268.341 li
396.982 267.202 li
397.441 266.746 li
398.455 266.093 li
398.872 265.665 li
399.222 264.873 li
399.604 264.301 li
399.628 264.161 li
398.541 263.205 li
398.045 262.867 li
397.664 262.407 li
397.401 261.533 li
397.431 261.24 li
397.619 261.293 li
397.838 261.564 li
397.98 261.927 li
398.114 262.445 li
398.308 262.729 li
398.6 262.912 li
399.769 263.344 li
400.041 263.194 li
400.007 262.654 li
399.841 261.738 li
399.88 261.125 li
400.109 260.435 li
400.654 259.35 li
402.286 257.48 li
401.407 256.678 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
401.407 256.678 mo
401.256 256.498 li
400.958 256.383 li
400.594 256.345 li
400.121 256.387 li
399.369 256.233 li
399.021 256.103 li
398.667 255.917 li
398.258 255.845 li
397.826 255.882 li
395.802 256.29 li
395.333 256.485 li
395.066 256.75 li
394.782 256.927 li
394.521 256.763 li
394.218 256.383 li
393.781 256.022 li
393.299 255.875 li
393.053 256.213 li
392.785 257.172 li
392.447 257.497 li
391.988 257.803 li
391.614 258.142 li
391.076 258.476 li
390.611 258.597 li
390.186 258.984 li
389.598 259.318 li
388.215 260.584 li
387.812 262.296 li
387.899 263.149 li
387.722 263.612 li
387.632 264.071 li
387.351 264.431 li
385.168 265.261 li
384.417 265.659 li
383.282 266.862 li
382.567 267.453 li
382.038 268.02 li
381.812 268.45 li
382.545 268.867 li
382.585 269.244 li
382.261 270.189 li
381.761 270.793 li
381.407 271.399 li
381.009 271.67 li
380.542 271.75 li
379.69 272.271 li
379.415 272.596 li
378.949 272.593 li
378.214 272.02 li
377.814 271.868 li
377.377 271.753 li
377.063 271.545 li
377.017 271.179 li
377.067 270.719 li
377.03 270.287 li
375.944 269.58 li
375.731 269.337 li
375.465 268.951 li
375.066 268.557 li
374.688 267.922 li
374.174 267.713 li
373.695 267.585 li
373.271 267.411 li
373.009 267.1 li
372.982 266.652 li
373.029 266.275 li
372.901 265.84 li
372.522 265.481 li
372.144 264.737 li
371.983 264.253 li
371.761 263.852 li
371.437 263.758 li
370.862 263.333 li
370.479 263.327 li
369.998 263.236 li
369.513 263.01 li
368.93 262.038 li
368.637 261.906 li
368.241 261.834 li
368.054 261.752 li
367.765 261.705 li
367.471 261.697 li
367.216 261.765 li
367.051 261.916 li
367.024 262.226 li
367.021 262.656 li
366.642 264.36 li
366.41 265.008 li
365.48 266.252 li
365.068 266.605 li
364.683 266.862 li
363.981 267.024 li
363.946 267.607 li
363.896 267.902 li
363.81 268.245 li
363.583 268.84 li
363.562 269.176 li
363.478 269.524 li
363.223 269.836 li
362.625 270.078 li
362.174 270.173 li
361.493 270.468 li
360.4 271.475 li
359.061 272.547 li
358.751 272.912 li
358.582 273.361 li
358.408 273.646 li
357.956 274.121 li
357.771 274.553 li
357.565 274.873 li
356.58 275.669 li
356.131 276.877 li
355.508 277.439 li
354.91 277.746 li
354.483 277.892 li
353.765 277.939 li
353.404 278.039 li
352.762 278.498 li
352.334 278.898 li
351.891 279.663 li
351.42 280.298 li
351.364 280.646 li
351.379 281.204 li
349.993 282.025 li
348.759 282.389 li
348.651 282.523 li
348.606 282.844 li
348.561 283.626 li
348.411 284.447 li
348.392 284.849 li
348.316 285.194 li
348.106 285.483 li
347.767 285.688 li
346.512 285.652 li
345.631 285.839 li
344.601 285.908 li
343.724 286.159 li
343.549 286.184 li
343.401 286.169 li
343.21 286.063 li
342.955 286.008 li
342.642 286.02 li
341.775 286.338 li
341.323 286.69 li
340.975 286.897 li
340.538 286.98 li
339.733 287.043 li
338.783 287.408 li
338.273 287.779 li
337.381 288.699 li
337.157 289.258 li
337.07 289.709 li
337.03 290.056 li
336.794 290.372 li
336.376 290.633 li
334.517 291.18 li
333.967 291.137 li
333.108 291.674 li
331.998 294.046 li
331.178 294.608 li
328.896 295.734 li
325.115 298.79 li
323.153 301.172 li
322.497 301.165 li
322.053 301.029 li
321.226 301.143 li
320.118 301.563 li
317.103 303.252 li
314.759 304.032 li
314.068 304.439 li
312.425 305.962 li
311.902 306.634 li
311.653 307.283 li
311.444 308.04 li
310.965 308.855 li
310.433 309.532 li
310.128 310.346 li
309.66 310.877 li
309.195 311.945 li
305.876 314.738 li
305.209 315.607 li
304.489 316.351 li
303.438 317.725 li
303.953 319.383 li
303.807 320.127 li
303.368 321.047 li
303.096 321.854 li
302.68 322.444 li
302.249 323.271 li
302.051 323.861 li
301.684 324.557 li
301.747 325.216 li
302.812 330.657 li
303.028 331.387 li
303.253 331.845 li
304.078 332.125 li
304.886 332.672 li
305.422 333.451 li
306.206 335.445 li
306.795 336.016 li
307.412 336.3 li
308.083 336.202 li
308.913 337.006 li
310.551 338.295 li
312.325 338.086 li
313.184 338.417 li
314.093 339.242 li
314.885 340.312 li
316.088 342.486 li
317.293 344.279 li
318.231 345.313 li
318.877 345.892 li
319.715 346.247 li
321.482 346.365 li
323.569 345.95 li
324.515 345.994 li
325.026 346.272 li
325.457 346.863 li
325.498 347.524 li
325.806 348.36 li
326.2 351.639 li
326.901 352.415 li
327.476 352.831 li
329.642 351.634 li
332.886 346.063 li
333.685 345.679 li
334.609 345.453 li
335.572 345.434 li
337.331 345.07 li
338.577 345.228 li
338.581 345.226 li
345.192 346.617 li
345.996 346.584 li
346.43 346.271 li
346.572 345.661 li
346.44 343.879 li
346.276 342.896 li
345.896 342.165 li
345.169 342.06 li
345.339 341.692 li
345.642 341.53 li
345.892 341.304 li
345.911 340.738 li
345.777 340.221 li
345.221 338.771 li
344.792 336.509 li
344.469 335.475 li
343.811 334.877 li
344.455 334.502 li
344.648 334.447 li
344.905 334.322 li
344.934 334.031 li
344.88 333.691 li
344.88 333.42 li
345.454 332.672 li
345.7 332.228 li
345.728 331.667 li
345.406 329.951 li
345.437 329.607 li
346.368 327.445 li
346.398 327.152 li
346.184 326.91 li
345.644 326.637 li
344.974 326.449 li
342.889 326.412 li
343.483 326.08 li
345.555 326.206 li
345.972 326.318 li
346.404 326.523 li
346.804 326.621 li
347.117 326.412 li
347.642 326.577 li
348.185 326.27 li
349.428 324.849 li
349.69 324.638 li
350.29 324.429 li
350.048 324.163 li
349.335 323.766 li
348.818 323.339 li
348.267 322.729 li
347.8 322.046 li
347.545 321.393 li
347.223 320.799 li
346.646 320.336 li
346.003 319.913 li
345.493 319.448 li
345.463 319.115 li
346.038 319.229 li
346.802 319.576 li
347.648 320.162 li
348.334 320.383 li
348.648 320.572 li
349.219 321.087 li
349.781 321.701 li
350.495 322.744 li
350.869 323.394 li
351.362 323.356 li
351.616 323.261 li
352.193 322.836 li
352.855 322.653 li
353.092 322.431 li
353.306 322.155 li
353.561 321.906 li
353.916 321.774 li
354.8 321.597 li
356.426 320.47 li
356.55 320.003 li
355.699 316.953 li
356.001 317.289 li
356.122 317.629 li
356.179 317.994 li
356.304 318.405 li
356.93 319.383 li
357.057 319.746 li
357.493 320.322 li
358.217 320.214 li
362.425 317.158 li
364.803 316.091 li
365.242 315.694 li
365.328 315.016 li
364.251 314.188 li
363.279 313.063 li
362.44 311.843 li
361.885 311.248 li
361.295 310.995 li
360.638 310.901 li
359.146 310.325 li
357.613 309.247 li
356.94 308.579 li
363.188 311.145 li
364.768 312.342 li
366.767 314.494 li
367.163 314.75 li
367.467 314.803 li
369.473 314.513 li
369.717 314.393 li
369.951 314.033 li
369.991 313.884 li
369.911 313.708 li
369.767 313.266 li
369.644 312.531 li
369.586 311.647 li
369.687 310.901 li
370.044 310.586 li
370.718 310.454 li
371.316 310.213 li
371.934 310.117 li
372.65 310.403 li
372.889 310.612 li
373.267 311.031 li
373.467 311.2 li
373.923 311.355 li
374.69 311.253 li
375.008 311.315 li
375.765 311.714 li
375.992 311.94 li
375.646 312.038 li
375.273 312.082 li
371.75 313.214 li
371.103 313.31 li
370.822 313.441 li
370.616 313.662 li
370.576 313.982 li
370.81 314.098 li
371.786 313.956 li
373.839 313.266 li
375.252 313.14 li
375.883 312.818 li
377.857 312.562 li
378.482 312.271 li
378.912 312.244 li
378.534 312.805 li
378.632 313.206 li
379.751 314.086 li
380.385 314.698 li
380.721 314.901 li
381.258 314.747 li
381.934 315.347 li
382.303 315.521 li
383.921 315.521 li
384.521 315.623 li
384.591 315.557 li
383.615 314.475 li
383.21 313.668 li
383.091 312.848 li
383.3 312.038 li
382.937 311.775 li
382.804 311.429 li
382.913 311.127 li
383.274 310.995 li
383.624 311.145 li
383.708 311.509 li
383.737 311.949 li
383.941 312.344 li
384.294 312.73 li
384.369 312.961 li
384.343 313.214 li
384.425 313.679 li
384.594 314.073 li
385.03 314.747 li
385.205 315.127 li
385.374 314.926 li
385.575 314.825 li
385.803 314.876 li
386.049 315.127 li
386.026 314.926 li
386.068 314.291 li
386.535 314.385 li
387.019 313.679 li
387.396 314.086 li
387.576 313.34 li
387.626 312.496 li
387.544 311.625 li
387.307 310.81 li
387.214 310.662 li
386.955 310.354 li
386.86 310.177 li
386.867 310.032 li
386.92 309.822 li
386.947 309.576 li
386.882 309.341 li
386.535 308.982 li
386.146 308.738 li
385.804 308.434 li
385.607 307.906 li
385.336 308.062 li
384.757 308.744 li
384.585 308.335 li
384.258 308.08 li
383.865 307.942 li
383.489 307.906 li
383.192 308.046 li
383.039 308.363 li
382.924 308.719 li
382.75 308.95 li
382.425 309.034 li
382.303 308.853 li
382.231 308.021 li
382.097 307.516 li
381.907 307.263 li
381.187 306.9 li
381.102 307.657 li
381.12 308.427 li
381.03 308.529 li
380.757 308.288 li
380.448 307.861 li
380.26 307.406 li
379.851 307.344 li
378.963 307.334 li
378.077 307.541 li
377.668 308.13 li
377.093 307.979 li
376.388 307.875 li
376.056 307.644 li
376.623 307.108 li
377.322 306.89 li
378.94 306.794 li
379.594 306.514 li
378.013 306.143 li
377.592 305.899 li
377.313 305.479 li
377.398 305.285 li
377.699 305.333 li
378.075 305.674 li
378.037 305.199 li
377.01 303.425 li
376.226 301.554 li
375.875 300.945 li
374.868 301.716 li
373.795 302.244 li
371.285 302.811 li
367.745 302.015 li
371.016 302.081 li
372.654 301.839 li
374.07 301.356 li
374.324 301.171 li
374.943 300.542 li
375.298 300.488 li
376.14 300.502 li
376.273 300.317 li
376.036 298.726 li
376 297.971 li
376.052 297.248 li
373.121 297.452 li
369.546 296.544 li
374.688 296.854 li
375.137 296.795 li
375.497 296.635 li
375.645 296.433 li
375.727 296.188 li
376.17 295.377 li
376.515 294.131 li
376.769 293.543 li
378.456 292.309 li
378.998 291.557 li
379.765 291.217 li
382.99 290.481 li
384.045 289.649 li
384.224 289.444 li
384.284 289.183 li
384.313 288.847 li
384.404 288.55 li
385.351 288.074 li
386.039 287.979 li
386.299 287.895 li
387.278 287.294 li
387.474 287.089 li
387.53 286.878 li
387.519 286.459 li
387.656 286.307 li
387.857 286.204 li
388.049 285.942 li
388.161 285.577 li
388.148 285.403 li
388.089 285.239 li
388.037 284.9 li
387.821 284.318 li
387.818 284.013 li
388.533 283.655 li
388.916 283.117 li
389.182 282.479 li
389.275 281.432 li
390.571 277.708 li
390.425 277.638 li
390.312 277.57 li
390.185 277.515 li
390.008 277.502 li
389.97 277.279 li
390.981 276.768 li
391.385 275.663 li
391.548 274.346 li
391.848 273.195 li
392.912 271.76 li
393.189 271.533 li
393.434 271.439 li
393.895 271.015 li
394.203 270.918 li
394.595 270.977 li
394.904 271.144 li
395.521 271.76 li
395.674 271.559 li
395.802 271.328 li
395.582 271.046 li
395.077 270.576 li
394.932 270.301 li
394.892 269.811 li
395.037 269.563 li
395.273 269.396 li
395.516 269.162 li
395.588 268.99 li
395.748 268.455 li
396.105 268.473 li
396.271 268.445 li
396.399 268.341 li
396.982 267.202 li
397.441 266.746 li
398.455 266.093 li
398.872 265.665 li
399.222 264.873 li
399.604 264.301 li
399.628 264.161 li
398.541 263.205 li
398.045 262.867 li
397.664 262.407 li
397.401 261.533 li
397.431 261.24 li
397.619 261.293 li
397.838 261.564 li
397.98 261.927 li
398.114 262.445 li
398.308 262.729 li
398.6 262.912 li
399.769 263.344 li
400.041 263.194 li
400.007 262.654 li
399.841 261.738 li
399.88 261.125 li
400.109 260.435 li
400.654 259.35 li
402.286 257.48 li
401.407 256.678 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
397.276 86.6733 mo
397.258 87.0547 li
397.606 87.8354 li
397.638 88.1885 li
397.296 88.4707 li
397.563 88.5947 li
398.482 88.6206 li
398.854 88.4917 li
398.867 88.1826 li
398.598 87.4175 li
398.4 86.9854 li
398.017 86.6113 li
397.592 86.4526 li
397.276 86.6733 li
cp
410.554 104.792 mo
410.332 104.668 li
409.985 104.56 li
409.379 104.102 li
409.104 104 li
408.878 104.055 li
408.088 104.452 li
407.957 104.405 li
407.804 104.279 li
407.639 104.214 li
407.089 104.631 li
406.675 104.771 li
406.412 104.972 li
406.115 105.098 li
405.706 104.992 li
405.308 104.441 li
405.415 102.996 li
405.018 102.272 li
404.453 102.053 li
403.627 101.958 li
403.044 102.107 li
403.21 102.633 li
403.725 103.406 li
403.434 103.643 li
402.781 103.669 li
402.218 103.823 li
402.16 102.996 li
401.868 102.272 li
401.123 100.779 li
400.947 100.779 li
400.68 104.234 li
400.476 104.591 li
400.311 104.631 li
400.144 104.411 li
399.948 104 li
399.754 103.396 li
399.85 103.117 li
400.077 102.912 li
400.289 102.53 li
400.253 101.574 li
399.648 101.211 li
398.04 101.211 li
396.814 100.948 li
396.419 101.015 li
396.117 101.19 li
395.872 101.432 li
395.676 101.736 li
395.505 102.098 li
395.304 101.854 li
395.295 102.189 li
395.369 102.625 li
395.385 103.011 li
395.197 103.174 li
394.857 102.996 li
394.69 102.565 li
394.49 101.219 li
394.485 101.034 li
394.351 100.918 li
393.91 100.67 li
393.745 100.417 li
393.958 100.167 li
394.297 99.9277 li
394.505 99.6963 li
394.04 99.5835 li
393.15 99.7217 li
392.927 99.6963 li
392.9 99.48 li
393.273 99.0166 li
393.641 98.7437 li
394.497 98.2817 li
394.868 98.2817 li
395.34 99.1509 li
395.852 99.2637 li
395.769 99.5371 li
395.781 99.7739 li
395.899 99.9697 li
396.135 100.129 li
396.762 99.7661 li
397.143 99.8896 li
397.513 100.186 li
398.089 100.346 li
395.962 95.585 li
395.472 94.8052 li
394.877 94.2568 li
396.003 94.6655 li
396.425 94.7095 li
397.026 94.4673 li
398.127 93.7847 li
398.224 93.6123 li
397.927 93.3906 li
397.621 93.3984 li
396.58 93.8228 li
395.867 93.772 li
395.498 93.6743 li
395.222 93.4995 li
394.848 93.1533 li
394.715 93.0664 li
394.648 92.417 li
394.521 91.9922 li
394.172 91.4336 li
394.124 91.0156 li
394.252 90.7944 li
394.75 90.459 li
394.892 90.1304 li
394.668 89.8979 li
394.438 89.7178 li
394.197 89.5811 li
393.937 89.502 li
393.907 89.2646 li
394.489 89.2339 li
394.481 88.6982 li
393.84 87.3018 li
394.544 87.5698 li
395.026 88.1982 li
395.734 89.6968 li
395.779 89.1929 li
395.77 88.6235 li
395.652 88.0825 li
395.134 87.2397 li
394.613 85.9341 li
394.495 85.4946 li
394.926 85.417 li
397.061 85.5303 li
397.821 85.3965 li
397.182 85.2056 li
396.454 85.1079 li
395.85 84.8765 li
395.578 84.2969 li
395.592 83.9497 li
395.663 83.918 li
395.771 83.9707 li
395.896 83.8643 li
395.911 83.918 li
395.98 83.9878 li
396.071 84.0215 li
396.155 83.9717 li
396.206 83.8311 li
396.143 83.7744 li
396.051 83.7324 li
396.027 83.6484 li
396.131 83.2236 li
396.091 83.0459 li
395.392 82.7646 li
394.231 82.0293 li
393.294 81.0996 li
391.581 78.875 li
391.208 78.5039 li
390.774 78.7949 li
388.531 80.9331 li
387.843 81.4878 li
387.963 81.6938 li
388.014 81.748 li
388.079 81.7769 li
388.248 81.9204 li
388.21 82.332 li
388.064 82.4434 li
387.85 82.4556 li
387.607 82.5669 li
386.987 83.2153 li
386.266 83.5576 li
385.964 83.7744 li
385.605 84.189 li
385.229 84.4902 li
384.729 84.6519 li
383.646 84.7295 li
383.225 84.5674 li
382.844 84.3306 li
382.572 84.4048 li
382.47 85.1621 li
382.093 84.9634 li
382.39 85.9785 li
383.021 86.5142 li
383.859 86.6992 li
385.354 86.5864 li
385.567 86.4443 li
385.848 86.1431 li
386.207 85.6025 li
386.379 85.5869 li
387.247 86.0894 li
387.312 86.272 li
386.809 86.7822 li
386.745 87.1426 li
387.009 87.498 li
387.36 87.8423 li
387.604 88.1885 li
387.233 88.6694 li
387.157 88.8315 li
387.183 88.9346 li
387.393 90.5854 li
387.525 90.8198 li
387.696 90.3462 li
387.938 90.709 li
387.872 92.124 li
388.172 92.7422 li
388.3 92.6694 li
388.683 92.5249 li
388.583 92.8262 li
388.217 93.1797 li
388.076 93.3906 li
388.022 93.8623 li
388.037 94.3804 li
387.975 94.7354 li
387.698 94.7095 li
387.512 95.3428 li
387.21 94.9878 li
386.86 94.2637 li
386.55 93.8228 li
386.59 94.04 li
386.62 94.4883 li
386.662 94.7095 li
386.1 94.3643 li
385.849 94.2817 li
385.539 94.2568 li
385.635 93.9243 li
385.626 93.623 li
385.493 93.3677 li
385.228 93.1743 li
385.572 93.1284 li
385.936 92.9785 li
386.173 92.814 li
386.135 92.7422 li
385.852 92.6948 li
384.768 92.3091 li
385.121 92 li
385.103 91.644 li
384.814 91.3506 li
384.369 91.2324 li
383.971 90.9878 li
383.258 89.9395 li
382.684 89.46 li
382.17 88.4219 li
381.78 88.1885 li
381.425 88.3223 li
381.218 88.6563 li
380.908 89.502 li
380.715 89.0483 li
380.692 88.6152 li
380.866 87.7554 li
380.542 87.791 li
380.366 87.9712 li
380.296 88.2554 li
380.271 88.6206 li
380.612 90.0728 li
381.55 91.5283 li
385.647 95.9663 li
387.28 98.3774 li
387.945 99.7969 li
388.884 102.777 li
390.381 106.388 li
390.743 106.945 li
391.295 107.214 li
391.875 107.006 li
392.364 106.52 li
392.651 105.963 li
393.328 106.52 li
393.537 106.507 li
393.743 106.18 li
393.829 105.824 li
393.889 105.059 li
394.061 104.668 li
394.673 104.158 li
395.498 103.911 li
397.222 103.823 li
398.91 104.116 li
398.853 104.464 li
398.643 104.781 li
398.359 105.013 li
398.072 105.098 li
397.829 105.492 li
397.969 106.195 li
398.379 106.507 li
398.938 105.729 li
399.229 106.195 li
399.483 106.8 li
399.775 107.208 li
400.155 107.063 li
400.698 107.48 li
402.07 108 li
402.068 108.342 li
402.33 108.713 li
402.508 109.146 li
402.485 109.504 li
402.146 109.656 li
401.783 109.463 li
400.667 108.342 li
400.044 108.404 li
399.521 108.861 li
398.618 110.127 li
398.556 109.439 li
398.371 109.366 li
397.131 110.57 li
396.771 110.756 li
397.256 110.969 li
398.576 111.208 li
399.086 111.188 li
398.745 111.493 li
398.415 111.528 li
397.638 111.386 li
397.371 111.605 li
397.5 112.1 li
397.92 112.916 li
397.739 113.66 li
397.25 113.31 li
396.779 112.517 li
396.548 111.498 li
394.942 108.992 li
394.96 108.804 li
395.161 108.458 li
395.174 108.127 li
394.887 107.861 li
394.495 107.732 li
393.51 108.042 li
392.768 107.872 li
392.353 107.913 li
392.643 108.791 li
393.988 110.828 li
394.228 111.502 li
394.359 111.78 li
395.105 112.916 li
395.498 113.92 li
396.219 115.222 li
397.681 114.989 li
399.072 113.964 li
401.198 113.28 li
403.88 112.597 li
406.699 111.914 li
409.009 111.572 li
408.87 109.351 li
409.209 107.642 li
409.614 106.445 li
410.51 106.958 li
411.823 106.226 li
411.604 105.914 li
410.554 104.792 li
cp
415.055 83.9077 mo
414.474 83.2153 li
414.438 83.0918 li
414.451 82.9448 li
414.436 82.8164 li
414.343 82.7646 li
414.195 82.7397 li
414.043 82.6724 li
413.896 82.5742 li
413.771 82.4585 li
413.377 81.915 li
413.341 81.5449 li
413.441 81.1992 li
413.477 80.7207 li
413.578 80.4692 li
413.78 80.1421 li
413.874 79.8613 li
413.63 79.7402 li
413.375 79.6909 li
412.685 79.4155 li
411.96 78.9985 li
411.548 78.6206 li
411.447 78.2578 li
411.921 78.0132 li
411.087 77.4395 li
410.951 77.252 li
410.841 76.853 li
410.638 76.5596 li
410.389 76.3662 li
410.117 76.2661 li
409.463 76.3662 li
409.229 76.855 li
409.402 77.4883 li
409.975 78.0132 li
409.729 78.332 li
409.406 78.4551 li
408.639 78.4458 li
408.996 78.9805 li
409.548 79.2432 li
409.932 79.5166 li
409.779 80.0645 li
409.738 80.4063 li
409.844 80.834 li
409.895 81.2305 li
409.688 81.4878 li
409.482 81.4058 li
408.722 80.605 li
408.988 81.3599 li
409.648 81.9976 li
410.419 82.3174 li
410.99 82.1162 li
411.202 82.3506 li
411.314 82.5278 li
411.342 82.7207 li
411.288 82.999 li
411.893 82.8525 li
412.104 82.8447 li
412.327 82.999 li
412.445 83.2773 li
412.603 84.0781 li
412.776 84.4048 li
413.052 84.397 li
413.407 84.1733 li
413.73 84.0654 li
413.918 84.4048 li
413.979 84.8047 li
414.111 85.1855 li
414.339 85.4224 li
414.695 85.3789 li
414.907 85.144 li
415.284 84.0811 li
415.055 83.9077 li
cp
402.956 98.3774 mo
402.787 98.7646 li
402.802 99.3047 li
402.95 99.6807 li
403.188 99.5889 li
403.474 99.3101 li
403.746 99.3643 li
404.373 99.8926 li
404.212 100.129 li
405.305 100.526 li
405.864 100.608 li
406.389 100.539 li
406.887 100.354 li
407.085 100.346 li
407.423 100.387 li
407.528 100.31 li
407.567 100.075 li
407.503 99.7661 li
407.229 99.1245 li
407.216 98.8154 li
407.466 98.5474 li
407.821 98.4448 li
407.998 98.2817 li
407.719 97.8491 li
407.41 97.5127 li
407.26 97.4189 li
406.737 97.7334 li
405.726 98.7158 li
405.286 99.0244 li
404.998 98.8696 li
404.752 98.5527 li
404.449 98.3774 li
403.155 98.4082 li
402.956 98.3774 li
cp
403.35 81.5034 mo
403.778 81.4517 li
404.151 81.3032 li
404.348 81.0376 li
404.301 80.6357 li
404.073 80.3086 li
403.81 80.0493 li
403.679 79.8486 li
403.324 79.8247 li
402.713 80.1851 li
402.411 80.7876 li
402.998 81.4878 li
403.35 81.5034 li
cp
.494118 .411765 .411765 .0509804 cmyk
ef
397.276 86.6733 mo
397.258 87.0547 li
397.606 87.8354 li
397.638 88.1885 li
397.296 88.4707 li
397.563 88.5947 li
398.482 88.6206 li
398.854 88.4917 li
398.867 88.1826 li
398.598 87.4175 li
398.4 86.9854 li
398.017 86.6113 li
397.592 86.4526 li
397.276 86.6733 li
cp
410.554 104.792 mo
410.332 104.668 li
409.985 104.56 li
409.379 104.102 li
409.104 104 li
408.878 104.055 li
408.088 104.452 li
407.957 104.405 li
407.804 104.279 li
407.639 104.214 li
407.089 104.631 li
406.675 104.771 li
406.412 104.972 li
406.115 105.098 li
405.706 104.992 li
405.308 104.441 li
405.415 102.996 li
405.018 102.272 li
404.453 102.053 li
403.627 101.958 li
403.044 102.107 li
403.21 102.633 li
403.725 103.406 li
403.434 103.643 li
402.781 103.669 li
402.218 103.823 li
402.16 102.996 li
401.868 102.272 li
401.123 100.779 li
400.947 100.779 li
400.68 104.234 li
400.476 104.591 li
400.311 104.631 li
400.144 104.411 li
399.948 104 li
399.754 103.396 li
399.85 103.117 li
400.077 102.912 li
400.289 102.53 li
400.253 101.574 li
399.648 101.211 li
398.04 101.211 li
396.814 100.948 li
396.419 101.015 li
396.117 101.19 li
395.872 101.432 li
395.676 101.736 li
395.505 102.098 li
395.304 101.854 li
395.295 102.189 li
395.369 102.625 li
395.385 103.011 li
395.197 103.174 li
394.857 102.996 li
394.69 102.565 li
394.49 101.219 li
394.485 101.034 li
394.351 100.918 li
393.91 100.67 li
393.745 100.417 li
393.958 100.167 li
394.297 99.9277 li
394.505 99.6963 li
394.04 99.5835 li
393.15 99.7217 li
392.927 99.6963 li
392.9 99.48 li
393.273 99.0166 li
393.641 98.7437 li
394.497 98.2817 li
394.868 98.2817 li
395.34 99.1509 li
395.852 99.2637 li
395.769 99.5371 li
395.781 99.7739 li
395.899 99.9697 li
396.135 100.129 li
396.762 99.7661 li
397.143 99.8896 li
397.513 100.186 li
398.089 100.346 li
395.962 95.585 li
395.472 94.8052 li
394.877 94.2568 li
396.003 94.6655 li
396.425 94.7095 li
397.026 94.4673 li
398.127 93.7847 li
398.224 93.6123 li
397.927 93.3906 li
397.621 93.3984 li
396.58 93.8228 li
395.867 93.772 li
395.498 93.6743 li
395.222 93.4995 li
394.848 93.1533 li
394.715 93.0664 li
394.648 92.417 li
394.521 91.9922 li
394.172 91.4336 li
394.124 91.0156 li
394.252 90.7944 li
394.75 90.459 li
394.892 90.1304 li
394.668 89.8979 li
394.438 89.7178 li
394.197 89.5811 li
393.937 89.502 li
393.907 89.2646 li
394.489 89.2339 li
394.481 88.6982 li
393.84 87.3018 li
394.544 87.5698 li
395.026 88.1982 li
395.734 89.6968 li
395.779 89.1929 li
395.77 88.6235 li
395.652 88.0825 li
395.134 87.2397 li
394.613 85.9341 li
394.495 85.4946 li
394.926 85.417 li
397.061 85.5303 li
397.821 85.3965 li
397.182 85.2056 li
396.454 85.1079 li
395.85 84.8765 li
395.578 84.2969 li
395.592 83.9497 li
395.663 83.918 li
395.771 83.9707 li
395.896 83.8643 li
395.911 83.918 li
395.98 83.9878 li
396.071 84.0215 li
396.155 83.9717 li
396.206 83.8311 li
396.143 83.7744 li
396.051 83.7324 li
396.027 83.6484 li
396.131 83.2236 li
396.091 83.0459 li
395.392 82.7646 li
394.231 82.0293 li
393.294 81.0996 li
391.581 78.875 li
391.208 78.5039 li
390.774 78.7949 li
388.531 80.9331 li
387.843 81.4878 li
387.963 81.6938 li
388.014 81.748 li
388.079 81.7769 li
388.248 81.9204 li
388.21 82.332 li
388.064 82.4434 li
387.85 82.4556 li
387.607 82.5669 li
386.987 83.2153 li
386.266 83.5576 li
385.964 83.7744 li
385.605 84.189 li
385.229 84.4902 li
384.729 84.6519 li
383.646 84.7295 li
383.225 84.5674 li
382.844 84.3306 li
382.572 84.4048 li
382.47 85.1621 li
382.093 84.9634 li
382.39 85.9785 li
383.021 86.5142 li
383.859 86.6992 li
385.354 86.5864 li
385.567 86.4443 li
385.848 86.1431 li
386.207 85.6025 li
386.379 85.5869 li
387.247 86.0894 li
387.312 86.272 li
386.809 86.7822 li
386.745 87.1426 li
387.009 87.498 li
387.36 87.8423 li
387.604 88.1885 li
387.233 88.6694 li
387.157 88.8315 li
387.183 88.9346 li
387.393 90.5854 li
387.525 90.8198 li
387.696 90.3462 li
387.938 90.709 li
387.872 92.124 li
388.172 92.7422 li
388.3 92.6694 li
388.683 92.5249 li
388.583 92.8262 li
388.217 93.1797 li
388.076 93.3906 li
388.022 93.8623 li
388.037 94.3804 li
387.975 94.7354 li
387.698 94.7095 li
387.512 95.3428 li
387.21 94.9878 li
386.86 94.2637 li
386.55 93.8228 li
386.59 94.04 li
386.62 94.4883 li
386.662 94.7095 li
386.1 94.3643 li
385.849 94.2817 li
385.539 94.2568 li
385.635 93.9243 li
385.626 93.623 li
385.493 93.3677 li
385.228 93.1743 li
385.572 93.1284 li
385.936 92.9785 li
386.173 92.814 li
386.135 92.7422 li
385.852 92.6948 li
384.768 92.3091 li
385.121 92 li
385.103 91.644 li
384.814 91.3506 li
384.369 91.2324 li
383.971 90.9878 li
383.258 89.9395 li
382.684 89.46 li
382.17 88.4219 li
381.78 88.1885 li
381.425 88.3223 li
381.218 88.6563 li
380.908 89.502 li
380.715 89.0483 li
380.692 88.6152 li
380.866 87.7554 li
380.542 87.791 li
380.366 87.9712 li
380.296 88.2554 li
380.271 88.6206 li
380.612 90.0728 li
381.55 91.5283 li
385.647 95.9663 li
387.28 98.3774 li
387.945 99.7969 li
388.884 102.777 li
390.381 106.388 li
390.743 106.945 li
391.295 107.214 li
391.875 107.006 li
392.364 106.52 li
392.651 105.963 li
393.328 106.52 li
393.537 106.507 li
393.743 106.18 li
393.829 105.824 li
393.889 105.059 li
394.061 104.668 li
394.673 104.158 li
395.498 103.911 li
397.222 103.823 li
398.91 104.116 li
398.853 104.464 li
398.643 104.781 li
398.359 105.013 li
398.072 105.098 li
397.829 105.492 li
397.969 106.195 li
398.379 106.507 li
398.938 105.729 li
399.229 106.195 li
399.483 106.8 li
399.775 107.208 li
400.155 107.063 li
400.698 107.48 li
402.07 108 li
402.068 108.342 li
402.33 108.713 li
402.508 109.146 li
402.485 109.504 li
402.146 109.656 li
401.783 109.463 li
400.667 108.342 li
400.044 108.404 li
399.521 108.861 li
398.618 110.127 li
398.556 109.439 li
398.371 109.366 li
397.131 110.57 li
396.771 110.756 li
397.256 110.969 li
398.576 111.208 li
399.086 111.188 li
398.745 111.493 li
398.415 111.528 li
397.638 111.386 li
397.371 111.605 li
397.5 112.1 li
397.92 112.916 li
397.739 113.66 li
397.25 113.31 li
396.779 112.517 li
396.548 111.498 li
394.942 108.992 li
394.96 108.804 li
395.161 108.458 li
395.174 108.127 li
394.887 107.861 li
394.495 107.732 li
393.51 108.042 li
392.768 107.872 li
392.353 107.913 li
392.643 108.791 li
393.988 110.828 li
394.228 111.502 li
394.359 111.78 li
395.105 112.916 li
395.498 113.92 li
396.219 115.222 li
397.681 114.989 li
399.072 113.964 li
401.198 113.28 li
403.88 112.597 li
406.699 111.914 li
409.009 111.572 li
408.87 109.351 li
409.209 107.642 li
409.614 106.445 li
410.51 106.958 li
411.823 106.226 li
411.604 105.914 li
410.554 104.792 li
cp
415.055 83.9077 mo
414.474 83.2153 li
414.438 83.0918 li
414.451 82.9448 li
414.436 82.8164 li
414.343 82.7646 li
414.195 82.7397 li
414.043 82.6724 li
413.896 82.5742 li
413.771 82.4585 li
413.377 81.915 li
413.341 81.5449 li
413.441 81.1992 li
413.477 80.7207 li
413.578 80.4692 li
413.78 80.1421 li
413.874 79.8613 li
413.63 79.7402 li
413.375 79.6909 li
412.685 79.4155 li
411.96 78.9985 li
411.548 78.6206 li
411.447 78.2578 li
411.921 78.0132 li
411.087 77.4395 li
410.951 77.252 li
410.841 76.853 li
410.638 76.5596 li
410.389 76.3662 li
410.117 76.2661 li
409.463 76.3662 li
409.229 76.855 li
409.402 77.4883 li
409.975 78.0132 li
409.729 78.332 li
409.406 78.4551 li
408.639 78.4458 li
408.996 78.9805 li
409.548 79.2432 li
409.932 79.5166 li
409.779 80.0645 li
409.738 80.4063 li
409.844 80.834 li
409.895 81.2305 li
409.688 81.4878 li
409.482 81.4058 li
408.722 80.605 li
408.988 81.3599 li
409.648 81.9976 li
410.419 82.3174 li
410.99 82.1162 li
411.202 82.3506 li
411.314 82.5278 li
411.342 82.7207 li
411.288 82.999 li
411.893 82.8525 li
412.104 82.8447 li
412.327 82.999 li
412.445 83.2773 li
412.603 84.0781 li
412.776 84.4048 li
413.052 84.397 li
413.407 84.1733 li
413.73 84.0654 li
413.918 84.4048 li
413.979 84.8047 li
414.111 85.1855 li
414.339 85.4224 li
414.695 85.3789 li
414.907 85.144 li
415.284 84.0811 li
415.055 83.9077 li
cp
402.956 98.3774 mo
402.787 98.7646 li
402.802 99.3047 li
402.95 99.6807 li
403.188 99.5889 li
403.474 99.3101 li
403.746 99.3643 li
404.373 99.8926 li
404.212 100.129 li
405.305 100.526 li
405.864 100.608 li
406.389 100.539 li
406.887 100.354 li
407.085 100.346 li
407.423 100.387 li
407.528 100.31 li
407.567 100.075 li
407.503 99.7661 li
407.229 99.1245 li
407.216 98.8154 li
407.466 98.5474 li
407.821 98.4448 li
407.998 98.2817 li
407.719 97.8491 li
407.41 97.5127 li
407.26 97.4189 li
406.737 97.7334 li
405.726 98.7158 li
405.286 99.0244 li
404.998 98.8696 li
404.752 98.5527 li
404.449 98.3774 li
403.155 98.4082 li
402.956 98.3774 li
cp
403.35 81.5034 mo
403.778 81.4517 li
404.151 81.3032 li
404.348 81.0376 li
404.301 80.6357 li
404.073 80.3086 li
403.81 80.0493 li
403.679 79.8486 li
403.324 79.8247 li
402.713 80.1851 li
402.411 80.7876 li
402.998 81.4878 li
403.35 81.5034 li
cp
.0156863 .00784314 .00784314 0 cmyk
@
.694118 .631373 .619608 .584314 cmyk
%ADOBeginSubsetFont: Roboto-Light Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Roboto-Light def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 46 /period put
dup 67 /C put
dup 70 /F put
dup 77 /M put
dup 86 /V put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
dup 169 /copyright put
def
/FontBBox {-474 -271 1146 1048} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
21 dict dup begin
/.notdef <1C60D8A8C9B879BEDE> |-
/space <1C60D8A8C9B879BEDE> |-
/period <1C60D8A8C9B87DE052DAF2DBC128D720E2595608> |-
/C <1C60D8A8C9B6747BB44E91F5A44E5C956708D717B186230360326090175A
105638B12D17F3AC56A3C73AFDAA1267720B3D2E06ADE5219664A5624677528A
D814928CC4455730E265C6EDB81AD8D69A18111B229AC6DD702EB8C791958844
5A2699E9C5CA6B8562FBBD77F404EFF3BD046C0E2BB5BE53544F682DB39E9A4F
A2F254961613514FF36508FBE9CC6D> |-
/F <1C60D8A8C9B794D334AF09011CC83D8A977AFE03EC1D2F2DE390B5D7B3EA
6F76B640B6A63A0C815E> |-
/M <1C60D8A8C9B69378631BE188059E53E4B0080F861F384715EC0BDFF820AF
00774B70B3BAE7AA1FD29A541423D92F990337D7ABCE6713FB412F7215> |-
/V <1C60D8A8C9B7D61BE5BD453F6CE069F883283535B8C041214E48F8AD05F6
7BCF0DB080E83A6DECB6240DA9> |-
/a <1C60D8A8C9B78181CF89FCCF642CFE9EA6860C048952730488D11972FFEE
454EAE8147B085ECC51C14F2897E6117DABCAB72FE1ED473CAD7F18C8494C8C1
EBD2F54783164370942B3FBFC1978D6849E7BBC91E8ADADEED9273932B7FF0AC
EC898A546F97A1B13DA54B5370218EA8788537DE9A067188DC72373D17CFBF8F
73C671DB956E1560A6369F5C55C4D3D5734D8578607E5E98913D41FDDA7382BB
88DCA9F5C6EF831843BFC1BDAE6363C6E97350D63CB9FDC98FF7D578907FC031
5822326454DF4E798DDB1EE58AB2> |-
/c <1C60D8A8C9B7B8EB2AF4F306B0D6054C19C1100BB8EF910A7C2387FADFBE
8BA460E0F8B2E67F3AEFEE1B757C6462BF91EE64FA2ED1578CFB5F7FC23D1A6A
2F2A2EC073233E551E5C08B968C9ED4BEB89AF03BC9A1E0A1C6EECF86B26B395
27E8BEC6482A6534E0230E984E8CBB58A89EBBDD4DF0B271BEFF724002F1659A
1DD1B63A6EC2BB6B743D3B695BE2> |-
/e <1C60D8A8C9B7B8EB25DC2A432E78D8DA98C5FEEB76418C2F5064D222355A
7086482E15C640DD4B7F96D1F43F6126435F8E587B207D9D65A9B7DB8063419B
40A41ED24A5A60C52C860B3E9A51095FF96BBAAA1615B5FFE93EE676EC26509C
F848CA40EC2A4CDB277A71453CE0687463F31333B7432E3D96EFEF982FAD1041
943512AA033006D3FB56ACEDF00C47C33ECA641BE647436052> |-
/g <1C60D8A8C9B7EE7C2DEFD0A56810F6CDACEEEF2661D4FF881B8E16C2C732
DA2729524484103FE172C569A096BCE4C6EE4DFAF6FC1CB07F12B09876A4FD8F
33BD222FAED433206AF10BDCA98DE9AF100E71C29D23281662946AAA4EA1A7F3
73D049155C858618A9A3F748FDF253610758CEE2EC115E62C84F96F2A37BFEC9
91ED94DB82E6F6BFFEB3A8A5B9A3F5E7EC0651FA6546116E4E6E0AEEEDE3A083
2AE07420BFFB7298EAC473DA0581187316A8D652B7F4D176A5881E1F0C7D702A
3DCCD7AAF60B11156EF890> |-
/h <1C60D8A8C9B7EE7C19EBED65F02B761F1813C716406D53F6EA9D29B36E4B
6B390233946C6E2CD668292FB8E6A433746CF9CCB6DEB193B97083EAED70B9D8
B47FD427314477CC033276DAFDFA829454390C4AF85EF429FC53A1> |-
/i <1C60D8A8C9B88997F3B61BAB998BFD8FBD37E68D323462A94E3AF8765121
3078> |-
/m <1C60D8A8C9B598EE57AEB6092C0E332C5F9B7408DF718656450BF4C04040
0E781C99815404E2F3CF07415B0F8E868BD72F13023D0294C2C77B3D8E5BE3AA
BF0E17DD8E0E3D5BDCA59C9AB9AC9E27669B204FB720F1C4021FC2185084767F
C423839651E331CB839F5237CD5586A3D8557ABF6DAC6E8E5F998CE3EBEF5DCB
F035E2A20BAE0099EEA78440029311DCCF2B1223A9581C07999F335779BE0F13
7D844AC50683A585E1> |-
/o <1C60D8A8C9B7EE7C596447C564123A2E2BD67D1934DBBF29AFAEAAE04814
BEF077BE3496F670F616A330629EA9C4677BBCA1C86B76B01830B2BDB3932F3A
916103FE53FAF170DEC8E0DAFE3DBC54A604A64A4ACBB42989FE66B5FB794440
662F252A670E5BF88802F0E866A771484384E2C1C1D66B2BE82BDF5B0525896D
2B3ED74412F9B5> |-
/p <1C60D8A8C9B7EE7C16066AEB31BC1D50A6012C82270105001EFEF0953BF7
0FA5E6D6D83D8E07C7420211D9F7F0A1DD198AE9D0AB70BD9441A811F2EE300E
78BBF1A11D737D4F80AE2B9CCAE0DCBD1C505ACF935A89BF6AA7808E109ED0F7
F5C88605060BB873A7D34149F8052782E193AF05F2BD1E1A86554C4CBD2A2FB4
52D2A90FC666DD567D828DC65C7BE16024059424> |-
/r <1C60D8A8C9B817A07448DA411068A6A5D634984EA5F4DDF4059DDFD27DDB
85BEC7E37A35C1F63BF3BBD58A537A4788380A704976A4955F50B98222F6AF57
7BEB65610B536F276AAAF8B3A6> |-
/s <1C60D8A8C9B7BEB14137006B992FAE68FE5C96301D8EDFA7AE3DA0CFA208
5E264538EF8D8D756FF879D9A35E10594E6943D640F22941A67079BCC7F6CBA8
7DBC1AEF51BA8C845F9FE7CB104CE4FF51A31278ACFB6F21FF5DB94975ED1348
3711DDBF9896E80332BAEB6DB3BDEEB53F9042AAF8D89E5274566A33092268CD
46067083DD8B5236D3995D079C162CC11A47734D96EC3852BCF927B436DFF2A7
D69CFD689322AD0D226558BE820A6AE99E73E1333BA8261FEB3A0069AFF42613
A230> |-
/t <1C60D8A8C9B8286E8459EA799CD6F16BCE45FB2AA24DC8BD95A27140F603
BC94D3B91D09A52066E565A99576D2D453A7D7AC28C85225E88B769EEC1146D0
B04CD852FC9DD43F10116E3E92361EFB151C1B431290FCAE5CA2BA0B35250C0C
C5DB794B9027> |-
/y <1C60D8A8C9B752AB6199BEE42C14215B0ABE7188848D65C43051962701F9
A6317C00A5A63FE4868A0782B6276A2426FAB3497953848B3B66F66A2681BE71
FC40E1AC93CE4CE2010739A26873116A847C1A8D47057B059A8DDFEF30A0B525
38F618E8BF77> |-
/copyright <1C60D8A8C9B6D24F7C03A9BBA01D6C0EBAF6168E7A2762D828F0
B616BABD1F873A4DFA8615677547CFA0EB8C8055162519E8489159447DAC04B6
94B3F0941CEFEFA5ACB093A8069032CF7B563D13957CE80F4BC27CCBE470E3F3
BCBE6C6285452D5D1882F5AD8878BE994CAFF0A0766274E4F400A566DB092C0D
D205F4AD83739D622C2EB7404E616364E4EC08CF594A5F0D5F0E643DBCEE6335
0125AD0D58CFD6BB4FCDEF64AB0CDA06B2EB0E7C470B0E781D966660787799AB
00D6E1E876943F764EB36FC8A3BF6333255E8D68592AFD0D34E2B5A384F59C67
A781090B654BDFC3546B527E7C3319D06211D7E829AA3AA4F5A470D0BCE44F57
C0D6CFEF21D2661E651E4477> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/OTQQPZ+Roboto-Light /Roboto-Light findfont ct_VMDictPut
/OTQQPZ+Roboto-Light*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 20{/.notdef}rp /C 2{/.notdef}rp /F 
6{/.notdef}rp /M 8{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c 
/.notdef /e /.notdef /g /h /i 3{/.notdef}rp /m 
/.notdef /o /p /.notdef /r /s /t 4{/.notdef}rp 
/y 47{/.notdef}rp /copyright 86{/.notdef}rp]
OTQQPZ+Roboto-Light nf
OTQQPZ+Roboto-Light*1 [8 0 0 -8 0 0 ]msf
584.112 528 mo
(Copyright \251 Free Vector Maps.com)
[5.20898 4.5332 4.49023 3.99365 2.81055 1.89648 4.5332 4.5332 2.6543 2.0249 6.47461 2.02539 
4.38477 2.73633 4.19727 4.19678 2.02539 4.81445 4.19727 4.19727 2.6543 4.53271 2.81055 2.02539 
6.97852 4.38086 4.5332 4.1543 1.98975 4.19727 4.5332 0 ]xsh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/OTQQPZ+Roboto-Light*1 uf
/OTQQPZ+Roboto-Light uf
/Roboto-Light uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 13.0.0
%%For: (Ted) ()
%%Title: (NZ-EPS-01-1002.eps)
%%CreationDate: 3/4/2014 8:53 PM
%AI9_DataStream
%Gb"-6BmUf>YqZ%1c_LMjSA^6u>N@?kdkeGm(`OJUFJMIu(*?%t84\>$!Xo(_;1AJG]mBqk+\TPkGnZ3LJq]eb?E.eESp0'4/?\1!
%Zha4/iZB97o"=3u^"R$\n+']O]_h+=Ae1f?DNc=&bMZ`5i[=3Q1H$7*cE8guoC[atibZ20%2Th=jm%KTnC;(+qg@rS^7"W-R9j,L
%Id@Lr->,!\HVP@J27.eAGe.!1m[h^q^K@C@5J"S?\sQ4<%r;GU?<f.W'-HkLTJNY5]%9/R4In[HR/SeQ.%^)"q-JMLoJ4)T]hY'i
%X/j52jlG^G.qt@CnkQem5C`7gEcO?r8(.-9n^.("?,FAX:Bg..mHs=I>[4J`bK5(8PR$ViGd_o!;cgd+l>9n3?;,<t!(Ums!dmd=
%Af&p[`U\&TmeJ(3QJB#(<mWj/+T*e[Hh4S%lgs?C=J+h<Facd:KI?E4UZm(6c[^;;.2dU6bobEbrW("`\0cir4fUj9b+(Y+^96E^
%PN>N(pMPKXE;FrO,G$LLhq^Rd0L=Kj8(4LFIfYU^VndEoB5]VT2S$P(F'j:!'ms9Dl1&lN^I$#!m](epF1O-;poh=gJ6mG@r%Bt_
%r.L]#?J0DtS-KQopl'eD<*@OmppuP+nr3ksj>M,nBDD#ho'0\iT$gqcFk/'0VSBMFXB;dYmeW[iRaSWK7=Rqa\ETkTbbdURd/1_&
%E^!dOg@ps"8$d]^)M\B<[$&AFl\k#uMtmeU;FRgEVuQA-q=K7T=)L75R,E"_;aUMN(69idkL2<V[u5$lr==3sVVh@:qXSb!C5P-H
%aQ+fEYGUp3M_D'-GOm$!!S'.\r05g;4AEWEUmVZTp`.m\nKJI]TZG;.5IaT%J7.h!B?t5^&+ZGSnn!?:0!fNXWk8qDrcC.^O$k"G
%?HrMF0cnle^IJ7F875oXlfhY%.kdJ&5ED2;m-+%2fST.rI(6])'uGt&mJoe-%U8()nQ`efJ'`Ciiqhrk45\n@VehCnI_AiZ=+KgM
%g2!]ui(?4-H[/I1O0=n.?=%58Ml2cho_9<*iG?fdo;<!!N]XjVc/A-4kEG)TVb?ghh]JK8Q9[X[/uJY.^7$\+0,E0?ao))3dFi'@
%QleQ-Sm;oqMs7S@nbmG\GFie!!:\D!-$!F@,W4+:poC=E!*p[BkNA&ZMrX%JrE@N"cDS^u"O<p3P9n;%j&P99I.LfnI(i]i!/I!8
%Eo.jd"'g$V,@:&'='*25@&pp"Zg6^n3^7rpIoOHaQ]%3Zq9oZ:J\8"D[JfXKip)fe>b40L?I%]>3SY[5A!m;Lg#QVV=<G;&FnK3)
%5@+tXJfE$s0.1Db/XTR@UuNu`eSs^El?N9f@W`-D2Hq_nf.WH=WVn\7]3\9o0<]qub@?-pT>C@;2W1UAMi.mL>0Q"Id%SY)lKnA!
%H;rMkjkm6h9=P3k^6i.fj(AX:e]XHA\52_sW;?G1I^5DjT&78A^5i@UmZ3EadY6^9h0qJ`RfU\l\UA;gh;_Q1p_!7`2YX;tGl?Xs
%:\6n;F.[B\cSsWTDRe#@\o7=K!_8kg?+`54^Uc\!pd,5X"lK5HEq:)jf/NWhitmV":s0OUgDib$FZeUf:NS^_jR*==H=BDl1`_eE
%nX3.mP]*0Lp1_/W:eg>k)7Q&SX',"LRC/I"FNjQ3$Z<]*4tVp:(=L.h4.lI*6NBp%2;``):V(H:kM#?L`F#f_10uF)eiSr5bUi^*
%:EH])5^^rU'+g>J$t;'Rq:PiBKb&K*;K]"7>CCkRqY%GLP_I!7^YC$7^rmF)n+#spqY8Uk<&cd!n-SaF!DNBZG1*"cke$]5K8XO?
%o$c^[qWcr8g#CRE[n3.T4d`<XJ=[$O@s+[s0`JE![fH&Bp4EF--F9a72kYQjlLO3!@^`j)KIOi'++ieJ'$(FbHN37(dkf?9D@7S9
%H?;;S:Cfba!9M:BIXfWf?='gAoH#Y$(Y2/l+CEg[5reI!s#(Cm`nMO7?iKpH+&5'lP0uQVgP14$p\(7#pE&m-cln_(Ll)+ahp:fd
%5m2U*X1#.NmB>jgRs4dW49l\ffk_.eCQCAKSGC.c'j@6C7kZ2j#f`/X8]sKt&(Uh"5RD9=F?Be<E,h-oJ3cGroY-bFY7B8i(R+Z*
%fqU2/2fY]"'B"$SDFLdceg&pC3TJr-qfuf;%H_@4[6m1Bh>UkIT3P.;HdBqnKkG4SU2Jd+S<K97&La+HZ@T'2/&5/M*\KrtFA_1>
%AS"o4'P"XB`NU2peM!Ac/co9Xi<r_O78`,7<b2"t%[&1]jhlJ-p[\SgqN+dhcQ+,XniY7(PAHbKZ=,Z4qH9$4=dAg,i?N6Ro.fq$
%j=UDE(</(7,J=#prS_&kiG.SV[6HSH<Le?)GFJ2qo:F2(&8%Ns5/?N;!=146BbgCmkpkc:2_OpRrq)\/^H^omqkO/#Iko(L3KQcl
%E!&>'#%:==RR)EW(^pYE_0Bo#O3`U#YT16J+'-95XG>&>0H:Qm_t!5,P`<JM)AT#fj@4StNP_V825C.a0H,s@U[dPYS;hS4`H(=b
%IU%lM\/mThrcg+<C4BX8HMPidFfs*%lA_i1;\B%J=2/ec3nI1]ld*#*_q$\[?/t!,8M=B]TE&;e]QLW3b2dSj;1Dj>h'[h$dh.&h
%JVnCgf0E8_g=o!Ijg`o<J-^,g(W6V"EJ990"EFk1(k'8gdsllYFu7Xu#cR*C#UP7DQ*^l5c#"]c`Y"e=rsS*ZV9da2)tnh0C7pOn
%BZ'qR'Q@873!&jn!?DW"Snaq"$7O+!V%k\X=oSW'DZj$!!,?=dmc-o_f=FT_?!7gY1/,7dl0>Y-/R?bGX_%ICo+*noYJ+6D]7tFH
%:HY\jF2rB^BU8<Pi<q?2,hk0T'Zm8)eth*,7pKgFBTCGkL+Af^h?3OuEt>WBD>QEqN03ts-_7s@em/jeC4AaG!TU\2D:p`$^QV=b
%O8TML,N$#>rKN(D[+FM#do&1Y:LNGq=$#e"(L6A(DW$7e"ACD"kq?GN3FDU?CZ"o<+*q=LIdBj<3Jsi<HrX0hePuK^:lQrd\CF0l
%@)6f/]&5pjlHk2M(ktmIWO'0d"Y4@i=*:I2\mGt`@&rr,OC&#-ff)nE)Z8hY_e.DW)k\KZZjcr!IFn5ld"e*@cRY>($^X@)cWhN:
%]Q/;MVoIh\cQeb]=s?]P#`RLG^P<3m]lJM^q$lkAk5*<rQ1Hg#pUB!&$%Od]V#\\i!?rT6:#dr8F4qV<n8OY33OiH@i<jPSE1qC@
%irtS`3_qMt1]Yo-`c!Kq;_F5P5&\*;+fX<GrlZ;V6o]-O]GET3([d3o(YBd&mYGR+TdM3%`Dk@f>nL)aTTufF:mMp_l4\:`I>pN-
%!9sVhb([\6cko[6TGk\QSA8*r&</^Fa#)?P.dP"3NfD=(d$Y+g_k2B@5WZOMN_ip,32!YZe5c[J+g$_i%65R]6TS^,lOsdNiIV&p
%Psf3)l&iuIb(+kW]n;aV/6#Bm!='0d[SW#%!6O0i+]Xf;Bn2WRcr(>&1h'W48jX-QJW>h8RPF#,6ok$"/p@?>KN!V)dL_Drj-V0B
%ilYnPq<-W@j/.PZ(LW2OD(sht<RSX,\^om810lbD<U0uN>]ocBN#OI5bjDIGo,=thdY-hnfFK7!Q'I<gccE8_>m%Y6Fu=HnHi^A#
%7(7PDG'U]i?):h\?)b%R"TgBP;K7k)Z#f0Ud&oZToolH8$Zu/uG$VaIE`L6C>F0,2A\?)6BO>WL.r/M0PKl&R>el\\UQ''DcX>qd
%DdT<NdVmNCpM$kV%NRIT@Y#JQIKf;o!IlZsYb."a!\*'g%Y5Yo6"\`e;*FF"P'CdQL></taU"^?!#[7Wr#.P8"ah2uF$\MF#/Un\
%p8rN?$KhG0ni?p3l4rf3jR<>PJ/RnU&P.EqaFQNG"-a)mUk>j9aFL'75[L)qIfb9.$[CtX@)iA2.t,cLC61.b8K3HI"%XM5/i-n;
%8=Uod9e^gR;:'TM<e9<I1^,=/P0&mIjp)cJ66qM#0I4c<*Xh[C<9178oN7WFa'qFLQ+[r]P-hHG`-6dh$VqfP7iGPseo[MIN)A%t
%om5/8eL%BJd]f"oB><e?s3\:JLQt@:-r;E-$K1TlM#s%KPQE$<!%gVhkg2RK)IP$[)V@af?DrB3#G_I!KOKWG!mq$I6:$it[4#HS
%PgCdMW/2-:0UIk:+uK?`TF*'r0^MV'gOH'ld%UeJq=-);TM+OD1:hG!`>:uaM7&G;W+EJIh<gPQm;#XDDR?qTA%CXRr77Yn@!"K5
%Y)M2$Z[DSWkD1g0^Z-ZO]N$kJFPcq5Rsa(5R06Pd)JX8j=>lo(T`n79_326.P2=6bH7X*)AMMBb5Va*c.`b8IU7'*E&]qpSah'eN
%%4)h5Vi9]^Lh''2VnlWSGQMQcIF<$Y8'"Pa0PS>8J0b6fJ.plB\GpjK(H?*^q690nJ+Kh`*Ue[Ej'LnsN]S8*3ULe?hn6FNltkJ-
%bh6tp"%Lqb\=;MRem5@==Ee[0qj-q,moWePRV'3c=WYKYp1[hrD!5-rNZlUlcD-.T`#0Q4m.G)T]Zf&2GUUfPbaa<&N4a4">dFWp
%l!RGBoh':Y>`r_*\RS*VEBmd6-@T(J3H7@GJ8!1-bn12&_Y]Sd1"TpGa"f;,WJ>l(-@6*_L,iL.<Ys!h0S[;4\6<D_o/-B3'0dEB
%7q6F;Mfc!n\j]pPHjkJ159Bjt`Hl(00`-UX2d_H'3:Y<&YKCN=\m!M<CNT.O(_:;fEUEQ&N,SQ6d_5_AakOK?j%8rC067V>\jiHI
%TPpu9FUOGr(dN-+ZU97J!?!s$JF&ddR+N91:j51aB(G(tlAM\L*DPT'+D6loB)jVbE]KgT?n<q.,&oXIE]`s5nMDSZ5R*1F+Qnq9
%pJXcr.!,ok'5B)DJXd]W,rl7X)-)kV$9=h?UrXF-FNtAqb$7g_HEc<00SCVV5f=4e\u.@nOh.JR"X>L=;b<'^hqT;1q_\%.q[Kf\
%mBcg2o5Ct-3rOqHrXW36?3==2npo*pgj7"A+C0V.CCTjc)?a8s1]V&0+C`X_+H1jo%0c-&Kci[TAj`EKV6'#]@iVI0?"ZK*!U?[S
%]2Yd#7Wg42Bl-:V]6e'e$/D6j[Tk59i.s\1I(Q^s#KED&jOo.T[5$HmnW:$E^%SMQ`dr^@$MWZ\TC2]e4-k*hOGqWTmX3[O5eab[
%$Sm0re)EQP%ThHI/og+HmadrRq\jZ:mqO]3a0qmk8#oR<5e@p-1N?>@c;o,Rdgf.H0CE0%^T_puZlG1FF\FDhhRP*0m-md(Z0@j^
%,`Kq7I:riImuX%g@rfP3?2P\n<@<9'K"L1/QOn(1Y,[YT=R,0QQWJ%lrr.YqJ#!_7jD1>Hs"+3NMPulBZ7FS(@0+(<aYda;k$J1K
%_^'?N\]bN,Tt:sFeS.RWUbI3G_73+SV)8FGdG5AO?6$\:g&^[s1/q+K2+FY&+E#[FR!-/s&c*]`6uq6NTNS(%7nP8[F-C8J"-[(_
%f1aXceH;XaU$dNM<?S9RaKW[9<[.nu0U6-5+cu;h+Tl;3<"@*5PI&,gU5i40OOSlm"p2k:C9c>d;,@:C#36ac!TIL8_$QqC$==7`
%SDjNL6(s!q647HrTL5U&!=#:hN8-=f"W3WHdD:T&88t!DFt'*h7h/78G/@a,]d&P8r8D=P;KY9)>tOko?;/JBAZO8%e>lR7':Omp
%>K86kl4ZLE=*;=?[pR6hnRa?pG*Uf8^t=>UYArZn(LZ#"[Hk5cnt0_F]X]K_)MZ^,k18jcGf0J,Ts?D1-`@:2;#eS-X:Em3l4n^f
%^USR/`@Dl*U7aW3?h=oUB^-Tkbr`)"d=HU5aY0=$dB87p]``s.hU/cuS@t["nu/3GA^`l4HHOorYg#NR^#eB"-0Ccp8C^Aehscfs
%oohiu.0u<DVmJ0SC"J-Sbu\YO;Y?ql`l?TR)5AmpK>r?QPmr:!DMc)LkcC7Be;D%X:`</t`aGMO?>1ueBPh:e(*bQi=NkA6VAkTL
%7W7RODi!7..1YPbn]2*gF_Hf11XR]pWD;\qOO>.G(fOb"e0NoHXgGQ/I4b<-oo9`'.1J`rN-*/?HDX',7&@lPF"\461g;8j)6%[5
%&+3Y`R7CD7`JRdQeJ,P)p`Y0*dngWY_k2t[XJn"2+'bCm$;:AU,;d,]@.59sXS7&3<fdbkfW,&f,;5m37lfdA=bYt%'nYC3V?N8G
%f2WSLTCnZDVuY7<](77N\0!_-T(dg[K@V=Y.d6*%#)7XCEj45FeM)`X3%BL!P((%M(@FZs'\_K8'md?rV2=;Z"H7I-qi<qj7>\F*
%ATNOCf.5ZS?05jnhA/TFhbRI$<uq*!Y@-=MWo/anVkbq3koC26`o6!c&ietoDIm)B9nE(TWmRXRZlCdLE!.D?#mtsAG3pkh_g\<?
%f/._HANr/f]l`!Bg]:.b].q:\r!rsVGrRbu,a?fF<6LEVADO'35,B^:r3BjUh;k!kGQp6d5jY1A?]o`@.dNGpCe0DTSF3@7A$d/J
%QQT&P^@nD<,>Eiu?@-.;eE\\X8U8KHUBrs74)b/3"TGEs\,*:"P$6nYl9D_)g%l^nWbS-Z/Y)JtUaTM9n[XOY%>i;#>]+403K(tH
%VU3a[_#uhN)OKZ^8_3poU5#p3Xo<EgeF$7*It>>@p#NOke*`e!YLStZ'#feab[A-T@Vr)mPaOCl7Pak(m8dHZOLI=qc4/2qTWr)+
%:l`kVe83[c'>%#8i3k:-WYqj+%YEIfX3`^hX92uGEKMK/9$#Ot:Zi#qMRK%'6UYk8IEJ\)Vo7S`OE-qAUj_8UOhV%jn_fG@.Io9l
%^gENCg5S7k8YE2A:FkFtd0B0lTSc8hT<=G[Cl14@lkZ3ePPg>u0t$gh9\7;3'pK-/UYEaRGK71IgI=dbBh\r7pg)Q?AL"-!Kg=,^
%"u68Q`8rla-_j5QORQ1*A#KAPQ7d:2.JepI']!bN@RV7iJe>6-NK\O&jo3RQO!^HG@:@<m[kmMZ`nkl;O-B>3ZLJm_lo(@?\)-A:
%GiD?ZN8S)u^NC743+)k0G/%aumMs@"YtulM9tnn&FcG#ZU0rdDTeECAgIAHon:kq58;grX.os84dN(o'<G3p;K!"0Z2\OalET=o&
%.k@u?:+S=D,t0[hqNeL'QR-Y[.?@,#-/)@3<--&:#09.E^I>aeD0r<Ym986+V!&:iXE2XV*(nL%kE<(<LV5m?6\:U^kDb!\/U<Gq
%=LUlqZ/8GB365t-P$F65A69U=4_P49iWn1@P=S\q[FJT'I21?\g8lRV.eONip.NeZCAZ+e"_qg0<,KRL&o5/@WQE$VUr#Q[FsVj#
%>.-t:kDmDJ*U8sRln=L^B5Mo45Dp/Wdn!Y?-u%!ioQam.kZVPcnB>EjmF'4<f_tfA1nkq!n_I0]?oD4VRT87@\QTeZ[OKEaE`1O*
%7%U=1f%=fMh"6cc"d.3@;ct.d^hM@i\L$F6Q18je9[E*MbTbF0C!VoWPt(7*<Q)QhYp0(`dtUGFB!`q\7>]d9V&Bn]T9.]j4DSfW
%ZKTr,4DXo(7Mk4t[Q*S>/ZnHK[%)!\s"^iYP;sf2YHm6;p3a)E3hhd0d`muMeXU6G[.6a>'s=AI=N_S-5#a2b,!jhK%Ak@&ko,Il
%BLT<_,@"4&OHYoOgelfQ:2@`>d_PG#nlc82T%;]J3f3^P%+gZlJF++]Wmmtqkf(7gV/E*"o1Fl@Y^tM-KC'HAIaqgN.iqgC(56U@
%4oVT%fpn7nnJbYQiZo:RZ]_843\-!1MlD+Y,6LmC\hg*rm"Vp_3B+)<i%<?]"(u-\Q0b<1cAY.ea5M(P4UGWgILJ;qA61'PPl!%p
%S;gZ;l[:R$\06%lVTeRE#@:2q:^3DV\\VHo8HUJP];0#'ZuW:4'%3)6=q*LRSnQekTZiQ_AWC/Lkt,>k*87^NdVcC&W\8/(]/R^0
%,T3SmDbKsbbrA^k8hD9S[daoiY!1+VElm8R>n%bAiO&TMIdLA4]J7AqF_FA6iM7ODUcYPBQ<'^R%[6eVY#_!Re.[$_nm2)O7>sLj
%oEDh`b<1<^`t1Ri@06'f@C1P[^pFUlJq4FbA0,5"Fm(^YOUl$_c['@T2-SEBGRW_3VG/jl!6$k74dLI,moY$<qRl1*k/`g1.iRr$
%&5#WQUJ9-KQTFSMN$%g32o#q\'BHeVbG3k/]h)o%c&m"Lao^;ToG/2ZP!PuNRKe1Fi6VkD'Z6'N(esAI><kZklF9_BGD$;0;2*ol
%E4&_b8.F*H*XIp?KmsKKT_Plu)Bm7FPnXk_$'u3BUP$%QB;K:)*ka#&2g#E'mDgf(3c?GV7WhH8flqR7[]h:4IcW\Zh<.dSS-22/
%WgCXi^,1.2Z#mc`95In!q15&00U-65kHUR'$1Tadd$oo2B>reKVP<"+MG%P[1n<3?EgAOh;qbYIGm=GoIF0hZfT60+9[7H<,t$##
%d$$4[>06ABP36'6o9Nj$l1:.s;f>7#cT;I*Tq+I+&snAZh6Ue'?6W"RV\3i2M^Y/Sdlgn]Sh@sL2^?SciLCn0cq12`V%oNc?kgJg
%(.oB.':'Xq'$?#0OjZZa4rd9[XiRid<DEXk$*&R9C1!Wj_Pk=S32778(fFDW#cYYgX(*T:(OE<;$D<V\VlV'Yg.9C:qFPB/;+Jeq
%png9tec^s%*1hDcI.L%'D'rA`&$6FikfX94>*[l,=!sT>F2E=Besu?<8hsLA1>t6`JZGmfd^\.I^^eR'16>KWTeU=uSBDhkSR3\Z
%%R$eECYV\+7ctIq/Wtqo8j`neSVY`_f=%J+-!]>2WXqHjL"2H0EK[^]W@m"*/l\9[Ch69>B7h]6[kZ`E^`cITUl)\IK^K%Iqi%cs
%H6d^"kk9e0cgLd(NeB+@onG7U>3B15:V(51DZL^JCl@p2MtGd33MXI:Ukn2.:c/KSU'L9,JDG!@`?gB*gam%1+K1',5Ul+>J-f37
%&HbW@Lp9bb#@fSe`o.aD/kL;%bF'(/R08rhR:3':A\4!aV\6paaRhk%4-(MlfabY)>&h^+kcFI&P>)NjA&+J'@<1Q=a&>J([_f>a
%Yca7onXfF('oqT!6YmL.dH.=*VkETO=^fLQDMR!#RFR!kRqk8g:E?\TVR"%DQ!M)6_JXFKP?dZGY@?[[.*(<\aQ!;H#G#b]?2nHs
%.Cdf4olO8R?gYASm?OPkQBPddm,ZGA\(>lZ*gRg?V3Y[29^Sp"^CqT1HhK+p0!+BQF(Lf"F(Jm!2n^MD1N].UND=>"1Y\GRmS<..
%VceWkWBY;+T6MP2J^Ni(`-J$E/uch4Q'B:_(J:o_1&WNn6bFkJ2`<t2-U\%2oh<^O:!Sd0#qG<XF7U_gZ^,C-Th1!XW+/^F?tesd
%1T<4*D,baP@ulA`TOVa!Chdi)RX?A*)\se?`b*aV2FZlc1cJY3nmZKg$+d6J]BYiT;R<KJo<)(PY>s>P!tE_3N7$,XD&nF:-\ijf
%:!a=OeBH7DQ@uL<Bh*'TVYOpQabK=WH#d3^e!U6Z'[pt<TW(SYm?I+'A]@K%Q3h;<8o@YC/id7CDUh19W;+Dlcs,tk@@k2CMC+'k
%l_K5Zc9eW*(MC]+RB,08:(tOPFeEc$5cdjZ-&9EVR&+DZ%P;!Ze3GBe%##I'_^M?lO0'`Xcqe,8!X7f17o#1eM%-A8Xa)?qgl@Dd
%$;"PIYP;4#4JrqGp#af-CpiY$9j@#?<niJcTe`M[YI1Gk7A1ot.&k_?b??:+ikItLc]%CU'*ltGZr2OA&$FW(ZF5bDQtIn:Z:4Li
%Cs&P5d'UL6PjOnuPekg+EGdO@pR4$k0f<n[2IL`u2g!^<+U1[u@5B]Yg'4W,^gPkc'5*XEX9\'.R'A5#=H"4RD*,f(F\53bnVV&N
%BKTNsb=8Iamm)O"0H+Ud1A2ZrLTGijXug3Fb0%JZ=hE/<!A:q%XR30;fOEL1"e;];Vl\NFe$csX]8YLHjd`R/gJ+?LJ\,d\bKZ;:
%cj[Y9m-U7S/c+.rO$2X.;*p`^;YS1H)8!LT?!-L>T&6jEgX^e2_hqM9<kH!$X,b$N/J]FEm.Jl!EIqgtlnNgq40?pGDlrc2EEm3,
%SMS_p5NG`1G>pIC<mZ)5n3oeg38D*a3.<sahTRt!Z;^L@N+56J`l<#)h)K<G'FVp$6(]D8l<2I\e2tBXQc*Y8P_H2Nd"rXdKrDKF
%q<rseTe3Nk`0*hR8dMh[c3bK=!Z15=p<-[&@)$!odOE;k/B9dCW&%"jh4^.sXaa3AC+E:fGZ`Ve1-*(Jbh?WbALeKR4mL3<s3a\b
%kZ>7K0J,8C-&:65r*nJS/3U@d$.7)+@Nnj%CbPF='b_MkK5MAHrq(f`fUnd<&@oK;k((mu\s$g\9sNK>GhR73'AEhI1!MK)f*k>f
%eL%=f9"hWa7Eod#OE$DD;)g+=m3!KnBc^'0<JfhgK#KZ9oVVPib-pk*!5jUuQiCX&(VAeWBj#I=`[WR29,$]Jp4ekYdGEY>Omf"A
%+"'KuV=C'*1"s&1D_*mMRg1Ncq&GmiI+4n%nd9Ha<+Mr6WSSFY*D\7/M^qSoGqk>\n%iZ_7pmHcn^nh.R2fbVLLK1N<hM"#M_A15
%8Rq0,Fnfs:abWXp3SZT\I$9.eJ:*K?&ekp2=(PHpM[srHjSsWgpRPTEn`nT62g1<-9><Q/A_Yot=h>gT,`sb*N7h7r-a.nq3a[\9
%-V]U;=d,-X,SEUY:>`>_L/p:%-P!_fFj0)Hb!=!]`Xq5CG]Vnc`_`;QX&!#BH73-r!)I30UjsUc^p(6G"hbcWO"u?1_?\HQf=(O(
%3S:E/8g<TOaQN?*\]m"0Tu^sNgMX-:,:ad9=]`)G^>n:Kp\i$g@^5QPb<Z,*/k;>0,ri:H;.teNQ^5#$K$jFVG>YV\;>ER.8\q"R
%M"-;5`j1s'm9h/^$;+G)?1\W'6<o.LGXs-@_&uLh[UW-=_EqC1=Nn<*j:7JbPaJ]gK\e[I8Y*adiB.4B:8845E>4K0X;dkPX;,3c
%j]id<H#6=%bOK[p:*k0=Pu)?0lIEPVRN.B5g(*_\`j4Ru,bBQl0gDfoNp37-fV=e)*@2M0Pi)L`+PuVZ)TRj>`pH:5mQ+?ts''9e
%pX8DT#>P'ORGl09GpS=f4uq>s>^"Z@Y(A[hWqmLq3V^]&(RqG..%D7!YH"/\.Za:k?/pqqTG@4Xl3N2cn)t&@])L1c,VFYd.52qV
%jZqUORa7]<!d+mU9+VeGM2pc]*'CJgQ][dp2bZ2QhtT.&4;YqY=@jhJn0R&mcK'JSZ-jm)f6SUW`c7("oYNt*q=eZn'fuk_[V91G
%&\H@G8PP.WA8IQeMl@l?EQ2!24(kp[[lJUjgj@/S_E+OZg*CRM\>!PVp;ope/Y?Tf.k%Gg:>ZW7buQBu<*UAKM35:OLN9O?CBT(5
%%Io+f>+A)Kc@4gFht1r4Q-!$JXs@`i)!1M4gJ-P7qJlJG7l>DGJ<B2HHui9Q[$\B#e,>n<^9suRL.Op$."a;.iYsX2h1@SrK/Xde
%Yier_E9%BYc6.#A/oNEnZ7IE#-)N#dVj(+6>qrfrl=0U)E=JVK6?rfD'WOfNLsfY1_i7i)-+sNM$`I!Q[nFQ9XWA2$#m>r.&>[A1
%nj0j7m!E?"krLk%2pcO.fQTA?RXN4(Ee&7,.o=Z?GU@L',V(pRj56+Kjm@Rnh?u<=BBF5*289Z`O6^rZ(;RX(cs'>_HD"1/0tm1^
%ORi96`UHusIR<N"/#g)fCV-CJ9ATqW8dV%&g1cUO-S4c_$L-d^W#;>D(uI<L-PQ.>,Qt%6gjncKg,Q<'$KG;9FH)U)-&9j:,KLA!
%cpK>gEaQR]iE2QRZ0_u`aV"5NN^I_,h7cVTajL8s3rEe%2`"3pEj:jU7:)6f[_9=dl9nrk2j+h,q,CA>cf_VeomBb'nZoGAm0or4
%pQX@CW<UKAaaA-CL;&qS:Z_K@\$b99<7!h&_W\c`45H$g4*E%@@GST9gFotg]%;to+!k&N>qVeR)740i!S3rafVi`-P>_5$7!TDM
%NCV;K%lNTe18cX::sS.orZ>)Y#:*M'O=:@SOtk(?)A_5HDU(dF1dGH/hY]1H2a>bW(+$X5B`S(I_p`(3DF'MIPi'h/)3aaX@IIX6
%3P=e$?5uN764#0`#<?bZ$%&toDSg6X<CWR-"[cZ@kSLJmlq[F#*aTHMfDG.4Aj1$'4_9Tmms\^]/gnc/(LE_6mJcXZH',oL(gZmA
%=.ckW5.gRaWm4g]\%ZBB.^`H`3RMKI1bHrkDP,,-c5tPE>PkOFG#g6k?BQumEeKo%_.@nFI!gu634<4]0HVSG^X[$;.s7]Hd:okb
%do5Nof0YW^f2kJYj].bsqN`gUs6TBi7Sge*UI;5KR#VTo6K=RW91O/'[;H)*XB0a2iA<.dI=!raNto:9P>Z!#8g[t=3VTn>$,;_f
%)j,;QT5P8)%ISCi4SdH8ra7aUY@mIiGOMDHq"1%[n,2F-^8q(A_=DpFik]0=ShB2_5<c:>grarY8$D/AUckTkY@$6qT>@Go!VU$L
%ofhhmqd%c7LZVr.]_0QUZoF(4R5[:llhUmQV!_M44Ht(K@["Z)]C5fQcO5K*G]pnJT"4Lb4tWX0CSbV,R[>,f'O<a!2]f43+)jN[
%So!Xi<@;8V7B,ME$/r[C"HLoWlduaZ^n:-uq,%@jn5iW="FUEg1MB>KOM`FH(AchEH]5OM?uug/+Un%#%Q$7m,-[WjP@-NYOUqXc
%>luGt?k"p=gY/p=UsF;qe&Gb2GHoKX,8PNi<J&7k6'.iT;h,qb"TrPmRR>$oCg0A-Kr0sO^sKK9+N\q6q_6Of3M;<ta%fFC1cS#:
%L"Ct_J5rP]!b&kG[.T$b&,#q%Z.UdX,u*EQ#"@3j^3.\e^dBUq=s+uZ3Io#B"2ck70$E>a@'P[(5*CU#Ic*NUB\SF,a<Pp!d]egG
%$68jJ_ZR\MFY%+a91;`ta/^Ernm7ng<^[qQ!?j?&"OUB<C]N6N)+k,0W&F?1^9!/.RSqOF^spXH6O@S@eA`Zp5*SRQTt+\(2bbGS
%b%tGkc[s#"&_=sq%,.Ua&VA#q:FQnZ,X-Kc]Pj`'b]fpGU%*`.J6m$7X9h0IjER]3_F)S-!LVEkKe2s*P`Z#N=6M8Z^dg090Qk;1
%"kEco@i4@E+L$IbgaJHMPqE-T1Yitrd6\b<Fet':Kt0=0h$j2#.fot%!1q7Ob6RG::ha(!\dL%EE#!%k9)YoM>Lk`eDL,A5o;H_;
%-nqh56_iGAb&#PEr)U5rWiD^D#XE((,P(sfJ\6ph+XJ"\a94X=K5`nWj'7\Ug)H3T/<YQ<&5R*VbSUU-.L(t>3^5smL__g/I2inQ
%@W8pEnKgSCL-`223l;[sc2j3o[(Dc0;<a-(SprEBSf9?WYdBg-7`@Y/fpH4p==]c'b%X5t.f^*>:4j'P.A@,Kh-'ORRl]UBWuu(`
%(2BDt^kA.mMhIW^\BQN8XBVNC%s6rUYCLLXNBm^3UV(SAj3StDOn6F..mL0lA$`"O?<?T+]a/NhB`W7:\U9Uf4qNJc7LF=#a[5/8
%,HYaZSA@)&TcNXmas:"RCr@P-A\,&GMSKQF]$iqf75Gma?jlh4Ch'D?4Qp)P6\\&MOQ!-["Kno&6b%!7\h(4jE=<`j")HYlFU%2!
%&A\8O]!q!_77mRRm-Dq,$kB7+]9(W:jTN%-6@mG2';5)ZnOU\_]uIDmj(<nR/q=:6ShP9+$jo&^8!O])o4e!PKVh9Y"0_fX"C#!h
%%'gtpJFKX@$n/s%D[k&C(q\51Ak(,M'5L,Qbdj/hi<$f.6it.4U/9EtcY@9$B<[tfG9O22(><.<RUUo$4O4a0K0<tM??Hah%C/97
%$jLNC^]K?[0mG((%rBg-So>,A_EJN&%NV]dL?g$B2%Og1h-KM%C`ekY%INSp+:V'ekICu!hM+`#"ZEY;IZ9<"/u>ZpO]UQ\7\u8O
%K<,f=%[_RAh$V;3#ju`0'(:G;p`<PF%gfWu0Rsk'q5n@HeA0>7dM*4e*c0Vf*Xm"le.jd<3kj!e0:Q.,TIWIN!N6/=)UkdHUER9n
%3^G'00YnaUg/Q<H@]i(.HCs5K5g*&^3(J!1.Ya[.c7IGW'.kobLph3lL]KYk1=&B0H>G8MRBBH09Sn:R8uDlMDQ),dk)=gm-6pn#
%.Xp^-/)&cH=X^Qe0glKuW]V/97[KdT)pg,u?laO2&8J%uOrn:7BKZFn:g*jW/)CUED2b#@UX9CCPP3Ea;^K%@hBab]*H:LY>4P"O
%k<P'L.Q"l$LO%A[)$iihb]X.02D,I8Aee(rSq4:c/2CfOW+pBRQ0I;j.S;j-\3_8+e*-sjGS!>r+Yk(6`_'BKKk>jPMGU;O?TVj&
%W+^G;P!H/WFJ<a5$Im1@6he!3UF:9:44V.::$oe>HkGqFV-k^rL90)%6!s^58r\?Nb:<TO6'i&QUOqSV29p@A<3Rm!bbEJI,!b;`
%`4'R[OIdEe=egAIC-jA/6`*PFkZiX5G@ejRKHh6MZQ4IASn0r4=-^WtI?Wp?+OB[lJEN>%ek6d">r54W]J^om!MU_^/Sils$(`Y3
%X^"muj2)j=$!X*h\i+*u$3jaN`@P%Ob(S3=0&4T_.p`f2R]KNu*f3Z7a-6Re#55]'GQS/K!*u9(?lS<9.mX,R[<<!lPC\"]X+7oc
%!eRONjBc%/Jg)@-QmQAG-jP`QPE(O9/@!qr0!g1j\Y,0k7#=JV79NBIiA;-l_b)1a@''Wa*mADjSPj)*i9FU)NruAP'ocWE&BFpL
%=sR[i)g8hp2?rF`9hc**iDdJe^b_"dbipBR?6sJ!P:h/dgsnD[N-ZXp+du'AaCMA)7*VRN<%a>M5#liqBBb^I+R3`7dOqb7c#D.r
%2ChZ($YH-d7[\A#(b2Ed=gG/g^utnDTOB5eSTSN8TRm3lRmpmQ26:T%XTSakXiAgqD^UA-=IJ`]N-FGN\Zr2<gh4E.I:Zs0/-pdR
%+ln:@X9:KE7S8N]Y"oa=+#P?tS"HU1/^b:TBN_n\er<3^<E&1Cc\dr+M*If8=a/nW'Pq;;*cre&ZB0!%oP>%RTOPm,k/9SL>?kur
%,f4CO3t_o,$b9"Fi>/*C?CO$Z.2+jK`!Yf+E>u56MQk;EB$Mih-FiG;;@CEFW4W`G\o=LBe!>!E_5N+%@hd.!E>'@uaOMdg^oF\X
%Q!V^EKU^nD4qH@,=/CZ6;1Q&O01oq5O&-a.(MIan%-Tg^&[MiN%&pnjD&#W*e>9]ecjV,7(@'\65F`\d0@ZEc4\u;<0,29=S[/Cm
%Xr;ecWN&P1.U35oH@&WG6E/#fU\Z"X).uSF2J?DcpEf\R^fpCsV-B)DC@=V^BAS<[2NDAq@?A2H$TEFH@`,Riq,VsF^7#BL,tblo
%"*E$-9X9Kko#!6FW_0d7mb)[e+IEEu;(*;aR!t>YB$XP_Db\gCCEaHKHB!N&4;u83!h;<BNDf\.'e2o")"Zr>"$#L7$4l:<!'#7t
%(s[SBJAFuY)nT,m7WL^SqZJRf'B><?L'[G6pI0AL^rH$(*-G&nJ1neI``/<4I=o\=)P"G[^.s>E@20"V.\a?f1Kt>r-`S!9c0V+F
%`"@ShaNVq2M0U$l4bQ=Z]8401J<NJJdU@fub;se.HaKqUk45r-pQ8+@H$<JW+N?;t]\/V`m^Mu>$PcGhTOFeCK7e,]2E7p!D-X(D
%0c0RBO8:Z?9t]`IUpF>Fg]Sp+*!0r`cbLS"9m0I/g5Tj"Lqt@!.I%k#i5!kZ\)(hF\*rt'rbCIL"[^9$o6(uC`pbC-HN<LL0i%Q`
%5uM)c(bpY?JKW-es+=Rlq1;=m%OYYD&UrGbHW2^^Mp`<c/pMt\rmi9hoRIoa'g*<[)p"EPJ8ih"&6c=.!J3W6g`[5O?R3Wl^S,3j
%\j+)**[dZcc&mSP?6'5Na;27.5_p$I(CJt@m2O]p1:a(XPBote$)eI\Y[gMPND!4T!9fLhjP82F*+WS>jW-&1(V)FVSX0@hKu!1+
%-\g`N88U2h6']^u!Ug6n!f<]PP(4iS>6P47#&I1MaOQ.KHg.?@Qqo%CJlWr@Hoah)oL3%Xf>ock+DC],?X2ul@Y!jJdmceF!QjJ8
%?re_2:ff^PC;;S/+)Io>9gqY<,GekJ'aWjL4pWecYV.eLMjh9Yj%N;5RXc[?\I1C_L7p5E/cc'Y#+6MhbV;`8'9@a-JPD75[5EZ9
%M8oTq=ioArHr)L!*66AuMY]+2a[sfDkI^j8QZ!;8`6c0@%]d)>FR6Bm[;VjJ*r38Fe`0<\?t4.NAeKWjG,rE,+:*qM<*s,hL&cpT
%F%--J8tu[Ep`lHLl";.0J&-Z,;T6F(1BKI/,=&PW&K$%_Wur&cCSDXGT%cT))u`gq5*YWVVD':6h.=M[k@i3+S<NPM0T0&n51c32
%(@@DB2nVH(bu\YPfdTP/b3KC[T]_-AEk9/h.Ou_*)Ugm;U%kK#,il[I,c(>>&=0"@Fl+"DU&]'qn5SB-eVTL1^fktm_`V4TkYC.j
%#TI;6lq?TKcYLMXN.f<"a2#j:-$;7^QNP:T"fZP!bc\`LY=9t)8'LLN*JL\=6(DFbOZQeNRL&s051>?Yc7ct:7o<57#$:*<Olf%c
%o)CD&dNAgOq6TXj`n1=/Jc,qgAcd"E@kV[-?mQQ1]1R1_#mS_hjK2B;<s0Wm9e/N6*,qJe;4M[EJ;K$/#E^\GFLhq(1/eU$faCX6
%,DNcdE<P'T)P]G;K$LM"S^S&.j"s<<5`9[`&>iFiN!0F&>cCYc)`[qhkaq<&[5M(Z.@_$%TSG?rriU?$$`J?_TT+ZP!U?5tU4Tol
%!'qj4A9KCBKn*00-r37u`UJ2%RU^W#+C?PI"G9.G*^uBir!V?7-*nVIQABB!@>OucbIU8k,oCA,/B^6!95RqtjoGqDpV,V+\?8U&
%5UMk\,rd,Ul@R&]9-"j(++B[)fJ!lTN50Mc@p:ec<5]PP*[1e\FcgYXr&E'#MS^&K<fJg**L,O4V:#FP/P>C3=R&WmJ5t9j7o'V^
%1?":KTro<i4t$NCEKSp\c`0Ua2H`\a#mLgRl=+9`B;Z*_cm-K?6;q[WY`(u8Z.q#<;f$L/.Yp*g<Ik^P^_`ks7m5")@($BA8&Yce
%J/9YUTTgu1QC.2P*()'_jMVq-T=EbZ:/OPbjN:&(gi>G?X<f'FU=;WO>R\FK%+Uci_[V*qn?Q)l!HcXYSE\WR(0JTZTJKmgI*k@+
%=G@qdiNl,pqb$S_#CQma)HNt\[jWF)1AYJ;&Eoh*1d=u03YTER9K@OBK9;58?*2Qh.RaoF5KKfrZ'H_DP9oe@*-E(Z:)i6(1l<GT
%?nf]%WT/Wi7dh%84&pM=ndne[KE5"'nhQV*#3LWBIH/"U=Qi/oPU"lhiHo!4I=S$WoO)":Wa0lj0i/Jc:SfH^kf^c;)$0l'dZ.16
%U]=-H!I0<l$,OF4*e?adBu_tLKs-baOm[-))Fo,V0oK?H->H\HbcBqj6r&8CK+bE<">tp\RKnA\S<_NiEmD1)V(dqFc9$JU)0Z\h
%*ka*n9p#MZMAUoaWe;#r$.:Q0P):))=[@jA3&;IuNF5T-OZ7lTQ=Xqp^T'(PAG#6p&5?k.Mb,9)KI,,3PT`F'Y#P'f[9$6M]hAn^
%3&**DcKXti#",03[DSj6!RGm"%&+(Qg*Tmo1S('nnk(U_GQ<P[4(dIef)lR<=2bGLL.:tN_H?o=aHnGpK+$,9MEl2119_&SIZ^OQ
%Ij76,JlAILHBp>sO<guj`aV[fXAT0i&J5goE?^fB%uSda0<:K[<]NYgq"AB=<p4sLjS;1ZN0F0fN3d!Q7pr%_>XX$u*Fn6d*W`r.
%M_U%]NkSffKgJB@a:Z(b/&>'%nUgV1k#BSt&7I90M`Og;_X?%+;1_3&0m(.S0re,OH6U#A7gp[ojZ&./<-a,c;E'N[=@K;fm"KO2
%)!GfA7ElR`aFN9i6D3?pb*bf=1kCreUZ>Ca.ZYDb;i."-;?J2?$SX[K;*/+?p1cSKhq/0n2DX(@`i<R(:r4-IMmib=_:aW=Os(f^
%IY&4`AmfS?<&;K)[ij(_@.7o+&Zmj9W%`3jWD]iT$ng0J/:sjB(npH1l(.T^.WgLtHQ^_]5dGMVmkbHGiG'H,l#<K%VdpGB/D#kQ
%ala7%U[fa%%`H.Z.Q].:f`MtfE_8A0F,h(cAQm/C[TpUmA]iRA8<,bD@rWS_?4u]-MCL@m,65SAKmX!594_XVi?AKYL5LONIoWO6
%',MM'n-l+gS1$Z+JHR$*`0E55]^?nG-jD_3%HLB36i\4[S6TkM<2dh!au1a6(Rk3C@.NMjWmH2K1.0'&Wc/fgb*GM:KX+S:/Mf&q
%MS2S,c5RQ3;m(XA$`6j]`>-Ni8:+oU<\'[29rWIcA=UDuFs-iiG02q"357-L2V1*^85b+"2Wf`s@OTUM<mhXc1LMcd3,3>//0GI)
%K(A+c'spu&&a+_a)"g2F=ipnBqN0GA@#kMd`NUo>NEG`W1_JZmO_K6ZZ;KEY[<B'%`[-<Pi@%$dgqGQ"%)]$O\fPT&'Eb1[1/"H[
%;?3$J'>a4)VSOK>.r?*n?9t57[1D9E#ULGE64TiQ(b"X!+,A)#<8ih9WT511@&TVO6k0P8YgK;n1e!0S"=97*KPthBi1eT(eec]t
%UjYdMVgqNke%c?NW?==G1>RceXGhL<@Z(4?Pe)eDkUP5$Cm]p`M'k174clj.5]NY+NtDT8J<lm;Ngcuj%.$HKX3sn4g,JP5&d=_:
%Qhmd^jA;b;5+"$F@b4I!CkK;%5uTdD&k1=[BYp`dY0&L"`CZm5MdZ%iD+e/r]$[EUV),q8Msi[rR"=*>&]%I03&07jfQc51>dZl5
%\o;)A0L9e]Fh2PrD<#aW6rcJplOV->,DJ<r3n0$(C6K*dFf\ClT"+Ya`?eKhPB>*E&mpKR#9"AGWJP2M7g-@/(s]^%TLii1Sar^W
%<Ri9K3cbBI!F(Kh_57hXmtpN^Q)2@u1\8C/Z;UFL;PZI:]%L\s+Obb$>)!G"T-L=aEQA/=Pk#);rrEt-$M\KR!L?G\.A<4<Msr4E
%HIM*9bXIpt-'kMeB$Y^Q220bs<X9si'u34#K"0A;+2V0i#^*/mM,Auk1dTf3'kI]O&^%DM0O`0P;E#sX9a6?hN0L8&!aOEHqQrSa
%I_[G%a.Z'uQV-Qo#k!<8(Rs8NK)nt!M41ZB:p\YO92m6kRi^Ud%gX_.a)`:T!M^Z#iD%.MA%&pCHGb2%8n(\j66fgq]$Tpc[`hDM
%#Ik+4FaRZIWn*.YZ\ZD)D?`g`-?rO&-K8--VP4k!!B(R)X"cnCq\hC4Jhu"5Ug%\a_tnG6`i@]T_/rb/j,6Gr%B>i6eRbJ*-bsD:
%-d!1dJsEo%adSI6KoS.^ncFb:DS3V:pkEW[Qo_K2CWG*UEN:guB[!^pH$AZ.,d=2;.QAR`e-HKNIFKB!E(WB,3hjLo%$WNd>M4Hq
%GcbhJUB7[FN6UK9c4O`5*f2#UJ1a?'!^VJlSL^B"775^0b@K'pnS,m;8+YB4BaWe<WP#KQJP9@[5]B%:54O,uLoWpNYJ^qX^dtHi
%q6);k/#t9M(]n@/o/LhXCCU;P;-V?.ES[E8`dK'K0X.S>9T;\lWc6,X(Kt=_?;#O'0aD,+%G-[sk$VU``)*Ef;2[rFDReIRD@XKZ
%<iSra=.pB?VJ%*R!]M!`+RoS-33,>(J?P,%0F!1h_.J9^aA&PZ#9p.E&0Rs&_Ml_,DDG/:j'2Z4S+.0EaIuj9*^cNp'/UU(`+@XA
%]q8?;4,2tEXeJ,2ABA-f=sFOH>iVU$[`&9:pF-m\TqR>IENpiVJjsnt_f;8Cm>7)3#DL\OArSoE<1D?K2*-U\L>ea$n\>28'/[8&
%7.^_G7r,%jUF6b9Js?reY-C!l63.?qRdRVs9FsUc/,Q?_Ese.*Q1FE9KrLd`oecltG&4<<P&%X*'g79\k$2Y.';8!'#\G3cBY_WU
%3fRl/adU^@g-eqrEh-4ie<s`AU`,l"_Fc*W$L7#j^Ha)7+"#D7VU2O`dVc?#@'CE7k,4'1hOo*lh-1PS)AIk99aWIO+h322M>RfM
%FM=_a&2>I%QmW`L4AFC42B,c'+Z%]D#cNWQ]9(B+C!%&d!!eGo(q7,UL(1jr;&/a8h;SkZgoI_[M2/)[2%G>$e,(Sf-'G4_?WjsJ
%ApGg*<Z/+<!Nfp5"uL(MM=cZ!d>$a>nUnVD$7LYj3>.EAOAfIa=csAII722-kd.>.]8*BaVOH!)g"fE9\2gJ2U^rMMZmKMqH0XH^
%ma$n=hh15+K!Z7'%JEDa\p53n5e(mhfFeo;B?GX?&XN]C7bFNZbp.a(HWh$h6?oX^R>&/o&1F^Nh"[#`*!,'nQE#IH(7>gr:e#^;
%nB*U43fREl(?Rpdlu)tK<QU.]XaS.S.WsJ(.?P2uAO"7HMDXjnrQnH)&@;1XWYcOcYl%k;;j4IrWkfOO%D%_:<Lb$YUGGUKhutJN
%;J`=HUiDtrOlutGY(f%JO!%o:*0:?C_,Z=lU],ah>1la[Ru2!YU0'@u;6//6#QWG`0#)Y[WF75+R^WjdRhgZ&`;SS$nRh/g'4U&6
%Z'lcF1$b_D7Y$m1#8(b#kgLO;nl4JKS0B8'^gP*Urm)o:3k+7i!g%F)7,+i,4s\-tAZ5kCVLG"kN;aEA94B$sSZM'!E_LOaW>PM+
%fjs*@N8b*.MOhc9`RE=ETt#A*-'8gjNTH4t"<YtoWZn,LM2gWPWo7Xh^QHqT>>@I\S"hE8\QZD7MU*Ll@$>j%;W::(o!Lk:)U&Fc
%*e=P]$<dnWiA"/@s'oQ:m$iBoni.,*j*";)Lj=K\?qB'*KYdGM,fThG8n-PE?;bfYZUbKl=fSBVe58LNIE@YcL`LR!`/([0Ci$\9
%H5s//Y*u?$lLA!m6Ej'(Jr@AZc"`O(NTPO3ctU6]Y%6o4C;=Y)e+H=Aiu!!DbWE]XHm9N",2PXSd,]qSEB7ZoJQZ,d/nC3?T^"rS
%O#2in.$9oplI0LG1/;k!#Z`CtYXfr]Q:P$$&V*f6B2tWuX<la,QNU[T1<t1ndHmBTi<[iXT%"A)j!;I.jApjiA1D!*0I*[Y4V`AL
%5t.Vk'.i;\iMri5TVihF9qpXgdqeUfO]s[9b+d6dIt2r&QWhXR$,YD`SYQK=E+<ra#YX@$"nVXg7K<j\K;cF-/;kS.d7klH[KnDl
%2+(qF&CC,Gbah%E0U&h?_T=AJ+A)Y90uB\ACBpIc4HG*94)%A9$m^E2@ATA`<Wu7f,-T`&!4reP2@[:@BXkKFI,3:l&AD"O3bO3\
%!jfn9P;WK%6,kSe9omUOUeuK.1JRgWopfD,Pa?Kr,!k.%95NcR.-am9WO--t+A`3OQbj<O+Gs[Q<$Mf+Z\"a+"E^)8&U>&,C&/ZQ
%B"DfAf2c$8%0E<-7@=ds'U?.TK%ebdQ=cM@jaf\[c*F]m/qc0oneT>T%U$p1c8JC`>e%fUX>U2m,0@rW6D-t="Mr[kN$9_I=:mn/
%L[ll/":Vh4^fknsBtcL41t:,H(c^1Xi>`<%`g0FJ7P=c]Et2cLotad93G7S#*NkkiQ`$OF^Ra#&m"8B+QnDV.c'0a_!p5r49/1)F
%JraB#I43Utnm7=;?jtIUPq6&?iH5'V&7=@,M\_*1:*M6$&<UZN#gd"Y\Zdpr<C0aVekNP*"O\`CJg"#ZLr&U&s%V%n0gh+TL"!D#
%?i,)OZUtgL>nDT[\"m-se<2a#p=$BoKT!91R?5^nj9^YjWm6=[;>mL@<m,*qnl#pSB/V:lBagGPDKRDXh!"ohXa"=gG,=M,X%]:)
%eY7nV@s4tUc7R'ME6hX1UR"Z=m-/<j_r--,/a%Wi!^iXf`KY#]^rDOY.378!BPEfT=9dAjVAs=&%3oRHhi\q:^d`&pPrmrd%E@`,
%J`rklqSPuudS'+$K]f`POgK35QHi))39^d$0^Unb(C:rS^/h5`Q3iB:b%k!R`q^d6,UT2IPn"<5-n@Q&Fb88OF=!t)J`<eiM8BP:
%U>B5#`&8%@_C8Vn2J5(?;J\[jF\:IhP%,><!`,\@ZI*>"V6BK\@37V044e:N)[9"QXi:*'?!uWE;atDK19ep'@FHJ-Ugg4`E/Dqu
%-XSY20t30oOp?NQ6uY)4@MM,Q2nERh>g#"HPG7-<Z^W7%</n^5hg&IDQ#a:`gsFW6>-N/lYi\U=Dj'U@4@76VC9@aQ7O-HJ<E't?
%+/kQm&Kiba\qtI1=s189CTU0%\u!ES#%G\((1<sXR?CC#F)b$;>38Bu>bO18-DAh3[e^1E)5u/e8NS1s33t,u-'kZ2ET&;j;-oXl
%NRB>#c8%(NXh78?S2Or/hJ*N5TOS;N^dKooW16nBP.?$V,17r+SI,H5]S.,JZA"(LapL!S0PF?FR121qPuTHF(q^mu6bocPQ)_/G
%;>[XG0,)P8bcGi?N^tpP4Xa%9)#?QteSA#:<\19>UZ"R0;ToCl_PtukjMk*GWVj4sbiQ>J26b]^aX$ae]`o40C$_9C#]aTh=u`QK
%5kM!oKEqfak6b2-Uh1&h\r:C[1F3l6d@l:_JFIO-E/G&"dt7,raUCIB+_NXs9U`.=f^gq8"hfmuE4Y@NF[8&qlE6+8)<?+o"k@-l
%!+nZ]e^X5)3WcV8Z,I,'F=W7cWK-DNd`V#Tn;EL*j;\[rCN38]6&:+*fLeRT(lQ[@3gCJ]dfR_.WOX`C.<QXg/,'Z8XYh1)Nu;M5
%K#4m$QS[+g#<XlRPg]].]*H,X<#dnKqGcE_b2Q5C6PMo:[4?AH,Zp!1PiR]]HK6com<Lbc:_a$]rTF9u*&Goc`rnRB^nU@^@RXiI
%m#=H,<#Z(%L16T:<QV<gTb,@_-j3j8lu^)aLg7Pga4uWN@,3k_@YA1:$DP>@do1tLpgqg8<Ihkg#Y;$'_CS^9FW0YaA.DH;`?E@=
%\;bM<d2,iR(Qt.XS[03[#c)"2cI>_X6d2^KUqRs>;TIu'*T9r?b$!)^?>!U/dkX@]9;uQ[B-'oZ:R*@5NDTo-[=lsZM+PntT:FKV
%n4Y4D$Bgrma[mK]R56l[mRN[A\cjM?YQo#Jl=*Y_SmVh)YTHgU?rEC"SOb)la&glTp]Q/s#dOu@6t#_)W,rSK*trZYmtY>[]7X,#
%GW@Z\ZG@gIaW8j3ge;#%FIGpt.FsKZ"@LDJ`!gE>L5A&I-`H#*&:s1%L=)`7&!B80`oM@%@kR1i:3m2g?SGg'^s&'59ZDPohWR_6
%,g]TBRZ-I,RU:Rg"Pq&%:<7JAOjGBnTF0s.:<4,b$)H!*3S9j;$,#[KME<RIGb#%u9d;>?#L?kn*b+iC@hlP=Vc6j+Kmh<_QjT42
%l3&gtUT4)(%K_s-K8M[@OL0-rbAOS0^fV0i%38FE><u$+[2_;AOoU0s6a9uqOAQQ`q*8FI6!B_:kHQmJE$_bR0.6]8!^/%6O'lG5
%9>UHk#9i3:Z0$u*I[+<^flKf=PJVsrl6GCQ-O.SU8?.'Z03TgZdo*9k%V)GI>uJZi8.(+]5%9T^1gb$GPqqp[]$Ted2"*2"9(FI2
%I.L+8bqcc>1N*:$P4G,sO0`Su;k@39U6GnifDq5<#2Lbn>(;l3TGo1U;Y0<SFgsg]I7R#WYU#ja^(;n_#<[lp1EZ._.g[9.4J=O1
%@M'%4nkoL_<Mb_5J95E>:(NB3;WeT%Td+g'N:.L-e4#0-l0RboOQdm^W_J:"V%H:b^dBgp,r.&@5bJfPLU=2e&,cd6%VU*S&&hNq
%0;Sqr;KO?t8.shM7-I=TMq1WG:jgD_f0TnRES)\kn5tsKC.`3K%)H3rCJ<+kK83.P_bN)Z^id$1KqrLM?GdJ']TYI_i06?S=/P?B
%.G]\V_(@\0KcD\jc\c9Z7F6"D(L%],Q2/"C3dU>;,)VK)%%FmY9(OkB9.;<1<7chD'p:Z,3kU?[#%PH$;bbp\1OmU,9jc&R:?]q/
%M&-6Uo2=PCdF?8U7H?\m$=l1iLlM?q9-!mbPDA'rY3pm6Nh+&.OD8jBa1(\LW85WN9?$J7$[JKX_n?f)e=#%0V:E+;koKmXj5!q8
%QS?A%Ecli#Mn$'o1BLUG"R.L^KJ:mo=u5=WjiV6`I%qb\c62-AMBj;$UIfTBn=UpIlUY`()\QPBTEDe_a>I=m^LmZ?WBE)I.EU9;
%H)^;-ctnc[CLj;M.8Q?jNCIMb=]>b#8X)p`5t]1s[B\:1jI2UJV$k2:G@K0<if*O_(17:287oESFf<ikcrc`FX@AGIQprtjOIGJa
%3L%X[TrUp!Zu_K0:cCF%>`;=.kIK`AAXYao>]*[p6%P2QaamYPs#$C:A;o#Ce\Z=cdV6]lVZX2B0r7@#^-b^/1a8KYs+!l>QEX/]
%))<p%Qm`s<Cp8#M9[6,$`g5YX%YT'F!bQMmA;%<o8qUA7WUU__J=!8iB9pV4TggPubUboF4:\8NnCStINI/o^,e`MAiA"*0Ffk:^
%4c?2j)&)!MX]kD6Lq$=c??B&:(@k'kED%*a[="k5KbQ]V8kE?(nJSLmPqp#'P<\9[kmfhRH:$X2T>Xk2oTL-B]l,IH2<eg@b)feG
%$GU7'O!<6a9JG[7l5m[]CD"=9609kuZM3C]]9;AJ4;Ds&g:<R8$PU%:,+ArtTr!j@oSg*.J3,c!*T3"J;>i",2_rPq9Ga@-a"K2a
%Uj)TrNf:mt_mhJe3Zf]*7n1?FggUR47JCn]Ipk)f_LnF1LU'HG-?GRj1Jt7%P>\6m1CK@cj\sSece963DgCoALjf==F\L=>4J;I?
%EanT9"eM\qPocf^D(I-iNI_1dVa:nN_jH=8"G&6%`16LNYn\17:kuc*;\%m,=j;d-.,T[+a8*CO\^%5,DO5J;AIN9F5pV%:hA5'T
%+bajsdZ-9a\!14QhoQR%O@Impn%*q*jfkXG.k+9h<##Eoe?a7%$#Sg*c=R+h\\6NIL#]3QS@jbkgOq8UGnUNs[%@4;7DnA8h0CWA
%,_),sXrL=j\b[S'CS$ba:W0'NkGgIgS"cc/D627,oX,HXgTYlt;Zb8kaF:^1S2u'%^RUO&1rhsoO\JimabYGo2`T'-12WR^h&t#Z
%&Z"J#.?h*LEAKNl$?L%KVVK#Vi!s.4Z\L2Nm'p_pJ5UM^Bd-f0lS:ZdH.\N84Sf@Qm9\5r:<H7^b2$j07?9mgSk2b>h5.TkQgr&!
%3gWU"PjggTG.&u,"$no2e#Xf3F^Be4Hh'7CR8qV2N?o\I^qd7))d.BAZEjqI;:BFJ9Apa1"F.LfkbfB_4,^IldfYWfJqt34]K$g+
%Sa>8mKsRg-kK9A?*p+)d/ZtSYn^pAm+!<QS:8i7bl(4l@;=\.Z`g*&Vfg6X/m63p_dc$!?);=48!/<d4rmCV\"7:]'?U0ThSsC)s
%nk/1tb>oq+cSa_S#L"LG_9i[<fQLC`G"PW;HQThMJa8h"&km#<j;c>Eh\b;i8?ljuO5Wr[6.X,IBq>iu,G:W.j5flj"SBLAD2G&f
%,1#=m0r+r1K-S]!9^2upK&i;2Wse!ZSoKnQGp;TcoUNc!0F8l,P>Ms%F"E6$;%%tZ%h$Je42%&F"DH1j_X&sD3UW)]jFTNn#HDED
%2Sc@i`WNAWVro\(:kZi:-,;>ci;)I<QnVpG^/[Hp+tfBcO@:;+WY9fTB,VHq\BEn]8R@G^Fr3j7O<aB`o6p2:erl%"j$6[`eSXC>
%?sdVc-`P%0^`tS]nRjXLoo0)UlP-7`c`"aV17PAO(1(ahcICl)$g0<k4[clupej`W72n+Wn$e,6@$K\d.s[%0L@;pB+DIWA4Nb$G
%N+X!t]%SWP,+1N=q-/2=huTgBeNLkLK86i)@O=02d`.J6M<eQ'LL@Ki[h`<Ob/<nn&D6l@`rL2WQd9Hd5VKq%8@-?Hh_T:l'oaQ"
%HM!]36<+_G]#GN"0`9U2#N4L`#c6cq$a^CE:kc^6%PY)MXF%L))bb0f]c[2#Mm^\#cI--BNL!\GE`nfXU?if!kASilLSr^lBq<&_
%1-Mm!JW!I128D+(P?bUM'!+'6Pi%)5&E?VYem;9UP!4%:O0l?Q<8S`s:ZCGtFE4*]'WUq#/"S3X3uNIP2O>G'+Z\tg*Or.0A$68Y
%9pnLc-)hG;i%7%t]_1%_Ss%H4mr^,:N.*mV_NML/M]kh3oHmSP]6FY4[h_'ip.fjiBBOB%f[HopW#f<'-q=;UgOTYBX5FB1AW$gP
%`u.$tm1"-IHY<7*h70jP#dA':_".[X<<LS3_dc:g/2pW^(0u0l-8Oh2ctZ'>Ib>TMB2TpY:<MHW.m%Beo:\&ERtKP;8dsA;9F>_0
%&j0*Vj2O0*9Y3MR73m,255EZ:ra7aUY@mIiGOGm/6q-q]XQ!507NPf>_uK0irI0($"u4Oj?Tam:&G^]/T0/_uHhWlie)d-i^?kC!
%_o]m:m.k[BojW(k9cl#((WX4`GI9X"h>^mbT/W7rl.ncJkm`+1%BZKR2.[aT(R+NO2_aYO9c;!S-TkX=cd-Mtc8`]'*W>*rrZ'MV
%7B?7R`FO8&LngbHN+8XMKB`;MG1!qVHi.>2hiDq7@3"l!XAXLG>A@.Xhru.M12E)ncTl)(Ae:pj;@EJh"80H0omgts(=(;j5oS#I
%rr0iKQUVtmlk6H*/q%d61I%:@-9aK:1A[>B5KgrmB@sr=K5KheTE!#QZ15pr4nUF`i0%/'s-XoL\oSqNHL3_BgKS1B5/ls3:<g>M
%a1X'>s)Cgf^IKe:(62&b8H6BN!oMAd@X"0^G*dE_=d62jr&n)@]Xu3QlnS4o\46[j*u."Q[p%"jgUFiPhPES$oMZ%*iU<GSO4LKe
%VQ3qi*<1#mpi0&Yofg.lbnhMFNrK5fm(Ep:5FPka>tjX4HNTd+PH$CY@mB337J0-.<aXKDp5'i*csk2%cf*7^-IDYHLUZ.)*KR)D
%nAD][p2\c\*U]Q%B0X<E*tK0S=3)jdAf%+gd;;-#Z[%V$0_c.Nlr_uS^\tT2lcIi'f>$^7V[XuRfidW<bJhZhrgO8kj5U&9)C(j$
%$qA"!:R821+2FBtednZk$deXnGqH"h9MOtu<[?]?Tk3H(K%s*th*Kg<p?:2B=q;t'p"!O\/uJ73)l@*E&-tXM"N:Bd89u=3m-aZJ
%;%+94oBY(Uf*L(h^EnKIQ%#Kb6NhDc,TMl2FkcoX%nU#Ij24[Jb]*Zb-T(iWL&l8:hX)sse+!stq>KpVs47SBs-Y%H4l_#cc`XN+
%#Opuhpb/9=0;&4sT7.55r<=eP?T.f]s,[^nWh5Eu%]2HaJbg/.f)Ipmp-44?hS<q#GCTK7r]N9irL]h_%A)RR>/^%.EcO@5Jo0]B
%4/d9;7>5MX@W?<ep?7Uo+:mH2&"Y#O_;JtdE,<Re>lXDfYBlg:<\NpgK9Jm<:#Cr&4Tk<QBJR2O*QAjT1n!W8]6uH*XC'm"+$Z@!
%0+OZ1*$4Zi3e;05KK6SL*@gC3&omEFmlu0-R]b%4nmZ[qad9W[h84-pfO:9,"!Y8RrHs#^isn*dMeB(J6(C7o04pQSZ(1jF7.7WA
%G9,(X+[2NjMq%dUA`EC3VhjZRo'kO.*r\AUkqiApGd2l%1aM`JM2kp'iA#5%KikMRcObEA^K0Rs?_N[r"A*T7.-3(YEat8@NCSh(
%FTEO$nLpQ%a32SPok^nGga!^5W]-N>m84Z4'Sk+qomEn98ijp`#=c;Cr;(HD\=-,$.dFq2LZt.$*iui$s,_j.&^0FF$_[95m]_FX
%bu\PA$UcdVT#(8>^$"]>PjUN%c)!XM$e$2hS4q5ZMe0LrbJee5Sj'u]0puslmE>.1DX[SOm9L+aB_m*:ST[LbR@c,bBE+L%`^LPd
%24Hg4bQQ7AalC.sn[dfO+3hBtm#JIJH'S9!>D:,-O7NTOcl4u`s*Y1VhqlQl5,B%nAHh71o]S:&dSg-NF'%n5/h7)$2i3_QCE>&D
%=1q*W-Kg:/2jnaXj_iB!_JgoA^5K0a(JaR2Z2CLT/Rfu$0BPBYUsT_%jgrXLc6pf%D/T+?id09emUrT^fpuE,W2V52A^uIXf9D$6
%eV:A)Dn9\aZ\t[RP8ES#16[/.R6+nu2*(Q;AA(R?Q>]R)*d*Pb/mQ#4G3!ETmCu-)roa*"5$^oip&;0tcMkAAY@3GU("%A<maAqB
%hrVU'`I6A)(@JAg_XnC9s%A*/^XZb[9_bf\mD!PIf@Rj6Y5E4(@.^X&SF@)?Rl.+NQ)RN-;fffcI5dCgr".s]C4ZdT8H<+W6OHeI
%J%bb?eYV17e!L'O7H(]UT3Pa)^UmW^D!nWbYG3*3?Y?e<h9pp2OiR(b,S0_5K]WN4?\.4Y_g(\C2>VaugP:;e"UZg+j`bo^$GQKe
%:0maT>OO[66bKs0-;#n>k3Y]jRYj(?4C&)j[csFjSBBTIV@u>T[+s,f(q%ep7gJ649[`"LA@0k/gCHSb/e([Tq:0ZZN./Q.o%>(R
%*sg9YK^'cbO6(]Y&M//L&7T*2QK"m?R5O/O':pAgN:lb,Tdk2*8j2=6Uf"#^Rs&+-pB+hD/>NE.&JfPaM;9f5N@t[96QM2=*GhIr
%Oq368F'rto_Um+/^\rERO1!dC?kB<bB^YQal;)u.=rT7%,58$`qm>(U@^YfT2YRhKHd?ku^5`tAf9_#61g.^!]_gbl!QZn_c\)ZM
%TSM52@-QM8hokV_[=0r<?XHYBdX$dN,7g)=9Ed[N7-s<s-ROE/`cJi`ja;(AEcJbsQ#q"o[D2*F[=AKUHV]cH6765XQ4G[LhWNA<
%Mr)@n$J>.?T<t;=&#X@g0i5C]hso\pio*&9D4`F-bOaTDiaT.qXoNK^\deK6lh)!7ohEi/rMPX5U`nFB=-M`fIeF*ec-CYd[0YZ<
%iX8i;]<N,cVf-C@p>Es1bN\hr,E#:fee/TU/:X&\E/4,+kHjjBl0MlfIMHKuODY[GE3SNWPNUEOK>j*Qa9H(=VYj[ncHj+EF@gJs
%2JdND=Ee2;MqL^16!*4HC3CjV[EE!g9*'HsSaQ0Sf*`g]/JR+7XsR5S/QT4$l\e>$/,@KDeCDrTI<r/C3k9Jp]t1p[`VXf;L7h]C
%QdZ8q><5@S-#sWeTA(h"1!#m4:QH#8OO(_0olH)tbkp`:h8^),Uo&)!(^n^\gU$EaSXI?7$!4oHrd6lF<UZJ&n(M%DXS9puaHC0,
%mLN6<Zh.YhPPNmR$ZW$;>Uc'm5^H`[_cq!:.-VbfGqN_#Bl?Fpf1iBn/nS1h3iH!U").WnXM^_B=JKQ_6+cAB_0eG8?Mn6;L0\c0
%31F.q$XKT-];me_icKHae7tJ%s*+Tm'-D)K*N(B(VdCAmDempnhL#n_\Hg\1cH9TR>O)pXrq>sJq<[r5@?9=%Bh=A[#9.<J`(3st
%)@piaLGJf=>LOZ<>N3*()3;OCnengUVp#dVcHXa.L]r/h:m[P@D6W]gDqq1@RI4P+e%P)0H,t?m#EK@d#]@=g-8lh#(D;,FU@E?F
%\D=kJCCd#k+#*Qb9_3*+9_D,EW%?sGk%m&)HG,oQNj#UO7q^GSp#<9p>.]d>=WLG'"tM,clo+c]G)hE<4Bp(UAhU$fk:[P*D,Bq6
%I-82@YBlri.IhD_]6DP)g<h8@ZYhF>[q^%pg[n;m;D=oop25;nGhVE5-Dl^_dH0BC-j*fX=1W!Zf9YSiMrjOTm6;Z)<#,)?VEYpO
%m=U+)jC=61Def'b*dZaF<u5MQDJXDQ?gXCkBX@u/-Ik^Iam]&ebG1?Ur-K=_X.Gp?eE@;Dn"+tmS$.mu09W0cL'Sa#Y+OG#b&%Yn
%*F3InfUX?bB=M=C\!^$a:D*hB8#nF"HPZ2l)I;DPE[L*H:=Epe!fLd(S0n/RCGQ[XoBC"B4f6L'EHSX^Lhpj[HG]XsMlX2'T(,[9
%e\2oo(?a;)8X[k`2f/!Fq%BRbH@E;h;c'O:Hu;RKSn9qPjg3-pV;,B?r,g;t2]e^0?D7C?a&q9.X6&?obk=u?*B311;[oM\A;Nb3
%qeH!"prh@dFE.6S!pl'6XuQT<*2AEGX)4iKnZ::;6KJSh7apJUahd,f/m4B$D6M6)RP*`XpYtK97]a6`Z/o"eNoFPl$"b$YJnODe
%>-<iJ<A?hO^$.9a?hd76]oAX:ercKr8BqCh,MXh3]BqL''W'gbF>\D/:MmRX`.fjX7A"%JAT\)MC73N=hM.6Ee(OS<Ecj`RDRAcq
%<4bOY0O"r%TJaBc]@bUIrhgQr1UX-=YY,rgQDbg!DX%>2Hj9Ms+rb(aDJ_iI7LRr\4TbJ*0tB@!Y;R[9J(W47P-i[u)Gg7>&rU;S
%9?E(ZBa]j,`Xn4q*++c3NUF&'ChM8V43HLTc<e=.RE_AkP:tF'R<ZD`<&N#KnT;'Am@2P&\\O4tq8<<9,Hj)"nZo:`hUK3W0<1T1
%0.4r0X%ptOBUs+QRiA7g5G3:ge*YNPY*RBLo=`nF[&Qd[$<s#j?%m"(mO1Gu>]!D*Q5aXp%)m'XT-)"6:jHN)PW2?[Bj&<`aK3'H
%T5!cPX\'`%4^s2Mp+f"b44r)*G5:Fb@4`:#*YH)?j;18Z8RL6H')0Uc]0nU5-/7hdCfds`RhK[6p:8Z+:58.<UeMZM9m6MR)\mW<
%(phQ_WBo0Sol>3ZdV?L7NNh4Om$m*Oas!b_9i2duR%LFmP+O=th?2&mY%-bUm4@;JA8Xle9iH'/_/aN"<8%-g7Li==LSd,%^V![N
%6/d6[hrnB;gJ0BP+Q871CS(!_WO2>7e_VU-i%Ck:gF<k@mH;eKp5qYpG5^^k^a[C$+7?Aq7Aot+X+La\@V"ku_b?KSJ[87_B#X/W
%I>21dK-md4-$53;+Irs</$:q&l%]2G<rKhe5*0*/%__!piMQ%5:ZnbqSuQZRQ=nD*hlebPGGhcQ^R8D5:q"]!H74ek1]Z"FFbo3-
%Z;4QiVTmgAZibNo@@SHe/P_CEd_oJ_m,HmV&Z!a+);&s=?VTZA/ln8jekNN6DpZKu/(!P8J^^EA@@L9Ng6iQEI^1D+A@'$fp)52W
%C^fe]CfQ2<3GIs&S(M*!Aq)bH/m>COcX4E.foE)7g18p,G4,s+J-S]<ZEsNh&T>3Knf5M/bO/CKYS5s7a1V[e/%U/@BlfOYRqocH
%.UPOF-o]ad0BN_`\T\Rs#.H'@2b\\<L+-GijN7rOhkMl-J'pK!dkVZAaTIIHADY7P[V-WWgW-j(rVbUNAIk!%;Ut_8Sc%5h(Dk]a
%6<Pjd8cIhf53-PoNSSk63dL;l@_OgKZ!:O/LXC/Bj(s0^Ci.o\e%8,.+6T[2#)VfBhmEE*n\b?sM"VnHb]usN:bZ6@?jD&,l"\OS
%LZg,>hVT=cRb,W]g3u+JR*V?aJa)GQf0:mR02HM*ip=>J@H+$77X-jcdY#NX/;=i4XqBgl`AMtZnIAGu&\du7L.0f`*'6W<F5G,V
%KV>b+0fb']*c;7f*1i7uDs:fCm`j'cqnbLu2*5>a@)W;[U@/,T?-f+eN:lO^XK?]P2^B85DVQ.LI(c&KK6Lo(antMU`4c0'Eq+7W
%5+T?T/e=@YGp5$6N="J0:#'9+HaZD,Nmd#8LEqE<hj0i#Z#TO;c.1\#L[M:86VeQ_lg]VJq]4sJhZ05.XgYiU!JYVJ`YEAUIK?h'
%Rk1JNoo!N[!ffG-"f<0@H9]-2c?lV6&%IlOo,`c]c6uYCM-I2C=lG]P?ipqEADa0=(Fqf\s'P;E/]=h.f=`]-ruS91'_`e6"hVTA
%T4:/#*OZIPob&_PILdK9#j*i7hKja/cDJ8m-*g6k(DFOO'rE9QY-*:sR>t>"B.pL,pZ<\-#"E/$A9f4ioelAfnLSis[d%/E?Xgjk
%d;FD()[A'h/SA-DKt1C1GC[Wc7bA#]mG#e1,FDc*J[TAVGSAm1+=:N>&*lFN2ej7l@<*I/N8&3lIr(2!,-t>(nc#AHWfU:r')R\+
%SNc-)Ed!:N#[cDPNb.2\(tD^:VdI`H59A7A-,JUe:],aT?l[gsI0#>YU^e^VZ1piTao$Olgm=k59qfI+=4;h`*@`6Hb1VOl=9\NX
%+*S@%DV-n)MO<jt8WU$H,'.&6f+2jC*3oTA?;K/$a"OSKT?\gjMaM+V!N1P-@Qf_eb5Q7.'@th?4!&B/<q:%*4U2Bb\&.!XEGIR<
%)XNGg;L-^8$DVHf,c^iMUU!T81CG-BU*:m]B$:<j34\$(LRDkt?uEhEXQg;?,#f:2"C5c"]R@55g:L.T@+@p$pNSAjPI1@'Gjeu+
%7pqXS;oRY+me?I*rU"qRIJ(50HoUrurQiVnhnM8JAGPKOM[uE*J+;460AaJBS)J1([/*eq`?3+M00f6mMbcS:h#75)e,TBkkFX</
%cbdf6pq2&7GOCf#[MjQYHN&BeX%tqWld9W8q<7dXeL.C^(<>p3:Hgo>`DTog[N7R2_k0^hq8c8P%;3HQphY%ooUG"_cT45h"s+UN
%-guKqrpo<"o_it9pQrM\pFd>\X8]e&lPK#<>lF6iAE844e_p=_hg>Tg)*Q/,Hb'sHY<qh3I/2rDs0r#QGkC+cVl&iFq!O?,?ClQ=
%aTnlAbP+Kp^O(BLqpY.Ln/.UtPJ7-`O.Ldo<>\tgEq/f-cNZ&R_\_8bH##nKp?U+/Iere755P4r^1'LWl.,:,ci:S,:VZo+khc-K
%?OZARhuB_VkjC+egki3^kL]3jk53p%SW1tnT5P6I\0iAIe:4t*om;<U^&PS94rO@^Mj*,lqR7Prq:RE.I!BfmH&8/*mu<s1^>MNE
%g$p==B>=;t#ID0oG!<E\p\2G5]6s'sYPY5YIf4I1^n"7br9QiYO/Y>@o".]oo<[=Z^A#7c5<KFBs80E2#fiuYAUeuK07WHP#J$Nj
%)h#0k&nWcoAfAB5Zh"]>_rD%SErPn'DVokl3k,G+/pRl_SA+mBnD6[Mr+c.Yj0;R)FRRuLQQM"Aiihg!o]>nX*u%M#q&SGmGlB<(
%l/V'<^Vj^Z[ed$#o,O[nj2&o#eQj?F0@*G#r4?<b5!#9_o]q]J]_@a=5,Q1Mr^p:k#s9P]qEO]orUJab-QgI.O1lP4OkUE(+9.>*
%(#K`"J:bP]hY[*.nb^;hpWn=:Lq``A7j"=Ps/3W[C0HZ!hu/,Xa$?]AB@_e*@MeUi^O(d=VN,'`(PC*KRVq%L^N\48Wpe:1O%8*B
%2gTZFa1mZ_PMc:Q:d+d:ccq)d^]'sWIlM[,HM2%GpJ:efh$;9b0a%0pj!Qs_J#U`n14GD$pZ92=h7nFpqYmNC_qFe7nV>FChgKr/
%I.l;7k4%EGL%+SZ&Kb+>qYT@rqtEm9qo=oJSb#):m-%^G(-iL7?QK+@^#+<"q)],Oj/S\uo&8X%s7@C_[_CT<>\A)@RF&qJHMIq;
%oa#`fr?7ICNrO/!mdoFV+8pYQSc%q(-.0P!J,AG?">o](pYQo@R_O$tX$+#Xip'u,q>C62lC-iA8!?]uB;_BqT6uq<h0ekOeVAW9
%\c(lU8,_eLa+#Q+r9CI-EDP:E;I)M'VC/j&I<B2tU3cTTr8-\c8YfG?#N%(gffU1F,GBPf]Bf%>0XtKH)*WO)?A/p9^3J9@Ijr+s
%Y/>lV>^Y3kr]d$8n%Sh/fsWHVbNU+(n<j48cd1JNB(L!u)Ou9JEa+$mC!uFuDo+<_4Q@V95'<K9P0a!@s$tq8G%jrm>Jf95N;F^`
%V3,ji+!IRnOsDG(U*tnV%@mi^dX6Imq\sUZAj9)^i&S9H`i+6b`]+2ZB?&d?4.6nb?UlKYG]`ZCYhY,65J$JC69NjqS)8AOrmA^&
%dLPQ1CYt6Im"NX?]Z4=hhuEMU;[7e7^\dfad@];Yft[(3[r9N8>WM1)q!6pd:Hjh0n!n+LmsfW_[s."F5JD28:LF&p8a"45qsRjo
%F1b:t'9[V1Rr9r!7@u_Jq=-p83re-UDaEiA55[;<G'!]L\*lH6DYMHUQT)X.eGjc8jrCATH7tq\[DA&&QZEBB:]0n_dCDp/`!33U
%p#W/[2Q(-C/K:KI/AJp/GiHWUDlu%FZ+ja8T6T36bQ6StlD4^`kL4'.H$4\cmlPHRKCImJp\S=rr94C`le)75r40uep1BM\^R=`P
%l8o70er-0o^NslEYCC+nd'SWl56(9##Of`sD'%4$^H;2[[0qJmG3,&LQVX6'It"qKipk"`ceX689";Jd5CNCaLL^>Um7.iejnpG@
%*ZXYUFL0Zm(ObksM$Fj`aZno`-c[%oO?RPFaG]+rIiZdW++H;#qVtD@B]Hk7)]p2+D8(h^4?bn,NfE#p';%J$H`4iE0k#0Ob8^Ys
%OY>fH0s$QD?O<TJj*.aI4FV[DI*fo\]m<FdB>.0Uk512u*rkm.[<&\)f,r=g^>Ih<:%j(rp3E.KF4W>t6)O;*]:[h^DXXcmMf,t)
%C\R])B,BU\9!$jef.Yg)c(SnLmm"+Wg6rUf\,IkHL>)r=^H@<RIEfO5/Go_Ja^1rrh>.k5K5:(9mI:^6j4<Nt2ns.a0/(Wfs1iMq
%c'Nf1-c9P,j/^RPkIbhfCj`Y9iAt\n5C>Yj*Vqk+LU1u(jb(>JBWG4I:O<!5,<7^KP&2kS9HRRimH8$H3\l":nJKQfk#Q&#J*>UZ
%_1-X>s5g-:XFD`B\$=D0p"+u[4?g:E5IDB>/Gd1<Bfsl.rFETR5Ojs,+nDc(rijW\T%^sLc':MScG+_p`fpSna3FKkm/K(acNdO4
%IfA]G%uss\[>/O7\bGCph)Kp@DbY]CnDX24DgqZC_XFs`3e-\F_nY)k]5<2@.*oYQ[CEQbMk%LQE<jqG[`$(W*^2Q)nmgVb^\HmN
%&*p($-''WrT)[s/'B?rJ0>>)AGid**#Fh?-nC,)L0E4/IG5ePs:O`Ohqrmt<YhdQ<MA@:]^-)8VgmOdqSfIdrqer#&IL<+4r,qPT
%HT0eGW:.\])kpn'q";J^]i,_#Y:LJ-W)$cZF`*F*qk7BOOR>"eM^cD-!$72]T%k-jmA1VHS*+9oT"P*VQTshH?soWS04/VqY6Zf]
%L?(Z*l@2ZUq)9Q8@g@FWT#&I(@(dj0hgW(-0`BDUe'#<4?bcP9fqr[P4WoNl:=]3@s6Bdub1e7_?2igPb!CH"p2KTSKBq^85BUrD
%m2qsa<F.l&'\\SHg([Psq`h)^p's=_U]%LD*!?dGSh@kYT9n:kO07?l^\7>c\aAQ7Ps)^=jAdsj9^,'TT(6rAl/5Een3(?8g!(uf
%]KF\jf+'GsI/Db_B@kHqrGcKLo\T14J%bC<(oP^BcaVeYobB7+\Ta=k>h]5CdJ;8_nHXQ!4(!Ga/Y<"=oqCC3NDoT6Hp,^R69,Tq
%4ack<Da1o6_&Vu@5M6hIEGp<q*iQlj_p;(R604%%fal41O;i'Z4H(Ar^AbtCr:7\[a,^ueeYcW7F?MTEGO^GOInMl7rSsk9O"UG-
%!lm+24W\h#?gk]$rqF+^\bbR,oe4U?&PmlMpi@J@MsoNZ^]+%1h`rHr5MZ/]kqkVMB5%l`r;+BQorl&!Q_%Kpp[hS>G!(iYrkH)2
%fo>IEU[q9Rrq:L6i3SmpZ\Pm1a(KmV!-hq_5;%>hna^IF*F(eL0+O<;hUg([hcbg(Dsran=3gR_DWJS,IbtrUmG`KUT>'j[jeGa%
%hoh4*h4+PnH[#L[f@?3X7mEPlrAT+>3e-SLgOGg0H2[@s+8g<YX5E)W3<%iZhk8LQWB)Z(3W/O6WLn=2]tA8i^\EpJoom&][X[`_
%a1D9\Y=.YlrmaS8X.JmSO7C4\E/^^%puMF.hk0jRWI?hurF@B1rdEbX/,p&q^rC`)^HO;l42r^S\o?aCRsYeDl^re:SG_f5kPJ>p
%$[6/65J6R_h8?jca*Y5u:V8F$q2^l[$^]b8bN[67f0@t&Kn3plDLP\O\G,SVpN3DfJ+<NSUV/=uI-F^^Or'PB8=uN(h1**4e*XWZ
%T>Q0JqY@l:DP-DKlo3gMP6TXJhO]oc5/A93i8Us/hthbjZQ];HSg(mTiE%+OJSI,.qs1<MqcoSuF6V\tMmongqU=M-c@YcF5C)eE
%l/d^!Ht$?QV!qt4r]p?VDk92fn^m4LIe*:.mgmQ"hsTl=5P<!Jr@`)Z5/OjUqpLPmi*j.mFH_9<$g,A$%mTmhl7$Zp?a@eLe`X[#
%2>hp`S[Z<oqWZ7K^,rtlVsN>=J*Xec:J[KC6'c/[!b<r*]_ug;N:Fp@qepoUgQ#V3]N2dpG4G4(H@PP#_g;:Se%tGChn8X[\T`IE
%0(X_Ilgq/I&./rjNP.,PIs^q_jcf-dS^VfXPtSgYB7J^Os2"0m?N4j4HLL5C*I`5.e?4keC0+0VDU/7VjSL%uWRWr*g?3\*?9?a!
%m(M.$+&_S$_<2?SrdOCN-b$r<P9oRF<K;O@o_A6]GL>gh-T3XFV)P$k]B-BVKY@2kIXC=rk81l.pt,dJgW.dp^Rm(Mhd=Zo56(?]
%gSh;Zp>ue@7!^fG:NihWhE7`<CAmYcn&sl(+'gHKK<,H+qp!_'msk$%P7,.?nQ)(T4($bBo:o*Qm+P!8)sk7R:[\-<5.giDfY@-r
%`@L,t*rNFfQL!2KSN-ZAb]j-qI=As0Gk^gIqr?l60Aa;7r1.=r3rXC#mZ#<rh#;3ka`#d+@FDTnN,qkoonR\bF''N6ZE[CnqQQi&
%]4=%Z^Na8'NA&CLrcEDbqD2C)68`ktQesp:YlEa9UC66,I!POi&&Tdlj8Fc1]:8/ZqW%K42a7'!khP.gNT!RBr8ns]5Ic"-_>4)^
%e"<S]gsOBcGk)R#C[S#PIf"?(<VX>r\"()&kd/=-5AHN;j1b?df%KM>[F1k>(S="4IspaI5MeF#c2AS72I?A[rUe(fhNrH4SH%O=
%59=]]mdm%ioo5_20<"-TcgBWe&Z1A:a7DLM>(Ur?^&Qj#gHXG7hohKFEr"FI_ooN]4Ze&[f;"8e:;6Dpf5jH2p\2MaCEJh.2pM"S
%k&pCe()a'WiP[!fq<c;Ah0Athrf*gS*aJ+thDgCb4T"[395bocIc^LV2fCoF]`7'WhN!"GjurS!,`G+J*aQ;UEE\EcaZ&,p)Uu75
%H6']lm2s(rYrqsOnBsgFhj]#6W1pi9o?FCMrnatO-U,(f'*@A.TGHE+hE,p#K#ESrX,Q7SU3,\=a^1R1]fDLW97Q;8$O:B<iu^KJ
%J*s)HhV:5X`Z<<rm_6FjOit**DUjf^c565uR4HlT1;]&hfSW&0I2$Vd]VOCD])(U/46=fAopNLW46GkbrV"cS7ro]bqdTTIrr!M6
%k[r->Q2[e-S=!"#o&,/H:8`BHhK\5VJ*Y0nm=&?1<uh:mgFpn9EPCu+rXqFZ\j!UScca9hh`WQHk:cl.[l&X'#oL?*]BRafk9&+L
%BIq3g%mRc#l,EkNCZrfk8+$4YPVgl4>%*h4Vd=mqI/1UHqraRI[r1I\5.c2_3I(2[YFgltq&;D4j!t*%iigP9G;o>EI:\[.lp(@.
%*c)a5_Uu3]J,/0jo>C=*rI*97W/!$RfN\(Z]6WT!SN#hp;posil-[KLjlPMBaPW?!]Lm2?m/=un]JHD]5O-B8mGJ=8S+QU;*Z#gP
%qu`^6p?'?CfA8YRkOA25Iqn`*BCe5lH#%SO[(!+%fo>`ToDH-h7jg55o]'lelI?+NBDM!(T3iR&o7B"$dBd%e-'TOCpo4j#>X/$)
%,acp8s8C1Qc7,r4Xc@jVoR<>6ZT^G-^3ss?^L)<\*/=)A7jgJ`o?E!Yp#B[tmsX]Nj8%54T%r]/UV@n7]d/=2ps-QideR@es8(?"
%N>mK1pX]"E/l*h`a`@+SMgJ6\'B1C;%c?/g_JRNP3RDgE*QD0E)?9!ckkp(DftViQj6j\=`g)]AB*(uJB6+U>N0?gnpY#OIn"$(d
%oAJ,j>MX7Z?G,mhNM#qARCtPp.b8+!Cu.s;hE/dhn(t2(I/W(a]mY:enqGu8^\\4'YW'k"]:Nm^?Fb+E%C\D@Igg_Yd4arn4Fd(F
%Y9uioY+K%[H[jq@7/tiUGn&[2C]DRJjlR=MroMo+cVArd`o31Ye(jn?*rNEobK)th;5%I)^dF;neW9\np$(G+$bned4SAUKG@%"N
%::cs13PkQ#bIQPh>OBGVDa&kCG3]"YgWRq9n)`6kkiRrtH[S8:(r(=YoS<;[n'2SrA,k]MKDacI\Q$o$D^[B;agH>B]Qg<^h^=7B
%onM[&N,Dr!i9oD_2a7$7p9--0IfAlVDtJLgqoQIC?U%68lao(d*Zi&ma2M8,I_E/LPu$NT>X!59s5iQBeLb:s]qFsU-N1UL.1,/5
%=)a^H0Xq#6NTp?5gO!9Kr:.ftQS71iBaVm-:33;I^%fdsJ"<0hp>gl"p$L48R1bbUFYb""3YQC9]%(_H%:]&fhM6!G\9dH/UN8qL
%T)J9IqZ8q0cb+_d3Hi?OqXkYKhk,\ulh@hVr-9TY3I8"q]mfceMR`,(r!q5t^J0`ur\F6Gp!4+tr+#3R=SmPahV`^Qg9"S78,]2e
%]3emJr-!%-s/gU/TD_ns]CFM/h<OFnBBdISqZkGS:u/ao"g7mpk0]#9#CZX+PuBX#W:ToA6gm3'f&:p!Yr;=eT"]R<!oJCQm40!6
%%Y)/,?hKFdc_%mkD),,7Hf#lnqYL/%9C[IZE\F%*]h@&MkjkR!m?<IIVI3?_s2"05hg;SWj7(a$%;BN_CQBXuT%`UY**kNp8H]pY
%\cTKls!#$73e'$Bh7go^SpTqFiNGa!DS1Fmh>I5kG<?T2_Dq/C3l"C,c\"p6:iGcM*;7k1]CIgP]Q=(kiIa(=GY;@cq=(:X6.>7d
%48GP@^U(EF\a<^?O)Mf+=>#sk2_Q.EU@e0.IdP_P-^X]pSb_XNc[PZ$J0]W5TB.Gac2@+]HZM0uccf2bq8M.\%o0k[9)=#91U&d8
%07J(j9XalWO*NkfH84lBPMc:f+8ps"Hu1ss+oAZm[BHasih_De4\qm0nbf5QYLme]4M)h;Ca7d7Z'=!]:Pe6XraR1d39)P8H2cf7
%=i+rFIbk;.\%G`A?MtUq^jiod&D=DK.XUhaH3iq'I==<#lrLHPn!Hg.a,YYr0pDO]IpQ7-J;rX[aC1]!Ib776J*_ruN^s"+WWi#O
%p5n1F]_6R[,1nPMm?a"/=(upG=8h7[J,GA2s5STff1qi`m9;O^rj;?!A>.dlCqohIXSGM>s8",*kJ[@l:]>_nj<:)<$2a%5=bP$9
%5Q9ghs3mmkm]LFQUZ^4\Y)0B(\$XaRm/I%0rGqMdZfeMtGk)5_55rHKfkgBNn!?HjJm0R+$NBjn<m0V9Mq/_1*J+iHr30%cidZ"3
%m2t52@ICc^G94Hm2`G+%k0#pT/MZG?@S;%obu["3)#*0<'.>+W#bY(9,FJ@I0J>R%9VZ5&;ja*VN2_-HQohRLbjSGGIUnmTh!7\h
%KtW&H")FlH!unrai4SQJJZ18)T'iQc3+jF+f.#?sk,5*\@,=OtPQ]an)[lNqHh5"k^l3i_<`*BN)]4n[#khApJ:4VfJp4[!f+JKc
%FTd<,N+1]X(MR%7U'`k!8FQ/*e/\s;N+4Fi.T4@JFcOAT=t?jYLH!GP'C0pg]/8,pi+Pb>0[tWN4)/m$FHjHN\WD4lZTVXgk3$9,
%h57.;V5;Aa_nRqpQ*DTK=RG@cLY6.S&/7ca,@ru#p/""LYo4RTge0Sbog&S<;M0NTij1_l9,\"hJq7FnMp3O@1aW<OA?MDPF$hfO
%V=e4m+]>p83O`NP!d8,A,rgAqA'P07Cp;7'Hgo8nXPG44p/c3Rk,A]/n-6m33l,';Y=u1ZOJ&Op?F#.'\K#tLK*.ZQKA1d*4klK8
%+9A[94!A4Rju10t)n)H$E\'1o'C<Cjn"t.M4,U@4"7[^G3N[q('Y+dV4ZWi]8$Ma,7lem5>)p;GHWqTTC^a;0p;q+OB5@j5oC".'
%nc<Jcr.@U4NF:#Y>E6']bH@XTmPK@sY[O=6LOH<t*([j2gGGUo.BlBK]5Q.4"WT^m'<DdaS@#@K^7k.c1BXl4k\"G*GnB="q.[th
%#A;8?=GMNOYbSS1\oU_1[dTU@YUmUckV>p\_*5WdO)5/i\,"Wf?Tu=%*Ph5JchA^FJRG+Vl3&Knd#Ub&-5A>@#&LCBo&'u?7=ogN
%3'+mkdeb/CZ`7-g\K,2:9[P:kkG1nB)/On;_p5g2eqage1b->PF?Z9n(2;Hfl9mLq1^)%rNV!+:9/28mX4>#>;r%X*=U7[DdSY+f
%/=a.?>s_aKNqQX[jp'&@W@&,\H0u]']n_%FS6N]2^P`k(9n6`VZ@hbm:N50R4lg*)kC,up;ut8XPnm1*+61.j$#JIqL1QTm!]I$'
%EH"Z!_,7L&c)F7Wgf@].%JMWXScG:ud;PPYcN.FAG=d`'Ne22>HYq/QSDYYnO^MFYi.64\6X"LI`[ZMd!SEX$bYO2gNGWUJd;S0X
%+U!bG7Pm?.`C;OoAIGa#Ol.K\o="Bd\Agq@[cCgFg9S,VrFTAN,rc3!op`M;Oe`/I;>*.4Bj)fB5:HF.#H\6`QM%iOFp9pp&[M3U
%!Qu6\,g)1oZHTKS=S$j[CJ*#qZ7LH]cQUR?$.q=/+^1GTJ5F<;eX9ddLV'1X4E$:kU\Mj9d_$3sZ%MBtUM_*E""Z=-DKEHOSgF3g
%gd2`0f&i<DeqS1%TBe?Sj:g_@kYA1F&_TrH`@:u+M?*"Rf40k;2UTf02LZi<HD]>">6.rBhY4ZE!93dT/]jgjS5ak&-?=jhS@7DZ
%_Bquc*gO:/L68YCR!gII-'b^m'C8@oH%TAk3Kl2?`U?^]RfHZs4(U&D]EorF(V(FbT5t:d$a>CT3iW9^].bLLRE<8Rr[(?*.:g,T
%#e$))aGg?W)]!4g`0T*s$lmU[7<rW5-mo8$2Pjms>hJR/=\8FHg4`l:3#a[V8O<\@-!Cs5UWY0/=WErQ-"%_dKbKu3LZ#hSg'T`c
%i]NUJ]MC5h,nR.XfnDI+%"`V>IjLj)%?c5TCBdDooCgCD6eQ=?i`3[Ql?ptZeGtu%4B3q3b?Wf9-mK$0*$W1DBbl&,>X3u*IS"PD
%#.B]dp2R7n`3K8,FH$#>=G5n^A!ROn%#'eU>kOZi#`\m-c`i!AX=1%G]JnH="LeGODJNVO3cIdU%8t(&@%(%h5SHVk4^s[<WG_&*
%DPIB`Se=_=/lZqa\.O+UV,Z\l*b#A"2r[#k!p&&j('..hWaItVi"\?8%c8:Lc4@aYf?KQbepKbD]li<Ipg8QNp5NoKjFU`t+iHIY
%M36c\I9heC#T#h!8_5`\7<j_>Cp%!9P,#o,MS<e>!?45=W8nj6V5q^d9l<'S=M(eOH1>`RHBX(k#o&k1GpAM3N7Y&]j!b>uf8;d5
%9,/MQVo;kt83F^h<N#mWa<&ZKOjXS7GQHP:\j&BX)BLPP655qpCEV99m6X?!AF..'.*FB^O<J.c'@''Y<"8un]YFXhXr&qBXa3VP
%/&60U+&]qE6_kS2i2VEnl3Y?LU>EM)%OA?P#r\&J-<MZX!AmiM;@!^U)(<g-B:#G-MT,s(e7_h7BAP*nDe2V.+a/HY+hN;^gchO0
%U%21IU9[&%R.Y0t&O@\?0Q`&l'He<Y#$\:$f+(n2[P[9.Q4$`68pumlop0Z7#rqb!CuCNiZ3ZFEHUj:E[$JjN'o3b>h)dJ8h@]E,
%*E5rb(t__SMOg8]1U%Q'1Q.p)?j8+]&\@UW6n'LGh><H!$sZt0,1%:b.[^H#.Ji48/LS%2!U#e>"1cq20dJn!!';HsL20F2ECm_L
%+eTNRNJpM/oO6.FF0\7LCVTrbAS=`$UDt5![j@JNKWKfq\LI84+-..L[B?tlqIrdXJ-6TeSBXiJ@,(`C*A:7Ui%%BIQ1>Vc*[h22
%gS]2I(=701SEh--F6M0\7f.;s6%g$&O%^rf7Z"W09bCJM!(">`j/!8>1,seW<4-!4%h+=L:X,h!Dg?BH@,M(2:C%/*WkKqmV-a+G
%#TX069M:*u%bn55Bb,Mek;`nf)n+`E8C>3_'k!QpZWAI+BXqLue.%s8*l>&[S/cCT_(Ph(5Fge'DlWpk.^4q2d,'kN+[FYW("?I,
%,uS\P,bL,U0.UG-Osl6%%46q'ABE[fB6_6$:U$;[2F4WB!2g6f%@f2GJFg+%X]e9*CiGCN3s,"#D:#?C,`^ia2DUL\G\8qWL$H<R
%^m00&,I+L.c4YQU)YLT2K,32_=LD>.A^B%rZ=7PK7T20P1)kB[L6QLiqLhO/&WB*^nEgl^,/Mte$\pb:D$^,5$EeW"Y%BJON'0F-
%%q-]A.Pk.0o+-_"l<a=[.=fN<VVKaHQ7/B^e+uA)JLfZC(Oqr+.eZ^hlRnc5^N7G`<0k?K2q`m6.5B(DM*MX[Yj8ShYYc!9.:bJ1
%q1,XWH7.md"&b8bS@;?M:p-\?SM\/:mgOfN'?hTM:i9_(L5e!iRX0R^W(`R+72\P0\Ts'`;bCn3[umd;QkkE-B#Uc2aN)+/6uONS
%5*2hHil$4W.dT<U50Sc2\Ds8gd;'VP?Z80tcmg9+TfHOKl[ko5Djt%sK.oSZ)9e<_U4Km5TS6Ea+OBk=So-_T`AD:r-;!U[rrHY;
%qFOC^&)b*(ACLp@@PeQKl^a?HX)TKK%d?:4mb,'gU`aC!VCW!M7*F5Jk08?%.ke*%C.,lA6?D4-Y:GuZ+es*_Rfk#ITpkWf'3ID>
%K;6t=USi]2Rb7?g\rgs$G@EG/Ubsl8NBe4Noj0u*VSpQlE*ClCf1qF&ouD'l2a9DNd,=IM33Z?C'Wo&ic#@'TECN/tg^GAHI<cSL
%]j*KCUC"2^3(.AM!a)*cSR<N)XA`klF3>#&0*jIF9kD'G9e+MHc)mI9&6jX%bpf=\)p*hPK9/43eaZbq3l1m4D*V+=`ajZ0k.21!
%9RGdnJ5<E*3hO9,`cU^f'Vo1C@'+bA;kD14TX,VZg.R&UBMNo1b(?I8)Hr.Vm6NDDUtcr:2sN<;ac[DL^-q'b;H+qtk'bX()t+d%
%EE+ibg3\p&1$<MSpbkEo^t\/_>@NeQmmD$l$.AIc<ARJj_o/C*c6k2bE&,Xi@.G<C]0_[Oi1`K*a,ZKCaD%l$"-nV;BO`P\.'pa1
%?nI?cN$p0da=udf"p6Y5Vjglk+P$91LSk*hj%s"]$q#7/"?G9<-];;I7.SJ\03Ru7BbC#!5Z:"I5h5iZ^@TTqFX<k8!0_=G]+-WQ
%SfWeLYLj1W%oh+jMqCU15hf#!"b_#1cUeosJskUYSU70bB,=E@9i6ChTlN%G.rR0,Bj^MlMn&elM%V?CqM>2\O.LaMgeGq[6n#s.
%J:>\[,-j;GYc*"#OuOk'iaeRTK6C<Y?I[[A8NQL775ngp@URr:HLBo!#;q'!%E"hT!p'313M,"lf)_>a4%E$l0L4o+$-ipCQY(gn
%>IS1>4Z!bHk#WW@+at&Y2QZMO2AD77W3#Ik-dRO5"ZB^pMS[E%U=l8e\HsmZYFLe[ZhG\F-BOLg$H]73!;,;<_uq6(!NUKj_Zf<Q
%JF`g?a=-a*J70k<0YmpY/WRn'qD#dDTZ`/X/t\f86pT4K)pKt"+YHFidML^Z!SSSkP6m[("):XNIR.]73Xs49!i47p+DpkkI)Q2P
%3<[1hkiE%'F6N2ueF)8UrNR'@1^EJ^Y*jes]I;DVf6g`CkQGT)f`nLZ,Rd(5mR*6QL3EhXKEka*>bE59:'JV`R\D3<#o5BQ:TuJ&
%ZA@R.Yisr6i"G]=-T.5R'4A4%d(]ie$ZIKW8BJul8E>?Hh<n(b&Io[jd6//KD>+$GZ;)dK(-6F^s1m?MFlJj,9c.TS%HA#UZ%@%5
%!gZ7c$`lW6q?3@iS)?X#e>-J&W-V'dcCcecHN<7)24_fDf90K$6'p%9(hGu[@U%(h!%B3hcjp/m!L@@rOjR1sS/kHS"u+f^4i,N2
%BBGm^5rj*,]g/kJ<lL^47L)bh.Qmt%.53>.b=+f1Ho&:?H"Lhn?!j6V0G/D=)D.Z4#=t>Y^6?u9'Z+COMp6WY/pf28@R+mGkDM0c
%Q]Q]<j]-jbd>J3m".!>A*aj<TKYutC2&?XB=HN@@jHS@=SC_I#86K-4,s`<a4]7QC>Gq[e&V[)$I>L:&@uT_SV(s"f7`;F0MZ?s#
%pa6\-\]5Ablk$T*Fqk//JGpHl`-aVF$9>qi?b"fD^Y.WV:)fHSD@4Ylh/VVUYNHL*"7JNpBb"%O8?g2>P+^u42,!DUhH=[OUW?sQ
%7PYSn]ZS%]$,'(YHq0o_:rF\iEG.<&\/3M"@#LPq":pMF03!9L+K@$Q+prS6)XN:\M`R=-Uk'1%AI\m_+^oso`AW71]98JDo,_[3
%O?i!j0\#0Si-@YMNsW6C#<\uD$F$=16SJdjo,8K]a<k$)*7O7T\q<uF_/M;!1iUl-4Pous9V'tsS;g+4NJu+6%AOIU0.nRt\d!.F
%=kq.*c>>hg/S(4''"j4*j]mXNi)l_\1j'HQ04[FX<,LI-\YP3m<CZa#W7r'Im$s15cD:sHU.NnCUDA9D6tJD$T3#j8eY&$6+MG[/
%ffP3Ibf$O=`'0XF6mB.>`WtG_LG5M(b1CJD7d_1^_H"5P(^a>hE?-:>V;Q>u"fbki45m+q?a6LM*]tt&T7I1MAN=_V)^ZV:c?S+J
%7g'7t"Prh\%h^iHYk+f[,g9qh#)mtE.P=D6hDCX.:WfcT2$A(<:6P-s!(dg5DJD(b^Bdjenchk6^s&iGoasi_Bu/A@+W12'17GKU
%_=.e75j/;%;MLGD-?3p3B//?o;SgbCQVjq)gkDlR#q/4o9(:bh0YmiJr/RMj.FR9o2\-TJ7F(/GPs`N5</7i>_n[Ot7NUD#SV[n\
%"/&5;3$BtB!d*TI=T0,^fl/E,<f(VmchZRZReS2gnYg2?HndJ^@5p[UP=\sf8<iAVnB_^rb2:=GP0cu[Q'@PmIPV6'D2K`"($1Tu
%4V]@mo_c32gu:I_Oem"k'NOLMP(P:s1m&]C$i*0ZiiT:e]j)tQ4QG?Con)@c)o=P$NlJ?A]u@uO5C.jDN*Ugj#nCqZ+?QI+2h**V
%%_4AW8@(NG[l,MCUBiAP9eV>-R=YX'Ps@WOm,6FSL<a8"49=8)Rt=26&0=I/Wue'W5]oH:L'-cRGp`E=+RuEVAh'c',QX(%qs?W\
%(s1u[Wf;Z$oKt0B$B>-rLR(OcEYQ\UZ.N?%>=0!B^:DNlo]8nDCtNdlA.9hS2uX0HLEXg8>g2+/L;04(Y.AIaI]V`;mFJ%DMmd&E
%EH00&k8o/Vdki"#&7j0I\d'g/oK5'3<gm$kl;<9^@(6MZIROo5X'<1c]_@S&A/A7]'[W-oHK8Zj7g6KY-jja6UaSV.)Q9,XDXq($
%o:&dSV8@53b4`4=1rB#URs[fe&j\4=jWgrV$DoIK-tU:a$6r^44(7'u&#ujY#\;\d.^'(2V;S6=.B4WoK5+aDDN-3.dlEq+2N&52
%\Q@NKeM.%OD0GZ."o`$4]5cp$FJ2&_^p(Dbe>8%J`siZ#dKp8XV>0*+B)l]RmT_Ju)SoZhUAG>ja]MJ_@tKT8dLtS0;dd8>9A=EH
%k^":YW&)m'CpFan8s`0\@%3)*e7K@girQC4T!32h[mdt:?ohOn&*_2f"L1'-@>:0e];S&aDsm*lh2Ge$1k.`k,Re'_H;dJRn6B]#
%`;R*RQb1m!Wh)S0Y^1h)@ZqLIOtR4bRG`f4&H9aUhO9t=_Xk:b<';&G[Lq:2/$6d%bPSbW+XT,&8J<F!>iK]j;,33J]aPL(@uO2&
%R(c,'E_,=EhSlo1>I0_QiQTF:`bm1SM_fI-F$<W/1]1gpNX\M-r)ds0@4p<?3\tuB["-Euc954M[0(N1GDE)*PEtXp$&;U9poqi:
%e-$&V)*[\)4+e%qc9&mA>a&ua[/f#VJZsZ@@5)jj!pi4iEq3i*>Hp4&r:O'p9H1CH(RBtG'\mKMIf&61H`oS]Eq`Zie,SiLX%+R1
%nJk^2s"W5BD>'TY[eanZB3!lSOm*k=jPG1k&D$KVDNJ,K!`,[9d/4:nX9+9ccj(DBWh<b^ND.Yq%8eO`8T>?k#?!]=kOgRO".U#J
%BWK"Ub^5ksWt0t.N2sK#S>+"7E.JKGo:6Y-0F>q8>/Z%koc')2P&LtPH54%$5WVq_qEPfp^V^N4W#7l^0g\?,SN/r-kj\>;XDp!l
%SQS8QZ9M+Y1qF'qcX;<)4Y?7"gagW7E\IK[PT?R.!cFEb$R=l<Sd=WoC'_')/hNhj.KEBd6TqH5KArC,NFK1rWoAXR*n>;gYkLO5
%f0u42'MRFck]G\B(*Qf0B:Wk)Joo;8Vs#Nmp]7JtS3i"Z3=\5-JmcANl6%\0in_=:"*r2p9Y'F)(&3AQ5AKQf()RO4(pU#tOn\'#
%$Ep.(%170oM?!TbbF?_t']E[Z)n7.'BD0nnGu\>[E6_E@E,L&[?(gUl_$!8C\@Bt%V]^CUi-NN_*eKU>j64D([&US?`jt^s#Yrc2
%g,J:"itAiXiC6+Wei>WGi;o`ad"^^5VfHIl7kV'L4/PS6`[5cIFS_cPNH57A_1eD_N32l8.8aSJI-*96L**4[C[RRS`+QR3d,?,W
%++.`09'J6UT;*!8(JU!b!mgtHaqWcad[.,UIJle7fO6Kc^dIf74d.gkX\!aN(Ka\m4K:E_Wjg@RUh:QXEHbO5):CKtZ'6s_9\c))
%=0Xn?OYQ18$4mTT[6F(<%MI1,=:#-K4Ta5CoepD0o^YJ5:oQVu;(<*$J$*=cQ)O,f.`HpM$A4C)W*gP`g'.!^*\,inimJ/:Ya=Wc
%=<k>eqaHZ+M^Rm'*fV<%))Z6P[-K#.Mn`DcU'hF:.8#,S7Ps$9-nmmfD!KB,lU#u!n3Q=sb<(CFT*Vs,<?H.R3M9;mZBe5/W,tAo
%4ZYRdM$s,=A-9Bgk\iTUrdu:ZUD%Y[Vb734<'Lq22nUC'=+nkeBC[>")E9d``utMc&f?r.<0<((F5@2^XZQc(]fs9lo@&mk0']!r
%64asqY*Q<fKU>*R:CB3-GSW/_.q:t>-K#FmjEmo,F%T;2:/%1haqRA]PMqV"<$.u_T5&>f!p-m^>6WHMd+@4PVR]-(D!]nH"`bJ;
%+e[I2L`NT_YZcoP+IG)TTd+t;gG^F+o,7=S:i'\Tk_7/-$NpZi,S,VW<=R-FN!++*dSuZs+&E+t5_qnFL)L+?.j/^pj>uYlQ[#J/
%ZMa/E^H_YXq3-;?I]^l0chX/YJ_pt;]<]44LklLI`Q?hGZG<,6YZT>);1elL;C)ck1)8'LOchi0)B3/Wc[b-u)]XK$8oW1Q!"c$c
%%&+J7okpGS")+rk"Q;-?E2AfW5GC8(3TTN`'n-8cdkDP"MIr6KMU2>rkP*Jk%ArlZ][F;#\AcYo/^<X'P(``E<7_2%FPI(fQ&d^3
%++?pU5/rVQ"T3-HD['=[DfUS9nf&caS]e5GT8WfW#TZc";$"H:FUuuWPCa;I(GPMuWP/uF@grLj\A!$2)osI_0LTh)(j[+[K,tC,
%K9fk<EQX$Qop^&[iRQ2P@Y#s4TLGRVN!WGdi?qWN)T6D6AHOKFk$^VLMm\57VAQFfgdMjqJ/Y33K2/$m^/!Y&"Z3fO!piY')P+eY
%SVR)K_kft>,5]1N6f*Q*&bQ5k)\?7lU&T^1.&cjAd&i]FK,_7<R4nUA<hd1h2Cq]A%WPJeOUR=k<NuEQC>An-Q7cRLVh8([BMMHH
%'gUJ[C&]V?FM.rgs/Bc%AP6.)@+Io<+oq?cSMA(BXs+Xg]\ig(RnlZ=k;CH`+*q5FHpC[@G;GV*jrNL6I0EsY'2GiYa%e:4H?GDS
%7SX3.R]MBjJ?\4S<\m83N"-lK`E&0CA9JVIebE:tTKq.E6I;j&Tu$)X?s.=0"bF3tM,=$@S`%P%ePRnN7gW%a%HDD^MCt?BATN$t
%8\>41L68$$@ZV;>.EJWm(G'm:!mM6/#1AS50Xo$Y8c'1&5lQm?k\H-?oKcQ1Ad[7BJj%o.W<"oMOGmXmEGs%me/5o]F9\D%?!8%b
%ap`@'`p+^**$n!iJ<M^KcABF:*8h*>?#go338)9Z/g^+s!:3HTX6qRlQo(ColO-oGCe..jf5(a@ro5,BKnse[omK4LO9Vd!f>W9,
%P.3G?s.UdFe0XF6XUomJpimi1#jo0IFa!4e1bRO%QW8PF1_++L>5[cG&6;3Fbd=gS;_%`12`U[72gg,kkZQ-P")A_5frZL'dI<[&
%?,8e-(VlW#YL+U6BUS&eD>P>3>^GcqS%0_<E-s\U#@Z'`<_Yp_cWg2BYb<Lti.G=rNN9K[FOXc^Zb+!!"c0=tMoci*<40*]Kt-Yl
%*sAR@[Gc'Je!cPucoi6D!(:ObM^M&r&\Z-]lH`pd#?Zph2\0do$VWad)T\h^BtY4VZ3s^M=B)S;#R31A9S\Oc'8g61h'j$jC)eBU
%+qOE_Ce#&_%^\%P.6qLa6-C&0arWk*`IQ/bcBb+5*9@gba!&RrHSd&P+Ba)DfbllOcP\'lm$qk\=Jd?]qbfjeG2?8]C+B_AS4*_C
%53EWVln'ZC!6c?_b]hVb?_2\-1l]l?Wnp0T>IZ7@9Z_F0"XLR4gW^"<P`l5(kN7^DI9p<9:!FX*Y5qa^X1jjH&3S@"-&%F0Xg3@I
%&skif`&J-k`).<_/Qnh^pqF6H!D?bpa2+rSm\*=_E6//:7aEt#[]dAKYm&GN!..sPQDu-\9CVb6PFftX.JV?>_\QVcah]5B2Ok&3
%XtQMgACQ]TE5q`r1Aq@#ge"^g]HJqDq8Tr0KK<aUA)>Qf%@LX:0Mmk&.#^NneMTe>+@-*VEIDp7>ul,DTBih0e4!U=BuYAG`R,Dk
%$UP.#Q;Lrd,_RmjlJ7m8+UA5W%Ml#@!EomnQ.1p("F#L\3l;Rq#19^eDb7>M^p\"FkfA\WY9cY>#hM<K;-"\G("XW#koO[nRSkO.
%(A-gj]Jq@!5/+&Vkl[L@<3WA-WQM!S@M]Z3KY/E-/[l&ZOKuFT;k7/(8bR*r8k_[4eW`EpSkMRhd?%J!WAb[V_T-Z8l792C$mi^8
%1pEDeKn5tA"/KJ.%L14#p.=<S7_+s*+Goo`iISr`*EM%-f%^-kVHM@rdpe[U\&.Ia0`#B9#-s_M4]8Nk7u\fbJ!c82%%nRu(I8bO
%ChXutOQrKA;N_O0!G7tahu`cVI70#^UrC:12.[953SEp[M9V#!h2p9,&:1kCN$)mLdQ/+BB/.uBR@tfCc"j&Y[4*J)_Q]p&F"U>s
%2O8-WPHYF&m+fOC,VG7#oWkaYOh51B71FDlo]@SHY+,G5^b"J"!goE@cK#<pB@W$g]X#^)'Pa"q3D0RHD8MF#bJGioPBTd0-?#,V
%qIFO\S76^C-/[2QWdb3^\g[pqbBcfU2TtJ((%,S"!C+t9dWlT[k>gfFLH1^^3pci3%$q!.DZ?5fV$XX]m+$(q+SUP;Omjia$h/q,
%BMJO[p"18CoW1M#&Y]pOG\(eb1DZB!j!@V:Q(mb*_>@j,8:[21-;'7cA[\'mkcD&.7:8"Yq3%#W@*qG@0_kAn_A!HQn2_\2EG4!_
%'+MsDOSpWQ='TX39h't\^'HAP9W#Uq6Sh(6;r_1D+Dar1(ReqDlR3bs[&!SV1\?u!K1!1ER&lr?QLN5gf7Md",f\#B32OCuH5IF,
%:*k/8Op`r/%?TOD5lmWJ[n]f@7UNci]O`>.$tJR;O%Jg^&Lh@o=1!j%eO0a</BjuQVH/?1&>tUA;37J[8\e:Ak7:2$2F(YO>ksJ4
%,Y)&o-X)[s5S09e2X#t`;PYbf7RX9u?WjF6LdVQ(Ycn^@OLIRCX1ZZ,i[WAf9A)V.;<:k;l_or'!t%5UFQ_?j/HI2HTrT5J=K][i
%;[.g32N4*4aL?XCQA]ZIHD2#k_9"8<6$OWFs,;Wk,%BG)Z_B/'=N?]a#i]42:e;>bPBuJ3$*+%f2\tl)l6+FO.Y/pd@GDItE>_Y-
%KVRYlA.^m5\$+Van3[X!9/Z'r?tVq68u4tuEn'/LoI3cf=Fa(*8A.;gV$A4CCbdRA8O8k?UOH_5N(7BQU#.QI&d-N(\OX'm'5Wj$
%&)%akk#CQ,_;9/Dkb^g=XN\Z&eYF3/Jq0l$Qr^Ts*OVYmk"-"Y<.p(ddF<+PP)-=J`@6,Y0M]PmckEoL2Iu\$$fEF4AV#-D-qte=
%[*Z&cBJ-Ig8SdNZCpt+r0sZ2&gU.#ZBL<3'qG.0'c9i'i%=dQX)9rlaDPO#oNi:*sqQr$r1"9QrJHR**=9'7hM&@MX&>LWKj]m\+
%/W.'6+O_!9#5>'>"!AR:!)=]_+/^It'R(;q=6R)QM*i8V\Hc:8%@!fWOVJuJWUuS0"F/R=R@7`tUa-[$Z2S]='-1n/ONuP[(D@sd
%`[);J/85)qI2P#B\s]M-@2M2*H%el?F:sPE)bP@ZK[`T2o>VU_/2fiEdB]8&a65C/Vn(:nDCSX/0,h!HNgMAchl_gjfTN>m_H\GD
%^^.pIU2K+NAU'Ot6nTd8R\:,iR6<q7@1jGIfGWi[06ufp92Z.L6,I"H$#!Wo0rUbPkpR4)9YnCcX=`ZL$miS[+P^"",3\ta5WM5O
%!msXV>6-@^Ht>sb'p_9Fr&(S1K>Csrbq#FP$^^SS!G1f;id_fp)Bp"0qI#a.1uAO!Vb]s_:Q$tK(_QZj!7D*B5uAg,o\C6.:_dRR
%]0m50]84"n/p\[1ZPXlLS>d,=(dTst,3`n@Bq3^BKCs(6+aX<uQr/mLF-Q1E$4]h!=B`;A(Eb:/lmSr*BSf$0^3PA=4CU:qTQ3oZ
%'K13+JN=-i4od+uqFZ]l?'3F`1ih7$bVKW^%HBj\Z0;c(?^89K9A3t<na&br5.8Mh=eK=,kWC<SkHhhM>jSs4Jlo`r=+(E/2C.dE
%Y=dBXRrRA=Fu,'&,=S7OY00OQ]*NUCX_tE=_pP&NRS&fK/*c/sXLj;&P$;3^a`PhBa1<u=?$qZ`<#"heD1.qc*543WaTqd!57Kc'
%Cj?)i/_^XF7"GHebsZO`SH(puN!3%`Glfgp,M[#nq-3:jLs=5!(e2L]Of:)-lC6Vefd0t^=H&%BDA%84(h?1k5L"I)C2,8$8hJcD
%)&*ok?"jD&B%jb-V@muFY=,8GNrD%JB'hr@LDU:7"Ta5#$e&@7!RWiQ`TZH<@K^:?72.,NKaIDT1`n;8,jbj#CaqV]YTIE#c2QZY
%Y:!p1D@TPh!mkC=8W'2,SNCtt)emQ+W!>fL#!41drCFiF0+`kZ!c2H^`A+,8/@*fo,osWB@S.9]l$%c)nH-!eU]POfR@i7'YV'sg
%\BFt/T[c<=ij:T>OJ)80U>=Qk'.%^W]"aHf&=?-MR%krOr&O.YeIP7FACQ-#M_jbEbKX%.O%_t7<a!RRQT50LBMo.[j4g=G`;t-`
%d7!XeU7](Ya%#4i"r?%*2/-+DY'Gd/8p1tn;ci]`Sn#L^>st`hnH!=""N8u;83b#)dG/lNK?78$4f[6BN.NJs2Sdl-[0a;PE4Bph
%q/->q1'E4PEgOSRDmjc%%[&LcjS8LZDJon,CQglPc,^TdK2Af=`W/JYi+])D=mJ"clm?I5pBqp(5Xoi//<Vub,;SFE9fBqN9]j>r
%,gc`ADD_Z3ot8<8Ai'0mRpqURd*iN-GN/@1jV[hId[_%/-F+N0Z:HT-.rd*M8q(M#HScCOTrfe%-k=/K0c_`H-,U.I=TT]HY2'fb
%84M>#?@=<EjoMifBmqt9Q%\]EIB8V:h0<Zks1$UF%`/44Z8t4uL^J+/VKPE@&[OPSGHiA?<+s?b4DNkIOP8^Qr:IY?R7h[)Q5A8U
%l(q)"4#<9^\HNX%;C41kG#<Ve%-IL!'n"!>M6s_9Fs(l>3,#^U0=uWCbd"-Z:VjOq,+O&87-_;mE-CA-/Ca,"*6k$*"-e!0@oK+Y
%849\tM=FH\6Rh4V0]s>!$P"pk&R[KA#!j'`30<:NN[_m+L4CmsQRp72!W&BR,TK?e<IHDQ9sG55-?GiZU,'^+=agg1Oqo%D\X:]W
%'h'31c/DKdPYeTUFG:0u#Vn]t8lsQV-UdHlJu8f9()=B>b`t"W$l%:ESbaihHep9_KC/3)COlWVMdD6r>6B:?6M\"bYtBZN6CaA0
%^0Q\J!,.cZi1.bSbDDKJb_Hs?6BUFaBorh6>g\^nj'*<_<J^!o^)tCCNi+m.9#`=\fipd'$]K/'h(4ppK#U)"Y`H%AW1d^MD=l#R
%np$&S=<#3*.du^6b$f""$41f2&;:Vb(<e40o0\*>-7-,01BhjUOipSOUJ1O:Ks\E:MJ]TM"^mou#dC-qs!7=+7tjX1PQ?le2c\aR
%1<R>.PlN3E3LpKBf1dZ;;O(eN$8Rl!P>7KT4Aqf'2[.j&9m`)^A$C9F!Z>c>*HKRg/)AhXBK>IM%-%S^kD910M3F^^7.?_ScF^H0
%H3.6hXt@o3WG7;[]TXN:[^Otlp_`&XCTn2TXgSulX!J,V/b\J#SWRsR3(Sr0+0WMA'U)T!>Rs8dE[pu\P@(=ZWakNue)^[BBIc?k
%mE(B5.ZhE_/ij,p17rkGHVP(#JWPh@ftj`c$3G=/3,#&A`S'hk+`pF2,s6(BkaEgU!e%,JNY&[sgVonH!E-`!)_-#-5OaC-UMofT
%d2\Ybo/0r!.E;Om]S_:o3L!jHUZnb]s!t[>htZ<dj'VdG>gf)=B0mpE]/kj_"N4E]U4J-_`rbstV)hIX1_$8Uge(\.#!!6)4uR(8
%X:>VJCiH\R4jcf?]H-Pdj*WEC*o\d\6B(XGa[&C@,BTktX:7G+PH]FceIA6\X>LHuH=+nL(L<_&,AGdogldfJ,LIZ9UX'O",,'5-
%XD@A2jJ8K!nrhS*bX8Gd0kAJu+tu[o>SD.gW8Sd?6S+P9k$LA@$$"+*GN:8!5A6&/b"T/Q]!/,GLk8ONKSiA2qIbs3#*H_r;e)4c
%PS-a36)c/-SL.oYAs-!"[Uu``+MH3_AWRq05$?U.9U&pW>60cbKkFTc`]gVq/P$Ki1^Y19VQr$P.msj(<a?/^9OPu!/nGo:i42I^
%%LY8s=GE(RZ:(S^@p^M.`p8<f9h<@*62j%4lR%=+1i(9rF%if@^4EP&aC>KkU4s!&?H&4r(`!hnMFOsj]e`dOXQJ%PFu+"=hI;l%
%i%d]%)/=b[OgAc(bVVG.-`qN;n4ptmDUq/U8-oA9"#XjJP%ddILX]=iRVkCX,U(4UC*!jZ`Ph$o<Y&u-)A'3-[RcLF6f&.sb$CR]
%dRMe=K"QgL5],URn@2.Q"EK,%,/mZMVQIORY@#bl@FS1=?9G-Tl@f/p<Zn`l2@m\]JtkHcckj-*\HXl%A#j\]3!`jQa;^@u\!439
%qHC(_N)C0>4jM+\)7``sK8?LlG<D&l>*9i]XLnZ7YRUsYY?CU,fB=*lC=tW3l@BAjX&U:mQu(Zg<Wkes7$uc_;A12G,e6r9+(7n"
%THGe>RVW'e.2#j`r%uWV<S"+gJg)l%fG>!NL&/0Y2:]cW-L)@(:D6]Y9qpj>]#Yf,>RJj5dTCl+Y!+;SNDpV5%g(/p2[YfA7H?`_
%R&sEAONSq);.&u^MQWAXR^,./)AZLff9UN`8PHTqI,m'K[+_VKYdIkM:q'ob`M7%3<X-h+d5>6P1=D?<d_?`A0\dYLap.!pA^9;t
%fa1h.%F,L?L0hh(:`a!<Rn+=ACKb_\?7!C>n#Vs3$&g8W`9Fd?/X$lU"^%iAaV;="g18B?`Q"?@*2:.u]1]OP"#8R\W`AR'82R2Z
%DIB8(@HTKHH'/gR-Y0P5<cbE8M:eqeCD'EoL;T1\FL>Rop"WPAB1>\_AT09F]!5'6QJr6FmWQlX`=\Osk3!`@2q,*Pc+S:4;p?Je
%/p??NkUbM+!@Fj\dkiR.>?\EZ9H0b0YdNhX6Rc2Fj00=99/iVW.fle!l`)5@i/fMW>=1AFQZ%r,L'0#,Ofdm@7@?77=PmLO?pm;0
%1J7qp@]PEKK4QGSD*^?qlf99)F`\eEI9>IS7JJQeSfSqV15_ZB>L445J9!7B>0`jD'Q/9.`7rRHE4a<5m49s#ZP;6@U33XfDte8m
%]U]5t?;XmEB+_kKjna/Nom=7Khp+Q>4%fqK/3^SU9&YeNL-#bb^7n$TY$-]EMD"<Jca^<Cj,S_P3t"FD/0XhH@Zrms;XQ)D\YI[9
%cD$]0.%e&Vd,p@OS@aZ&mO[t?]--=_d\49fN:&5dqMMST3t%SH.##7=B^3n6Wimhh]!Gr5bI(W"P^n0^WRu\K._Au8G%[N&*@5QH
%e\9jF,PS$<\iYi<mOlhtZ]OY$P/"1K%_T-,nEtnG4":p4WaNKGeFB]1a?,8,mjtfX],pRh_Tb/74RXg*rJIo.3t"aN-q1hUB_<mu
%>OO+r]sD8CNmcWC8oX7!ebtB"hE/l0mjo1PMNZs\Mi[<X;nfT2q6%m'4%lC<.&O_bm/!m]loPTcn#lH"ZS_U*,4[h=c0m2W^S?J\
%c=6NhJV[8U"TZQ8&Me,\/lG8O$hcceFb/caNm`9LfY\W!!O+t%H!)DdZ6%mOe_eJI$a5?"?K/=N!t<A!2'ZT@*$IXNDe:s=8)?K(
%Gt9ZHi\Y=OL0r2'FV??j@giO!][DPlbQ1=]J6pe9LE8H3;''\`omehU.dkcu50\bJi6G&$dAl9_Ao5AoprtA?Zp:<YM["d>0I'tH
%cV`QCE@Jq3G*.+'d_E&Fj8gqe`<FH+RMei;U(q5.+M_Mf*gg;s]l+V5JGdP^:,r/PLR/fI@6-a?+n^S`1Hi&^G,7O0fL$)VOL\p;
%,cLdr;Xo)s'MF0o>X=Tp2;!%?)+!'$P/]5%2?A?hCH8&m_(!0:0cJrLTGDYA\q[h[/&!2:A!ZUrJEF-;:f79hYe/%$Mc(G!(0Bac
%;=g13lrRuQgeb+j-q:4]1<@`rrD+.U4R>`4==74\0Dh?kU4cPOQ?:]eo]`K`Dn5hK4:E]c1:nr<=sY$8ra]d87Xo(&*_G%Z#*kAB
%VBD#F&)EW)0,hnk$;_$"7M?d`P#M,A*hLl&1>=i19h_J"BO*)iITfruKrIUK;G33D/Scn(^+JaId.B&gr>I:W*A-Fp._/A]M(L%=
%W;,\]Q)>+^pQiK*ic1-eZ"=0_bk$M#W^mV<Bt6a!pc9[E$Jk%\C/JAU?*!J38e!Lg!\@VL3$)\n+hX6I//QP#b^-r``UNJ/dA>7A
%_E'?<9s4I39p'PXQ`%Urq9-\5s+SG8)ZAQb*Y^5@?q+'l-2V0Q=l9FUV`/%m"%^%8,Q8f3of[gUMg5jYns%u\"dtn4aO>_]T3*jj
%c&W\rmY&HDjq*cajsRt'\L&,lGVFCTWA+h.;QhJ193rQ([g=u&:S>1QDc!13K6d!eVdZT`(GPs3n9ohY5VI:PAWeMu$WP/cnpjl*
%0o"W5/ll8_.R&r942U6jk^an"`9>NGK+CN&fs#*n0_cin'!P=dJoVI'$eLr>/V#BEY&-3d7>n=+RXu87W6H'Ib<o(&^+nk!KVG;u
%8+H'r<`NMEIDp\i`I9Bg$spHj[oBK-CSR]l%qi).f%$I`!HV8AULkM258GMJg85KV%@kSBmNnAsR>1o?3m4a@-4l[oDJl%d"9DqM
%*s_"LC5>sVdVs=fViPpMU+fK(q5EM7QdStT@a8p=VWo:`RhR2$R%Qu]>l+1s&3B+U5_u*MT_V@NG,*mPDS+@LGGbQ3:06>D:;OQT
%LNg<I0+nb`W).GWAh'N`19d:T`,OeR0O%@,m2_,/7C)EWW1br52,D7,1tE.XDTP@UJ:UFN*a'8$/`ePk[frf9'?mHhD,I[l"Hf%O
%$V6"=5q6O#d_bgB34.p6T8],<m:'r_[B8;;XI@([=4bBS#cLS_3mVLEUOK!@,/\;V2C)]:QJ69(JG<)&&md1oF\#&l^+IJ&-s[<8
%Yq1_j8NAA1!+oqK(uQ<7m-,ZN?kWp/X1&Z4Wq:<u+TZY@%2PfA%n=aV`Rle&)jTVEbSakZ2'pC$/BJ]j'o`m,%'*!mHN<&K6;Am!
%/q],i9M[uK]6R[K5EEV'PUWMVPQrF4!*79%'fATC8]DhG$^\[c:P9>;3Kf+Y/*GG-&Q-/:StYntiYOmo3D@]HU_qc9J0ZjuA`8VC
%W`gf?ocu_a-"`]G6KQ/p@bJH3)dO_O\#Klbh$f.W`-K?M<\q]LbNb^4/a7`0g="#^3WPuPb:[BFjH0Abr4.tkg]?'PS*VF2i4gc)
%p=5)!kRH>"-dNk4o&nhAs2`+FCB"6*b0/9la9WY_O_3f3YTVorP/pD!?pTLs3jBj_&K!m@JSFd2\q\LiK@d(CQn]VC2ad(]Ku"l#
%kTM;F7m,ZB*`](lG:8[\kWfS.^mIoDF!+2X8u(!?Zb6gT&C)S*j:DmihLPlOK36Yf"Oh+,BLl#kHc_/mT*49hAT0VMo*.O[W+qk'
%<J7*@=g:OjU)`6h>'I)APTq<I?]<,m>TO(^Z;,"tC.LnVY$ic<<^>)`NGn#`_EI*fdsPu$X"#J3/a<"`nn)"#a8.Xba<:+Y4U-PT
%/^/fZ_oG9<%^;bZk?&N%e"3,#0Lu8Mg;'fD=kA2rO?IaT3p=h$@H`l'Mba\saMM-YLDU.oX4?J%ju%^:8J;YU+NT!<>GJ&Vj'&hc
%NM1.s,`8ARf!>YIW,-*$(6#gj==pVE=sf#u6)`EOW`Q3/Zk4:Zi3[!:p0dlMdk\0s1$G;YAVD4e()c/=#`j_48Qrc6q!WknN>o>;
%eF5b(F+W@P5DE$-P_:Bg.uFKOP3+[^7(oV5C#`&/]&>TD.Pj,0:];Rqald-X\:/4ui7'Uc(9U&KpsBQu5h64BhN#^?JSEUFQN:]I
%"R)23DA2a!E:5^Y!R;#qnuB>I]g;oR'Z8Hh0Do"X'4;ZbnhugB8I<d>FaWNlFD)Bj\P#C>VOl-C_dYd47C6IRN.l9gc[*cXaL$Mc
%^!aP6lTHBC:o+ZgoFtCpD[U'@c:F9B5DPU7KNtG9#EenP74F_8'2(`TjISi!L:/VO-_=pJ@-TU;N/>E(Vr[TkKn%GRD4?JGb#c/T
%O$RkAgdO)]ke<q/*28gY/bl%iUEKKD@aqW!4pr7)0C1XM68f9<NGG%0AHrtX$XUf?cVcD8ek<%Q.<ui`e9TKFE<B@JSmXO9_ooFY
%=e,H;-,O?]g#`lZ'XhIF>DEdl+ZFgh?[Q8*0Fn4Gln26:Smus^F,#CUdPos,cj[dn;:V;Oo3d.XX1!QLAX=ps1B11HJr:g8*&L*Y
%>_JC0I/DmVlO0m)X'*;XK-LB#l;/4e92t\@_4;./'l@6N!ll0b28d$s#Y..oFcE?\;XuWL\=`$T3:kfC?%Gi16?trC?clDWhgsm3
%FS$]mUFOl9+VA7jH.0Q\d'T?Le6#to^T`Bc?i(]I&g0-5nA54PV8r7-j4\:5.k.U4QG+&`@eWe4OOl[\[Cdl_Ac8k+L0MS/c]@Q_
%`L)*ZdT3:]LC,73RN9:"3.Q\C(.l&a8sPBF2g:AY#Lp6)%P]p\?'O9.cL]1Ak)7,L</pdsI%&+r5k)cW)2;^B,D<tYBMRP8,(ddT
%HH,GI[`aR`Rml>0cpro;*&&!3T<"98QhVG,F)'0;*sc#5g-&IB3J"cH8<jMbjNrJ=2]Q>P:#q-EjaW!KN>YcO$sbSZ-9=P/VALWr
%c(_FWP=k_I;54\ROUA>PK2BDl)^=i1.'ou!,b\QY7mb2YJ<6fZd71=&VR<uQ%NgfFdg/Vp&"$n4WZGZl.:LMml?7&ZLEST0;b@JG
%K=SP]p@0#dH&&ti4Psgmc6!G&5SZ>KnD68I8W)$5!hb#3^rZP9[?<#E56!gR=G^KDo@$FN:,m!Rc'`'R!+i]Ka34(E_XsMsobb](
%_hM@D4o8@8PSlIC@8oYDl_46`PL1p^,1nhXoQK;F8!OE3MLfH#k5!2-R[1#Sa+Jb#s1<(TbthY.rsdEF5Kh2bX8e]Gr81I7mRGj'
%<1\Oihu]U*:=1C02+c[H^lgZ9fHmdS5d+,s`srB"JIImNQf<rA2Z0g_@CfBj6]r7t68['ja5`EXp`T5h,*E%57:=9WaZ_g&O<J7f
%-)4ETJ`X-cBLP#sj'QbV=-k*+1kf83(pH?`Ljo`%QqKo)Y@rhPXB*2cOUSpNV<420HK1,n49(/8@@NNJXu3Pp5=[mn#O-qa$R&V[
%FJ(Z"BIZN&)&8i(a-0Y=)j:3?f._P9r*@\Z6b*nA;'CHYbqK,8-P[ocgi*heLqmP`C+SLih!<OeZ`%pjUUOhc"B[]LZAN5<*XBpt
%-qn4/op_SU1U0nV0a(Seb1tC3%TK<?AD#J_G6C@ddTleROPDZYXdk#fZ=GdWF2Ne-@`E4Pc-id<GNAHJEQ8WrKQ`$IQpJ_VXdq_=
%r!9X[#6u\8"IOU0nnr^9!1H@oi)1_k`jJhJ5)1:oJ]S_1,qLc>=uIn7]bCck-0Plg!=4d4$:4VtafQcj6@D]HW(hm9'"gVY@_Q/X
%l@lWZ"smYkIC9K@1tI8inA@XK4UuhlkQPcJ7p(ti'!^i>XLoL8:f3,a?lRAUgk'!PKA>=h]!oQ@1'qP)d8J)=].^6#ED_c)&P$O!
%DR;qoKd]uDY0jXN!0kLM6!=`m7:N\,ZfnQ7j\lQh>.ni$E^K<,JCH$q]3u$M?rf+HV+!Yp!NsE$WVe5nV3f&RUMD"P)Ee%s(Q70g
%RDichGHQ9%N\^-L7rZ,lhJ9I"l5_0jf2+.E<<ke>Xt])XUip/!WlR!D6RUI:G'%L.9XD<Z\.Y=u8eS::-V;Ti)4#Q@."3:+Mrr.^
%a<8441n;^4N@$-S^kA9$Z,#1jOXPELJs7*Yb'E==D)R:4_#\5@>QAQ:9!M%QPCc_,Q?S)&h?fgM+t_EY"4MetN/9u':nl,@[g\dP
%PX0tD.J+;KU8isD6rt0JNb3ef[`HGJJib%!H;>7(3!2iZh($EMHQ'nm^gsck@mEZ8?)[i@fG*EkmE4_qSF`$,MAp$G,Zq)%H^Zis
%)A]mB/.3g%6)#cXlN4%M>@?=LFc)'84aV3tc>]-KB'"lR'`-o0GHYE6P/iQ"MYNM/r+P@+/gL`;;Ni^k77nYL$W&St6?9(lPGX!b
%81N?pEP786rK@0Am/)H%,(VaqD*MZ)gAip@H"lsrQc==\nX\1M+AHZW4/WH-^htVl\gph_/X$mtK8h>sUH,]C4W71$k%64(0h>t`
%5<.$\NE)3S"sR=Q5cXoX&/chs9?\ps1Aif@LVQk(E:K)gQ;qom^Frn57A:4Wn]4?WY:;5VKC@$b!Z$@7Q#i2/'WNb8Y`dcO#a!OI
%@+Mh5@H2=hRB4ktfHS_q!%f]P5SfO`]1QEn"\GW5!\_qCBB]Z*aqeUnYfL+b8-kV<N.XJa<'XTa%K\=MhpV-W-IuX0%t1YPb)r"_
%Ld@p\W)0S0OXe"[!d!L8-R;A!6dV&WfWgiO)8&WV:Bd7Uf[;tiC'(W:0lBgS,!Pgm,[\$kNO)1t:;E'(pZ'J3ng6!Od$C!*RUciX
%@sM_[K0!A)\O7sIcXQ,J%+8+M#XP&KeJ3q6*6cZ5PASLH3K*]%S[u`j8^Qh$^g4bC=bBWnL/S-&nh5j=2TYru!l_;kW^RN>Qb'Z%
%=p&/4L4_Jg>EY:8>3E%?9cK=o99;>%>o@Ss:#k>fI2m*X;=>iCh:u]]aI5db#%i-HMMIL.3_,3ZDt>$fEEsGPbnRj:YaLh7<rpQI
%T,#Z*93>nm(oo_]JS>i&@pEkRR3c[)&/EC)b*IUUgF@(O"qFC5or8j>[o6<f6WI/tbb8>HfMp0h(-VkHgnR7\.F]X'1nS96/m649
%bnh5U<3k`<Z_OfcRi&'(HV4?LD-t^i28$RQ%UBg[(hp"3IOD@sBGI!q;@u@=l?.?k1&0/#KKrp%Usac;.CF_pP795fm.j8gi__A:
%5k0_\oR_V"%[c!"(3o4*J8.PimX#>')/]aq^+t4tbTNi&cc"=*3*F=bQ.0mY&.,oJ>(Hu@0I$0P5`=\,aF]NS>ut;JWHPa.,c&/+
%C0WgJF'XDD)?<m`>$MXX_b"SaD$*U:FA.i<Cud1"J;*7KfW6;G<WTe.!(2@B)jh;AqA1k.)F04*U%@E@/R?2K8]Gj-J6!*qV2;5b
%^pGN%#!](U*_o0SO?X)]"i.'>R(88cg;#,==ogmS0];[B"'MZ!0EP3&"rQA+A037$,`P$#W#4Q"W/&aUlKoE*a`TFTLqHk8adc;$
%YVC%_FZfgal9;#7FKj1B5TZL^#8$j,Wb'W\]fhTP<_\he0_e+(/.<B3:5t`,%OMVn#cnq&W[]G6J[t"Z.Ha5d&BLPm>HQ&-_b?dr
%l1$G:Ri&_Ol0/J3SEKu+$-%qS,R#9B76W-@m06pH]<A7)h688;jecgVB`HGc8S,gUG+Cc4%l=(@Pf#dPjcUP$aUsnGF_CtGb&jB#
%ot\Z[[PiZ8kOmf9V3*&kApm^S$os1+ij"#mrXE#Rf7WRTeC-0Rgdo_4qfF0Y1L'@7#sjl.V$IkBKi)JW<$B5jMCYfqI>qWmRVt:7
%*DPR5@[>`N!S)j&hIdc(dYSEu9Vg_np(/^)C*m$(eIRgMZ6])i(fbKV1rm.YbSh/!n!-7Lc?cL7b!s<8e@[jDjP1Gdi!IL;+FThB
%eH08MLep#SqHt^(FSsMX`sVO[ZQG]W!QaUn!=('B5#L]?TrutobVB</6Yg_k#&8?[Adm>:Wn(ZG:Cu-`C:fSg"kAq>WpYS[5fpmo
%C48I:Sg@YjZdhSLfMTs!"<gm?'6D9;Tg`"''!E9'H62!HD3;$C#/K8Xpe\ARZ'm%(!hck5E8'61JQnK3rof1&I<kB8HN>Ufde*pL
%"5/En7=!(B8`t])f!QGqQpUTWd@NXAWnrt>qiROOLIDPtL0!kbf6DG;\e>o6=.O>E?oJ/2`5-SL/7B*'-QT?%UoFIfd^C:n\q]6<
%)mcfV6P>^gH6fGs*i:QCr3E/e5%1X0;(/$)d_X<H&qmL*3EIPo,a!$u(DS?;c+lgp\fB-+.CCM#<DX!Mfhd)^%Y7(\ArC82bR@e_
%Ak'YU9OI"0pq[X.&Z:(kHN1#q4b?fSCJl"*Dp5g5+K1ddK5/M'Cm\W@l(LYr&Wd^<Mhs8'#>A&j/l7E\"OYjSK.JG40OB[#7)/U\
%)'_R?l/<b%V\-3)Z+KADnp(fUE86P0_4=(q%F1i'MK1(4ZEPiM4tSC+X=?,F<3/K`366)D-Au=&U0X9s#+WL50pgt)KHkZYNj!lu
%*1UN7.AOFu:Rr'4<SP@DaDh)LX(*3HDWp-]2U-,+_c)*W%m3iKAL1&Ri'I^<JDFA]YOQUFNtK/4s%It*NR(:SGUh.+@:":\P%S3n
%-2Z/T64[Nc<]BVKGBFm9@M-n@*_:SlK'["0/0u"d'MFPP1s6l@1kBF>bN]Kpq7XR4X2-uIOn`RjDY&$FAcSo#F4CVl_?/q1Gc07H
%E>L>EVLhK[MuAsZl?ttPcV<VX]dSaXCfa7q8&mOK&g=cPe!26k#2"ot!2fkhFJMK:FX^f_#f,Bt?KtB0@6UXP5_bQlM-sPc(YOE@
%V/!^iT[]L+Y`^_Qg4hQ;&tFtj))IiDJg`RbCG6uXj6DmH`@4l7[`oR6'c@7ZQ2S3ROE`Hr9/4oq&@V\.bO2N@:q1Jq1g_snhVoYI
%jtY'i13A0I(r8Uroje,WE('<]d^kg.Pt]C<MBP/=F?AOrG9(5J6M?-c"IVo,L;>0j+C7`=2h@c-kUiN$ga0%Z[L]#m8&B`Z1'3;=
%>92$L3e5VfqUVJW1MEYTJJhetXX*I8W"h[IY]7bo9p24nrMBQu?l;"74>fCYDG2,cAOOi/_l%+.&hXFuM?ZiDW"V#&'o#qD1]TB+
%QMJau1P3HAgIKNk7^"*0mGA#p-PT.RDkHuBna0llcJ]F<,:nALOT]__WD]Z(Q]6:Gct/:3&pSZNk$MGf$G]qYQ;aq4L_W2HojLKs
%Jd3JtMRO99EG3(Lq%[Wa$h$<(Rl;Z8*LY\O&FBDCA0^e-\4mGs'VAm4bQlePH1(oA#\n3i<&pRWfW]:qDjF@;R*OVBJm)08HcGu'
%P3`lFD7:U-02PLO0:6<nn6tZ?50"L1nIFQ$?M<a\AQIRq@T[[6)ckMk(i@F%j?X)/5:ik%:4k/5W_W;[bj%>_j_a^pNXOGs8P#5#
%9[Wpfh%>RpIgj!(RnogsbspK-CJn4gJ8O,./b,m:lSk57Kr6I_YKf'NX;,,^\&U&ac.Ok['dP;dDTpjqM%Hs$;Df]gW+nW40Xl2A
%BflbBV,7LBB/=.:j(W,ekOdmV<fjqs\6LIY7p.QJU;6^7fiGQU55%S[YaL?@W>d]*KK19obDRPSpgN'n6*si!9a0;fEO"UeD8DpU
%l13!I^NEu)<c0(YN/JBT"W5JGeJ?969i*'1&];a"Vu1S1b>A)OlA.IkZWt--h1iH9&VIkrA-Wl?8s3IkQ'W>!9<A^!5P)oc"r5jA
%Qp/;VD3QO^TOhHkr6Umej9+fc%1u#hrREoPdHq;`U[DJKDtHNCSW'8[MH%a"\W`D&5GY7UJ+HGMB8!NZ">Z*hVg&*Zr^A#\QkUrI
%)#6Woa;=asZ`?@78=a_gCCCG@3`'R+iqoKY`LRIb11P8H45\^LgoD5_BGSC3RRsIgh1J6sTr_#V2Og0FOm=e0899H9@XCEoSL+(c
%-/&Egm<p)/V2I1nk.H`T;gK-&(PaM+]B&WQ8'+_tfH53d"ZN"'fqbeX&ms:FJ4NX!1NFk1fsV[<UkJ"%kTo@13_*.Nfa#(m]'5r1
%o7puTo@.lL8eA!_VJdp*\p3E?F>%1Kgeb[g0\T.\0N?'ul3Y?=:i+o/S"SnE%ZE&5^1g^-,`l(:2G>kL(hU4g!nAiBOqh`773%,6
%gg7@hrr%)OWrkM;lq9A4NEQ4g=XYW"Wm4?cA6Rga&<=MEDah:t0H:p8W!YB%HK[R<LfWCe2cb06V5amU[ADO7W0$C1PtZD=Q:<4*
%YP"16c\*](K9U(K9VSTg(1VEYf3RHcVCa(,Un8he18U7l+s;&EN/aQrk_D=&ML'VLGZ5'Q!J*R00e.ZH@1K$P!!Qt[ZZel1M+',%
%+RM;l=-b2]oc)&>C(g`p(;1q00lO]Vgl&aO(1>TnShJ78/(J#?1[9)%qMha-;/KMO1Wa;XfiV;LIAkk/'%!0/'!3`@nE:8'N&U[#
%]P[b9L#*dZZZsnd!HMgX?k=mqeTGT>1Qqri(!lb,G6/M+7Jn(j'-k5G,tsJ?%>b'.HfFd5ZZ]oNT1m-+fIF3/_c.8(W9`4nM-<F)
%-uH(7a_N4WY,7%2h'crpdW3#u\u6gP_pb]EEg]CbNp_(e-7LYE\B3#rZXU36\G.X%$nrrZ;4OeH9)uKse=F+R*1\K#P8c-KBFsKE
%!.\Fj.O@6H"JgA&8iG"!`Ec<O-m]aH@3Eic@%&[::+1"r*ADZf2b`Y6G:h(Z_t#7NPdFskV"<*DZOW8VAm$m"#Nk5bDD\%e>"Z`C
%/S'rZY`;q2'$.YA!)58dU)V;&6agD=U/$/Y#Ff%>nLRipK!_IN.;+ot=KJ<S_K]1!)f-s6d7c\j:p\*&jB)NmMVA:4mU;e78?IDg
%k8`S1(f_0\\?1U%[WOK%WIpWjE)[=kG?2C%M5+s(H@FSskU;&`/dm&Z4Y;5YgY)j'#S8*Pm?Z[LVgG2AZcOa3ZA#'W"j'Z8$uRY\
%P]u(%p6JR]ddj=Sk6N#C;pYgtbcP.]O=Mnj/4k/bCGcbOKl]AJ=1)_hoYc;pHW=6;rZ)p(RTEqYdtRZI8k'ieSC,kX<9W,WU@.XR
%b6iFL8H@!u[;$nRm<8aD>m%%9O1@YY_+d+Djb,VeZ;Lh^bP961Utrs"/hk],b3k1=##\:)R=fU;/WW;a^&,(1$T.%aKZdOFOWm'6
%rC2r8do)*1pf>[)H]K*u!cX6eIY&=NiCTq#e(2u>$8DS*(@-nSTZma6)S>N8Om+Ga$QD"Q+DPG;`=tj^&:g2Xi-MPYW[HM(r#)]6
%f.l)5WilSk[kpf^bQ'W)X:7>HJrEmbQJE$d'"u\ijW0s,l*8Sop/+f"U98CuDR80iTnlTIO1+f0SA#2@LhKdEPp>Sp2/ru.!j!)N
%Wcmeb&Al@YbE_jE;3eJ3dp'%T8DA83MS#l03llI%TZAdoqQ]U,J9Ok3:oms4[+p)*8CBPL96RHq%"4mNYN2c@('+<$\;^;o=_'dh
%/V#VcQSu(Zk0S\mCRnfB99c^qFYTL"X]DAGJUpl&/K$1sBj_,P/C*<?1(9l`>SK>MA`tF><LlJg4ui'l=JRA=p>\sfi2iRnG8)JE
%bucoPdYc":<3;piTP-N6bF!>_P_MPac'E"4TPV/MAOZZ/6O1nfXtO$XOG"[J--2hL8l_X02MB9jN8Len.81-=RO/38mh6@VJ/"Ig
%]tcfojBY`@kfPRk!<-bL!"(:SB3E>@I\qO_R9'8Q.7%QXAU&h7Fu]Ar4ee]J(-?gtIp5fc3bUqmQ680^c7"OgN!dBn!RQ5F,l8K3
%l,e#BOPh6q3P_"`OQiWoH%=Q0?)"^MVK<#`!h565^(M(+)V;?9lD'Rj3'L*'D%'Ilbt0>*9CN@S_V7JHiXJ)GU3I;)cUkttLcK9i
%1u.oZ214N*\^c\JYtn6O&pc5aV5`4MW<_`m^n-b>Fe<QS&;-4P@o?HJh4T,HF_n.Q=Lfe<.01Xni4@m!+F,P.>IRTE=;OuITV^aB
%Z.)kU_hMqGm98ukWNN\Yd\Qr!YA]TZdWjQrKn(\KILqMa)glS#ndJ*uap)&ROf3)r;3JqXPpUe0[O)YX0K?J)$Qh_hak);N4:+&Y
%P(a@AH]&cCWlDsZ>^c"FGkT</UU)X+7KHeb_rE"ZW%D`_N1fGY@dn07.g*]skZGr,#F\YH"4h@kdY@O6P?rAJIjE@ak)O08Sft6o
%p>lSLBF7q/$Lq.W7R?Q("6t/?\G.;_qXC,!C'4W3(0Y>#b^%0)M2Ij<VE,4#aqU6O"k5kIkcBR4W+a'U_:_nQ<Dh_RjP34&c4.0]
%qs_MXTUg\(;\/36XFV`AHT8XaQq/bSQc9rg'IBl$bS92)1CNb4oMn")C`-e3"/Leu$Y\YCWB<o_3dCi=Ll1U'c'2#c$CF,0h2OKI
%(JE!#W$)#/g7km8JY[#B*It<1UcB_-k,'<k"+utfIl,W:_2Z[%aj?n2]f<]YJ[%`nQ>VIlMj&8BMMJ'k5MMr!e]+9"WMY(.iou)%
%2DRr408AHX278/enM+um+52fcY5lbO-5_jJ5UEM3,1`*rm8:acZe27\QejmD$i7K.mW6*O!(e9lH:n:6GB&H`'cECK?.(2B6A#MA
%+[EN@!%b\`XXXSi'hKUG]RE]/+?P,AG@Hup$2Q`i<0$#!`oS?-"!sb+2]OlY`aN`oWCdphJCTm5-p%Y%4Ff&25hF7#+XO6)*,5'0
%fS6/!/Urr)#FJsZTHU1d=*[r]Z41;I(^>P5Hc(H5(/a8t[)+eE60e*1>SCkH++=I1@OX??$BG[dE.X,<eg*H@'3rBmW@c=GdK2%:
%A2Hq-!-CC-?9eo"7#gMEOY0>N7a.,Z/?oc*h6V?27hj8aJF<(<_^7<:Aqd3ArWGY1f[>DI?n:?:2mIi^=JGM,&d^m.BIX3u-3.)5
%#VmSS+i7nG(pF8u.k!%3khJ"qn03KP(L*?R#W=`RNr[so1ne1i'=X4Fj4iWm!a+&NP=-"M'uLJi4q).<dHjSZ)qduE`^o_.p(@1&
%<XmG(=U4#oThEAt0eNU;H7&,ic:H1sJ?Va[/BYK1"mY*M"ir2I_X0Zf\IFB#\>h0=aGc(Dk!B34?H%;eq$/-tQ(GHY0OfU`=bEhs
%=gOX9R>JJ^Ecr*9UJr@J&i:]W7FUDiEN=*e2`j&B,,_=Djm%h^hJ:ha`0BUJe[$:3@oG@I>h7>lLbn#GRBss)&WFpm[!MU(*1hWA
%3N_r[kkPHN5kZ?ni!C<i4"W^D2Ws-M$L&>[j@M"bcFKU^'^j`!)N2gSL]kumem+I7:9.P`#:Fh4_dp,<c8[M.bppgdV?b646LI$^
%?1R2N8@T<)Urh"aV@j)dIY&q.=jmOJd-R@J$kR\0K);f-3et;M]WBY5ODU<U3^\;EK_).B1plA#h:GM?r)nt4^:'i)E?jD>WWatE
%2nf83oEE6VG]8/!J3ne64gc*J[DmEj0be$Y?*cO3a::o*AmRjT!<rXcm*P!ad:emX]mKi9LH.W5^>OeuELo1X2ZQ;rkoXtKI@HS+
%AsLVr]4Smp;OGB%!pr2g15KaV+&6rQ%^$MC$[&;hro.!,P>4r:Z.1V/;f3)J/d3Z>n+^k0'kX?AWm]=P"LD<SH0=JOSj^K7YA@ti
%%S?5J"k'^^O3l1c("_4M_-Ds"B$60r78M%]m]PkYrRn[24DVBZ%/m@]RO/$pRTiMlppf$1oP>44>"2hEo*baW2$t6V67+ZspY5SD
%WO4F`V)4;rOg<+fQH@.>Dl]7aKSmt:a8,uB_8uT6EO:Zti+/].OW@LLX?j?=J4<A0-5n1tX_#lO(hlObiDklE@+]2Yc@[9:UXJrA
%f`4M7J.VPr!#uo\6Vt'a$thEu/s7CY523tZ8k-GOGpXCTZ5!+,o*o?jaeGuG'[@+BM=O,!I&oZV&H1SEif&LuISP9b.P*A#&OUmO
%Up;M12?!U_g?F-JO0S%*!2F\=<1#t9;>U"O`e[Bc3ArO+Fr/(id`hqc;XN1slQMb,XAju*5dTgXTXhG^d-cVUZ[4f6kj&3<PZ+d2
%epQl\0+XZPA'ufCnc)!Wq5EG0Lf4NphT'Zh15snKLUR!bP[p@Z5aq&<p'O=X5]6W5MOGn,?N,ALq$8n!\HD%594AIeEC>VFl?iUJ
%aMT`32[#:iTJgKm:mWOW.5<WlkaG-\*?hTh4RLD*KHl@r/KZJl`WtOuLoAOr"u^iSZR\OH4nf5gH)`+foR#qRqT8L5A-*$"l]W'c
%oY4b_`5T%mPnj8dSYB*Rf)ceKPDWO<O.b%WMl>:O."NZ:gAnPCLq9iQ".<-M9](#'OH;>S'8QMab+,:RATQhRc*WE4Z\/J0p"9]P
%+B]!AqL[DPr,VBmTY%W,)(Y$''JFP9A(\I-ng'L\iL4F0U($&$e/0FB9UESYd43&H)bLT]dYM@#%r#utcDhR$W,Ws\7F8q6eUITB
%FYZL]?oKC9+c`d5#rJ+U%Sj3.BIXfm)TBk[.\&aN=b?E,>00Sdi+FCC^8>Sg8F`'Wd&3.oJP*![R18=_MIh*bpSKu6As>Yj1c"["
%BE<$bo9t!8Re2q>2?2t$Wq$Q-XJ?[c;Duk:*XpOm==*PeVT?[2C$k3Fmd!;R.n(+k%/,QePnd^h5M^+q_SSSp/YZ@"[5<:Eo)\1-
%?`?t&pF7\u%W/8V$`nV*!ESfA:o?._P."Zm58`9Db:ig*qH=B?.]9Z<lG1]3/=n`P.OA/Ug^8uV:^..SrD:J6aHA1HnV/P.R`)R^
%,UK%J4c"tk2]D4mVgAO`.if2Lg(,FqLOeM8JX1ihMJFgJ\101\#IL>mRL#"QS?\9'IANaSD/0JiC]s:u=H2gc7b)r=h*e-kI>G_q
%MR(X%,)Th.s)7A^H?Hj*j03_.q@DaX81[$nH+uJq6D>kf[Y97:rQp'[8T]/H]JS8Wai^g5Wi@en>i4CR;[a3[PhZ6FSl8n[>ISkq
%QPq_43XdQVE?F0ABah&([kEA5!VrS`<muqj"SE*ee2*Qr\I1/(B8T"USrGTlP8:jk5rrNBTG&5P(1;#QM/<ccnoRm$Y+RTRS7E@e
%'P\"(D^\aKI/Kd;>jeS79fs`PSX'=NWbqfBcN:(FRS*W4PY.#^)Z292I5jB:NP4dX!1Ea&o/+!g-8t,\l92(cS'7/u[)ptR2,TMH
%,bt6h%or"DO!Uq=8sR`Ob7.%4T&0C>FYi02r\WAOJ].bMJZD2^/WPI'T16:@I6HV^lO@M.Xi4omWaY<.HSCPHAG>FNSjpqnEKlpf
%Ln\ZeON9pmA&U4#@YrQ6&2J,t*:YMjSUR![4hg^"$L75PW4cD-#IDS&<bdf9QoI!n)hJKcF\'(<MEI`p_Q:#]hY9'(+HE3$_jAZC
%GpHk=D0hA14"O4go.r*ah*Pe5CBNTD2hD'3&[I@Xa)P#[+/gG>)4\>MONis-R':!nD2b4<_snWl_n[MO=f>'4j/>d5CKJN"l';$S
%ZmDQbSSuTA,l;DBU\o^*au-qZF5+4S4>On0`!K5djJ;Q7`1=HLopsC1^<g#,[NbU:.JgC-F_7dG\S]9H.o:7J/=g*XAMLB%,,YnG
%S7MFgfA8l&^Q+Z1Bk%F`-uW>E3$@;qO\'_KBUej3+-H!?JOonI?83pkfsO?d&gM)q.6s)_#$@*?E@pC/kWc\0+PAI[a<#a'A4M98
%1LlRGp<#O?W]X,ce#?kN_sQHL?rp(#P%"(#d7oJb/<KXIN<dC/-A+kT84e%_MZIZ>.1j]r&_rPogkANsj0\K@1C)!k*^dn1<=ia$
%mXnP7hIdcC/+nuB[-u3iBZ;h5(sY0IDf4o$dU`FD[MlDoAC:HUi9)D^IG)tnFUW!=)IBtL.F.=^3Ii?`q0I03,*H$Xg'Jt4j<;ZM
%9H%mQE_g+fYC(5E()9/DETC$F1P;)Zs!j>dV)XVS7KL011^i^i_[c*ejFcu.HsT(Q:]^5%ggGY1XglEK+A6D"M>j<Y.\uqS:omC%
%@Dk"8diLaeYo2c0_HMI(pj%]4j#=T(8RgS4ga;2@_Tb"UMbK4ErU(-DH`oNl!8sNXeoc-GLWIOr"C7Y.Ef%+.G4J2Pp?jd%BF7-(
%e>#$<=c;o]g.%$E7>PU"RfMY`2Xi=Hq+r_A\S4[EE7TuA#E\=)#qkt(+a]phRYt8["8,e-j?^=jP/?tfrYTbRs#^kc#L/]%B\#0:
%#L/]%B\*)IZfYo%=_$-08YR3tDE;JE:H?R_X!]?rXBn8RS8Xe;/+0sEWWlrEDM^UZUsPeo#g`a(R0Z=).Q)!.J"$W='!bY0Rmt\m
%3D.BAFH;?kd'ka]R"7c'#2s:Z.WUR5DL.+`.(d\WqI&9G@13bk2VuRgT"cU[-KkLlaDA2F&45^>b64#p70`h%Vnfdu5,.`,D?Yq#
%<TX=:"-K]q>%*19#HNM5!.&E.X?d_8XTUdJQ]4h_[(u=!hZBpm]$[1>g?*;/VL&MLW/FqE_O>`/<g@Fhg(c0H#eD3+iI,=BW&F.@
%]_ss>W/])57Q#a7DJ^Bij[?R#d0m*";Ba*SaHHHRjX:E9,kDFPNmn(l$E+.0oLRrQoZH?hBb/\mptb[/TcM>DW.445kLjK(UP2R-
%E:,Xd8`0Zk3oJ?LA%\fqWqI?#-0dsWY-mXkVD&L!>NJ%6[\@H:>L[$s=GX@fj"d`LJ]k\?J./"o6uW%T_;\#I%DlI![&jEb<nPfV
%eS]fV\INc;oa"\=JC"Z-2Nf07eZ6'N,]$Ubm:;,6^roTC%Lub`e8B%lT=U1l9guP75uc&.S*")Ig9<g]_SOoO4G*nB7?*$'0CM\s
%lbLeZ/DHb9S'1skb'&";Cc&O=kV'ni%!tDK--a[Z4W)"9gW3sr2eQ8'1,]Q&&NBk1M/?4=4\`IY3b^-_Y6!&b`p"eI!3%cl$[MVo
%J7[J`jrE;IKH=O/I>]4;bHu)e@GI($1mMYXd3tfq7(Str&[c:G>a0IT$j?0DmhX5[A'5!J5&ZHMapl3=_nSZ<WXN:lH(Q=jmX5ln
%ksZ*Xlcg4l>mPb+p1,p;4PcfleUbAO?DuBo?T>*==:K!g^pm1gE=Em9G2RcY+5GHFUtr%?dFOgj;1K]U!k@gNA+gT=OiHPL`OfU2
%!)n_GYV5$<%r%Ofc69]X!8Sa]<4/lm_h4]22LjCm*M@Iu3N5l7_BCl:FY'LHBZ-e,8((Og*Cs+O]`>$-j[UN2NI.jM[Q&<]lSr7"
%9'<%UleH1Q6knOpQud6M5,MXk=4Ns>p16a?C)A'$Ii@F/G,t\"\,a.t>_uG]qGdu2f50t<)))3W/c\+*i=m9**l-O#r#4q.*r!r+
%8\P"iIri;tq2=Uqm4GI@baE\UWIFtgq!BmV)he-IR<CX;[7lE@3:CfYPeb)6gKq^>d#'u+Pms337N:B7D)(aOI8i"tg>JJY+2Clu
%Zpob/3W(L4][>5H[DXll>u32MF[)E3*Godk`Ur,T!77PN#bnj@^j24ZH85qU.bR%g.09RpAH^'S6Bc@]SBeEQSj%J%7Z7]63nnsL
%n4:bLK!iO[X[V72oW/7nY?+N,TRjYh6)3K\p'W;?Cl95tYmt?WD,#-q2ir2F^ta="JEMe!E/eNSLl8U:^Hj$?TDaA+hF>&IZX5C/
%#4Pe'QiAC2,kt*3Zf+GYXnQ$DfEe$FD6Z`c:<u3JJ^#jidc1<H56W!l35ek)%3D`B7dr#A"`."Pb*H2G\aY\!4O7HP8pI/"XXo\$
%N!uKn91,ht[(m#p0Ht>e[crGVKX$(3K"l"(3]QIs\)Zc7Xo"7EEOcVpD<ElBiJr*/!"mXp'VUs#b=Q*O,[69ZY\nGs#g6pUn(V7?
%cBeOc_,+\@qLdDQUZoRac'(MC!*`gI'si9$80HSO;`Schfq?n0T4'b5!,N=QL0fA8M6G,6QH^`La9Y$E7)obAQ"]d?Jd,u[#3^LK
%j9aSj!8>PhbG\1_U-TNr&Kk1a!&*ZP`KM*%3OME;68l`B,R_DJ`<'H5rlKPS=I')p#MR64h?Q)-%RHWQW=sIP.!B_dAO&qCZZ1Zk
%eek%CR^_]b6X:2t&tM,djC\.t'Qe'Ko5*mdL>Wa"YsSDhqs\M:+pF?NS)O+lMD[^Y"!FqU\<)X71j1@kHCe/Q*(cV@i:Q>7`Js@9
%?!F+U*CVX>A]Ru.Rq(*Pd73*)X<Y2%d0RT%8'It/CG4t5`2QrCj/)j9<=&km56fJODCbkM8\?+4R7i&*`@N/r*bPhKr%k':pqn_u
%A>*>".hTD\9L$43%)4>S8U\BoB+\(Zl$Ak?S%VC)++2^eqb>-anHCruAS3HY2C^KMGf*3m#]0$k=M3(\kNHuu854YC5dlL*DohmD
%c+`J\6'_p<2N"e:'up>=jM!LS@nWM5Ve9AGW\jGA4$CRaX6T511FL#<0>uH8Z%5:aT+S/Y'lR1^&+q')/r)m,ZKEs$"(T%rEu-k%
%[geA*=RqO+'t"W%\O3Aj'@u:VVBR4<R+Xe#6uAQfB8-sQG@^o*!4jj3GC"p+gG\=._(L<U_3L=='[e/g0enn3+un1l?%ZQ`N1pF-
%ptILVbD^IGnr<4[>mG\l/+!qnJ.])E0;,dfVDX!^PhseJ?$7-PV.nDK.X(N?^"#9,A<;@'S2U+Mh.ag8ZY_@j<,aY`7<92dciWD;
%:3?/`%EkS,=ko(lbjXt*N=397q"1>l3V>"Wr.:g(bJ'$a1pm%@^#AS6X")H+X.'590@$C7+"a#kfo*IlF"9m/\-#sHF_$//4?.Q"
%]h[D;1,T&^hB3=OIh1?GCEVp(]abjo]641eVGXut`]]uMl]GitmaZcK7=PN)@0ghKHpHnRd'iMp.T/.r1mi]r"!J-"0sF"3"sES#
%GaHsH%IcB%f,_h.1bBM7F*QG%!QgPa)1]H\6-5&Y%eZH2GsdiQLD@,NQ5bP7(ioSZ?!SZo+C@"BA5a"a/%]t$\#*.UnJ)M.ZVO6L
%b0l5UUeWbN0NY,.9DPub)*?=2)d3Sbd=A6bO,KCME8YQ.OdKVP8.>r3-CM57A%ljT2qR;W#N1`i4D.7_f'0T2)#u*:fH*`rc's>:
%P^@hn9`g,-`]`i$3@QKpSW*(*(j8P;F4kZ0,&[X@7X^R7Sk[p2!/#0E&-/6V<tO?'8o/dN>**Uu[D"G/<6\:-?&bTrJm1%f`i.K'
%VDi3D<PAo(E:jerKBlP3,a!X7H[,6<_dZg>-mOG[I,f<JhpRRgk98MX$Xf>;#``b0m4_]42R&kdXL@+^M_d*GjI6iK#Zri=jb>Hr
%AhK_:YKs_&RYLC.GFVE`:gqK\?n5MQ#*jm>VlV,HZ.p@1OGk8kRK8+=e1-/[Ur.1ul'eKPHbmdnHnh^+5,jDX-bQO*\56NN`86[e
%f0M$RUYRFW8P*f<[UMi>O7Hm`AJ*K">,5;pfC<JOLSEkb3kZ?Ebp5J-_,r^\#`@Cdk)S=MdoM.hPX]ibC:7rt16F+ucQIb?ibT6n
%)WsqRCK!>.:tRWNm9]P'R"cup]L*E'JnlDMKR^,+)KMn3iX1hNfE2OM-$u,GY\j>][X_Re3%MghNO*KCFHq1+F]e(XTNjWK"H5f)
%qWI2`#]a@W60uu\IKH<E+gNNJd'4gl2fcGCZ'Ps/8\a[@,P+gm\BAF3JJ8VOO@9@Ier2S-J\.pu98]>epT_'m[E"Dg\,hQ:<_>Vg
%*LLW49f=+H'-'-dEl&8ke'QrJ#2s[g/j5fAk&^f*<5u_VVb,Di.PP6Bp*A:/AJ0e5!=WR)Wuq7NFB_8OZit@fTR/N2ON`3&Q/Lk6
%e[dVX@IXFDe2Z2?pJcEXNBD`>V`:6@OI&%\nd`/g4M@X8eZpF9bLJnn7BQ`c$Yo9TNe3u`*epqO(#[^j$6;Zel1qOs)VY[D%@Ggr
%;Aa<ii-*kD+JoZ1aS7qX9MMs.1,OWbcLu5\Sb,7n.-ssE\_O-.bHNrg'CHue+>gZtr@j`TO1\g^b8p`KS`DbhOLth^JTQFs+)"^8
%).I9RC7m@m+2a?Nho,5V<3pVT(:>jd\WWE<qqbrV.ZISR7m8bh&(#B!Ur4Y2k'2Scmu%MK5%Ed$Vi:h>,hou<Up$B=.mNkiV'tEK
%A,bR%dNX([cB6q$\!a)95k$JhfnP%oT3c-8D"Gk)._Mte"c#NS)dYPDc6\ld9^+b=;j%ArCifA69,D6_Sq1TeJ_,?e7oi).oK'X$
%TJ?qsj"-n@j!k9l/@cK#;V(^;L+8IG0]#J('G-P`JR,>.W@c#4"IQc%Z_/5I2&c``dnE8sPIIt;"qusr\>]no5H6C1c.Q%282b,;
%+F2L;P@b_SL??110%D<$&`(>:X>jq"4SPEJdW87#fShCq<UMgF1O<2Ub/^`X.pkP]>Y\rojl`T@@Bc'),G0?V>%]Ks&#t"3C6FXd
%#Q(.A?@hs8?[^#YB0<*hKna.CciL2tfQUI9Y/p9n#@`TB#-"Y_5mmEl'UF0Lm"oIdBR_%krh)6GU@-:S1pg!B;Im8?HF#T"_K;A_
%@G7sHoboERfoh4P4a\aWk"mo)ZEV4&iLkK'Y2W!n)SQ>jWV"H^q.5]L)'E!\J=JG#.Ygg9V/o9[HXq?WN5DBpAbPj1`[BcthU7_s
%jK@ucChlt_;-n8`1d9fOHRVRV'QNdiR9?><W?A@gEa3tBr9eAiX&`;3?3<d4@ZW"Nj$N?+)5\/*%[4<Ef6Ml[Nm/>/8t9>A$DYP2
%[lPY1f9W7bC*6HRpH0;/Wbbt"G07!u\1[C4%-0muE)=%F8C\?1fGf:DDh4UVK,ukeP'&D)-VlWLf69=oVE:$sEf(<I\r*bFcJ'A?
%h(UVV$rdN,Q5OH`ZeCPu1)LM1`Vd?*V@9OO*oKRn>j#)V3&>Mk:f?DGisKX6*837CEK;?`<@jh'cLsH(@4pT!gHCfJ!EOds!X0k!
%1(E/qVUOT.$/3rt<HB1)Sn1QHr,k]%+uV4ZZ"R6N!#%EPVHE4@f:7)%CR=UT)B`CRbKCU!&g04BUc8)h#d#U_YYH2m)_'Ek(O$!o
%0*>;VSLoh7'3n_4IL[?hHAiCo5[1ESd=Lf;=R1)I61BduWI)p*RA:;\gah(2]HZYtL<#,G[`Wo%fUrG`o[;20EKc]E)JXS+i7(pj
%U('"&1"H6b-^,Hh/(hN.Rs,2+K+Y#FWlD%$\"5/=HqS2F46EPW;LEtK/H;`=i).+G5'CnCR(+e$N[0gOOjnIWbXNmX;`g-Z_+]Pr
%ak:YZGo)DtmsY=Yi*3rKK$.V<lY,p1U=IrS4OFiZSkIK'[10aVh9tsN@ZIe'UTl\MHg8nR6%%6(<i>4=T"8Pc7A]LcV9lU0qR!de
%+3"I#W(Ihh;>g2LW`7D<2!Ynu6McX<C2a0d,SA-L9ZBQh>>N[FjRRVhI>6md16i]sW8]nL;^GCGZ"L?H#Xi0`K<^h,ICY=I#MB-M
%]nj!]$]p(%Of.^d/d_kW#pKM=<0k5['%\:`Y-C(!4ZQuOM!Lduf!d(`#:c>mRJJ2HdpOW2I+]aNkR6S"9atqA72Q).Cs>B?Q"q_s
%H;D\PH5q#`4^c4rGM"EB4$&nLdD_ek$+#i?+e$2j6p9g+dBZ[`h.c$s,=O,k@h.?7btu=mkWVI&Zq::S%\VG!,6:id[EOEUNgs;(
%0^.=a&(LuNjn:IoAM)>'SLgbQiTA4mbj<-D4pl7I:BbCSl@TY:/cN`S"IRX(?K;2EW@3j?\s'#m17le2n$XKL#Xb^-?n@cI\X23p
%T?>CoYs5p?,I=J2/CT$a@`T<s@Eu4g$pckV3CWq7F:Wo1F`(]%!fJ``44Q7FcS_0N_<HXS*6l59CoK$>CJ90;MSY/T=GQog;FTR1
%/'=0rK1p0OEV0JQC4P/S6)iut_X;^=C'u<^^Ku](X\o1-eF,+"b9s=<gbM^g!5enNNDaZu$'.#\$luHYKQ\I))!#eNGK^Ck9Nf[.
%g%K;t6,]^F3AYOB+]%PM-=")@6R9S:V;U$Or5G!SLg4usobiscP^fb3/e1e(>Y5b1j<.3-m]YiKUHHR.kT(5uJniP8;%qSf%Ysl_
%[a?j*b62fL/eN.Ko_`TB1V$PR[/s!Ob&MR4=pU5$qUDPO17`,"o'4+!kLSUDpK='&BV@4Gk)Jk'SSPm!1.V6hCEoUgh65,b35HIK
%&fCeLRm%LXLid-+"jU!Cfu7D$QqMt)G-/?"l5M1tpJ8_/a2-H^gWD7""Nh?nB9O\&&L*D$@S5D/'JP^%iWE,]8sh9.9,0IG@BL;S
%L4TFG`l#>S.&Gne3><F:eP.:gLH#a_bi$?,`W#Q8N3gX16Q$E4>+[OZCqhAW![X,.L#'gu9Sm_$Yk=,3*NekALR@#:q%C.gLo8`"
%*G0HjF_"mU&DH-j6s`0ahfVC^Ie,>63Ytc@?l+<00TQgYD<`S_F@:55@>3nLg@4!o\/VB&!9;7XS%c,^&@;Kt&kjHjhn!MD(`5WJ
%#PY`!B]O<7K#qa8a!!I<"FOm:.daHM1[?B."IF@@?Me:O-/#c[g?O",WdGXe*^*LJmW#6["p.)H>",[Q:X:r':@1AHgF!2m9eW*2
%QM[KW49:nqi]Z*8as.FM:[.>C)/%tn+e,K33Ltd=?POo`oM4tN;;HVi$CDdR*#QLqcNi2"c&u5Z2jXp2NPeEB\CVJ)-q2-pmW+J5
%;>h<HS.E-6G9XseHe^Y5Ib:DYa+3+`F`*3UUa.'.A9JED!Y`5=EL>j"B$P`d!:.@5O"RUPl09+aA_g^TWQDej5JofBfVjrL9iu=.
%K%UCQ3+&E3;\6b$Ka`t<9UjI.I@UA]]HYMofM6uc*I5X5[bGRb&rbCK%T3/u`DW=XY%;KXIJpeH^A[R?2`p)-H\!+?/!u/N-P9.h
%Ysf%[.04acE3*RQqcR;DB`i$j@:fKND654CZW^M709EK=ab<W8DC/9,c]N$<XSD"Uo(O?l.QCs3i3s$DI$PpP@KCe+1)KW-,?IFG
%F/(-P@.Jl?/1FUCnX*KrL%M8mb@4K]&1&@tNU+lt$)3*gp*dD`n="@,:>Yu%A3F!$./Wk!c$R)fO;p1VjKr/PXe[9pMN19K?N<Ni
%1#msmY)5Xt4;p,$-?`PZ@=g;j<%.k9*og'AprY2=P%Yt?pBrIU,1EGZY:Y@O7b^C,#2$tQ:XHtY@$S5+#)R@@D`=60?Q*Ua'(d:p
%bV#8lou9"dEL8^@Ed4YE+&-%2Q"K`0f[Zfro%bgrW^<"rCNZGZcEEs<>F&?.2,tlAA;hKI2Z)LlP<&)e+FH$T60B)tT4C1<L%.BT
%q>JopoA0/urVfm5rmB9djg^qs7/lH>n[F"I._41P;-m'TCBD)5b,l\j,)r)*Zt@d1#KF0h0Qro%g!7*;2)"5MGkPll,W/G6[[I7^
%''+7e[<_-RFJI;3Gc^fpG9<JNP7]@]R\WOq6eVt,l8q7SlN5.VAq'3)q#PTk-``G>;?@j&fEr&,l#^,41ZDsp^L!JR,MDM@=S`02
%>iI4(q+]$3nU9K6=QKU#,dYud79OQD"irFV\aX*2I#m>*e6q<He7M^&+<Mba!g%iW$(<Hl,E6-Y.BeoS]-BlL"R%uW#\&(336esA
%3cNLe22oP)c&?d,"pucOenr3an</WNdjPek,S,L%=OAo7e<7/N0S2MkGS,2[J^G>>(0,>S\LNp[9LFD6ciAB)8.l3DP,qVk[dms*
%FYMH?%XPl2)M>Vs8>u#@6GjBO?e--S1ngF^8$;C-%gE@*2n.(Cg)GuKS:'[$j23X2a1(2rR2@K_klk?s@LSQ%m5%jpM\t"h>iq!1
%,[h^D?9`EKW;F(U3D!.IcT's,B#aY*IE18Y7I'hsdQX;$U`HK?b+XBse/2gCMBdC6[fZj<8dP,1+QF5"IC2%?2B2:SML3fV&`W[Q
%V>1<W,u=32nJh&,bpAXSP+YT*4:T:*%GL@<`(?\D]NlDS1.6)nfsMR$!_BV_JaAoJMb!1$'!E%Zl,Ed^S%.B!.FM:J-0s:OMs2VH
%f6Qc7*A%F[$)u@VWEfJNOT9JIRL:INfc_@;7gR\#otCLIW<@#Io=#unY2ch4Z]a,El+aGJ"YiD(M)>[W5n/5PSa@oZSOt2OBpV47
%3:,??=4[o/SEmq/"1f3>1Xpu)6\V?o]M.u;^V"0mLua,[;H9h0YU'+'V+G]nTSF#VERo5B?D_L8\odCI:H,OUJBa<Y!?u7cC`:Wi
%=Ja1qA[WLJE@T];gL!BN[kW12qf[;F^#R<)30I"U@*,6b5j`K6%g*?\N<=pn*lC:X/V#SMn316m!43Rh?5s'e`0.5tCeB8@%X5^!
%Ed7:9GJIG."69YWcpUt:P4S_Id?-#Tj%sM2305!Z8@>#7:BTE#!4`sF;dkgUCmk?`P[.\-p@qXjnV)itisZL'6OIVn/.-sm6_11c
%<J!"6f7mPU53egE$\X./V.S8-)T.Y,!n]ud$],oJlfAlT`H\WfP=9/gAPeWg_GWMRG"qB9@'@:/00+C_N=/,CH=C?q`n:bDngF/q
%f7DscW1:TISAkn;=B'Pm-)WC;a>mQ,)%%lbe6&,aVpH"9q^EG%c70Ni&g(e?8/jgoA!B,^o!K9tYebnIA=@.@6S1tXqqt6/n!&7M
%&.)gm'kDgbN[*67'4:qsEH1=]!5$">X\mS8h2<CJo`1/6C*:]3$N3Pcr`OLd@%kSl%tQuX@<]'nf:e:D@K!H8SP+;4^gf;UIFEdm
%^J=oIKNPhoZI>\cenL"-r5rg-j#=M@V3#u_-pklg>Z3;F"NU]o?/XhAbuPr+r[N3Ep=^?iW1cK"YCgjT*]IgRVbf_M)D-mu<bpaV
%1igeH[NM]8>DTu0FrKZflk<qUrM6oQjT`$7Fg&9&9)"Oq^'c*d;0AGpMbt(9[GIo\31UZ/e@"IViq$1.\U3[,K?J46%k:dAZBhU2
%qQF-sBEqJ&bsuMK%<Z5qaY+-$j/259N9Os:f6uOF\!*\n5oR#j/?in-=)lJ!bXTf(J?tl]R!H0`i;,WE@L]rCm@P!X6/UI-Z<aq.
%DZYrV;06O@/Bk(UmDq02Qi_+4pRR)QZtu7Z50OoGApQe&q8L]neps)A+\iMq"??`kSHM3<&O,o1T4#g4I!HOTYNlT'[1Ifl8DuCS
%0l'SpN\j=MQ-JLI2E'"qTOj?Y"&HL$D_al?1h')p(tZ8OYc3eJi,i&,RJZjOMlCPV,'DiQD"`$^Tu<c>8`VDZmVr]No_l%Mo$`!L
%Zc!M4#JdOL/Xd3N'Z="'h-^"H4cu<jp<5YLK7^?Z*u\7a;UJ&&<mJN7T!saHX.Ap-E:3?3a2K01d"%EqC^3E#G)3rmM`aJ^X.<l"
%)st"\[N2@n]Gb]h5Y?"N<\/ZVTh`T3f$;r2U_W3RPJXaal6H+oa\;2=Kmp[[&*96bGO.aTWn*-\0t2_iIhEk\p0S9GUui,OPsR("
%WJ*B7YZLX`$GRn`Ffi/J-?g=.2eq)a7dhQJLIJmP1]FJ<4eFJ_H_>YCRUIQ!H-4@&75XsJ0FVa)LS9blQke#1NS3;#ZbiuQjki0.
%RDReG7&4Lrm/4k@L%B3E[5/82TVg9<D%nktW0Hn\XUrZ:W'1r]7]):LOQjHIO+%*p`Bb%;3*qs6"i:U`*"Qi6A^"!OVcUe];\\A5
%O-?2s+ash?b$Hg;O`sJ-.aD$@]QVLVIKG&#h(4poFnK9^c8bnE6[@5p-Un>!:;eG`p;a"r!BMYq6Y>WUR+)-#.HMOXGRd*.c[6mW
%SE[46:-!kK/$PrX-*7pn`4@XQ+YB">qHI)_;W<7lTL#f`bqPD66?i<CLpa&WqUqO5S/DFR;=M]pJs1mS3HI6f0t;M)aVo6RKiQ<S
%3tD=n^a:$^4HPaF&E`$TSSRj+-9/F<%@aF9W6G\<aAWAGp0,W\h'!UqHlS4=+r]/PNO.d0"KV1o?GRsX!$5ds(8l)).o1545#/S\
%ku&-D&[Jlc=gG:gd7E9TYd/5K=jjZ\mC%f#lsPjE.5OVPe"'XW+tO\N]u:BAdXcq/03`_#]X]fgZf:R1Lj.&>jY"0%;"`U`QP(;Z
%CX7K=n!/a?K!3EK-jI*IM]P&l.<<6LOqJiV+eje"lL1MUq,d&)gnkIp._`mKJ_<]t-6;@I-9Q_I_E0$@n[Vf:rK<[=^#.U+h+JeL
%0XSl("!p/PErUM(C[K"aQ`[?oqk/^ZZ4tfr]L:tmjJD7=e9^,j8K6jS5t7B1[0eRd9h^S1Pn`P,`>rr>,FI&!<9e9QL>p793I0Ae
%ZZVVnfe2f\];K56GdIP=`NI\T$ukS+`fT*Y[#AWc0`h!D,DUUG9YtTR(u5Zi%?)JNmAqSf/<9,1(bBpBlo.^3-&";02Wd&aM,r3C
%dGO<4c`I^8r1[KYdVCOj[I88nMX<rO??Ab.R$?2nQhBRJ?$o.[rO!Zp^*I.Tbd2A,OcelB9J1/;Y3_;;(dc7Z66W:_!DA>J73WUD
%;3*Z?OfbbubVcK#_gX9@Mo[6A[n_g'"fB9)0.\Un!W1]B%l"+rVB`qEb<V4G#f'SEJ<U)7WP4,K]/bf.F'6bp>T@)XMX%0S_&$JR
%j_hgsNKfG;U+J+;B"%JI`(9so!tIb(%:lFt`gQ-^ZS["Gc(IL14j+%>XL"8'F6XMI*!%et9EWTZJ2#0s/[EH;j;2"6NYG8e'QN#;
%@\%`abOXC:hm-=s9`mo@4SsTuoQDu_(9"q"]6nZ\YRgJ+MF8c$<]_DjIW8DBqiT)qjV0gi'ga^u!NKhG@KkL^N@@e8/+#9rJ+[ck
%ouDr40km=gBuQN9g*?',VjKRl4lG%.H4C;?&/[]%lj1V0EDf";J)qHpD0h]>k,ZI(<=M6PF.\[8fkCS[WK>e9Zb8@^8Ykiu%o47?
%\s_Ym!hi!%\tuVn4RV)H0?h.Jg.nU!XM9'-l52NJ<l'g.Pl5Q:g<(rZG@LInk%#*So&Y-l"tW3&&j[gl;J73Cl>G#1fLi8\[Am"l
%,hQh)cu.#S"X`LHQ\KRRjSI=@bU;5C4=V;CcW`;J^+feLJ);HE\8T^</ElBH-Q;#n^9Lb!5Y9E]pQu"me.CCiJMqV9J[&p;X@H34
%Z-/$p8=>6WA(gL:.n'JRN+.K#n;!7S`]u$(Mt9a[XMfUZgC)26GBk(H0PTg2"N!EKVO/3@YhG)+fI[)W9l-D_NOV<ZcdrS0;SM^m
%.fjFTj=[_fAmAV='=M+*[mZtZ>EDD[Sj(Kkc<]Rd6,Aeq;'>:"SB)fH#:^LQV;an'cXrU5-7X)<O@u4jCW+2#(j_alG=j9EV#BHQ
%,,..&Q?(_YNP'8eD5;0rUM.]:A9O7fgUlD;2M0QZS'uE()@3SQ+h#0k.*&:8!LK47=Hf;"AVD8BK("67:t,.sWu)C'5C]dsf]>L:
%(XP[rOUbEP1*MfhaZG1Mm0))gl&$:\.@Js.IrZNCD/H9)R]A)3bEDL#U>Pr*f'KTc*Ni>M<k.Hsi\%Y"o(=(?n$Z6oHB[lTU[Rbc
%GnmgbPm07j=Qd]i"L`"a&M/"VanF;LqW5Md)S+HA<*K;Rk.>'#UCRY4eXPD+-+1-CJ4o1?Vf!psCgH9:m2r:*%t(sLR<S*[HB2mV
%8)E,J6h$42prGLDi$U]D)4r@=95bimVNneFCQT;6XPQL=93G'omd$jd_ubrmf1rIP\ioG)lhZ;[;:irqTM&l?("Oq47d8@I`n",c
%$dm]Rg<42[cPclG$nprMme>Bk/=<Ok8%M`lL3>R_B6TWgNEl!722pVq(PmZhcTe@L@'_Hu"c_5&DU;rL(_F*&1t;R1aYbL[;-;r9
%U9KdBH%Ec6b:=,t\2\6'CE,o(*5E8'LfQ<RNM4F-:n`JH@3AY8[Jm+>LLU\<bC1_^JZL.iR<JuU<#A3B6IQ@n_JioaH5)KN]1cl?
%oV0$0.F1#kP%M6LickHY2cJS10`fY]GV&h^AU^=tK54U+F]\d6o$N[J^UcZVY93F?HLq2q99jAKj9g"s]T3qj7$[j]FQ5gt+%8Kr
%=VbG@K9YEu_2Y3q967&99D1JX$R5g_<0Qbt9>$qk](sEb+pS2A\/>['CY"Vn\:AU$_-2D]MKdps,QVflTXRT<#WJK^QUqYo[;sM?
%E@j*\_63pr(N8f%H%g-4BUR;/!-naQ&R_PPT[julquGK26d=VP_X>i.-8jYHYYu?0cOjf^lFt2S0>)HNqDskf3E:J)D*1L230OlT
%Z!DT?rD#?-&<]edR"lb2LJ/+2e?Asa%gtIgH:I[gah7ihjq37O(^WX$c<$%bdVcF@"?c_p:J.rqCN<OK$7n&W^nCCUQe_G1A;3)V
%=[qbSj?u8%dmM^=2qZUF!nUV\4k"_oKVVA"K6j,cU14;YStN<Q??dAfb2ca3%QL[>!fUES^+X^U&1L.gI$1ch>s/adjWt_OE*-O,
%P*Z5hCld7[m7Gp(Hj]MeL[Beg$Wb@K03TC>RK61%bIM/LIKE0#pBgHbOBT%F/2gHhd;eeT_hD48D]hIs!VUK7I6uu8[SL/Cl8l#h
%pad53OZD916j6upnKkR^*G$]&8$KTm[CE(8F&=5]7mNpS=SE5c3<``%giB[dL:5<?!*H=/StOh(71B]5h?Ho1^=@JBb@f_4$@WXF
%#Cmo@NbdA7$^=#kE=D&F,T8s"-9K2b$IT8?*.,AqX1f9p0pb60?`@G*8J1jKs7>DVeaVsms7k[d^]1Y?o'7sDrRI7lrr+kV9Q@uI
%_uJVYJc1M/DjX:S7?_,t]#!ifn.A$?BKYYL4\U\?W`C!.#d,W9A*@+_'nOgP^0I7$8:,G,@Nh@Jo-q5'+;VlP'cXlh2:J<E[>OiO
%0WVBKX\J1Y$rlUo*N'U7?+>tjY4E@q:2@`W0\WR$2%QX.GmDk`4NLH><U3JS^]=GiZ?LkZS8N9$-hU(4Mp%AOkN76=Aekjc_G*"d
%A&Ds5[mg=KY"]_Rp-8^Z-*ZVHoIqS7EJA.1%["^o<2.o81umr?]".ucT)g'eoW>'e.']e(4EOl;-5+*D`%lErI3#QEQ)b)8TE*%O
%PBPVt*a]p/c>T$+ZYQnJe`A/MK&&\'f:$0)INTZsSl@g^TMiZ-kP7\Hms@)8ZXF!2CZC[$T&1mZ;S>KU&qI&,#C,XSkB.nJ"7Z<R
%N'.0!%qb2L/&W2d5)KFSfBTi8"YR\!eo*&s4qFaJ$:,]Y;N<B#!.`S7p2A,j6H>8U:Hg2o;P?q?r&R23C_`t:BuJ]S":)I6LpQ3%
%p=$Mb(T.RFTsS5pOoQ6o6NM\GaXHD@6?"lu:rf6=DA.`jD?p8RX;`JS:1\sI$o8<nR(n32LQ$9G%.HI%:`/:*i#sDgC_k$#SM?/W
%,9%aM#PR.5oNNdLO,!aT;&C&`qC57)6p3=NU_%<X.6p=.UrKL>:(\X;o^N*tH5h"b=<Iel-FVcRpg"(6Y8i>O-A.7nW+[\L2uXK+
%AjVd`ahFd&0kM[&c8)*YC7<('XMIu""(]"\J2%PGRS-U4!Z$d^Q3XI\a"%WNkZ8*F=0mOPE6;/lhkHT3gq<t"DfqM.c7)e9A6;?=
%b?Z9)6<2WX,@;;G?9:E+Cq3s+"Dh"7\Q(43RtE2s`S5LS@U%h\<![l_\_!\u8q=6O-G,t;"]GM46m`q%];>H6P:,DD:d2#Q[`l*)
%H/8lg95gAWMrWBnLUlr5k@)122`@-Wc0$S<b\^QL4*n'@o/6gl6u"H[i5\qn"e\J8YlB$i9.[N.(MY.`&o>!K5uY)b/N#D@!>o=D
%FaANP]=^YNE&Qk_Zj^e#D9ZOmn7+TXeW:E]$\jbum5"=4l>lQYAkf]ag.XKPXB?piMFJN/Ch,XdmsEmG\(3-d]%ST*_-;Pq"u+%.
%;n7liZfVS(7nU>n]W?>ShV^b0a(L4K!h(^i$*UCb&95a^T(t''e?gi0<($eX*LfK'3f>rX6k1%TbgeA)G8aR+Lrn+/!aV_/EThDL
%rXOmiJ9;]mK49)fLtCUhQlW<,KA'5f6(.aR]+N$?1cQSg;Vd_t@Lnt)[>K9j"1-Tgej:*Z@)[PX=qleP07)3^\rhcogF^GT/!'lb
%>\D^qXA4pb[jIdb-t<m,;4Jh-D'B$4eN)YoiMjs8-r)p2(<_Ehm"mY@$+glRF&s`P0.Yq3/+1gg`H7jTHN.u:E6nVlG@3%j8ULO1
%??Ejh$.<=d\Gd1-Yp(lQHmf\j=>4F@S>75S$l1>S7<]_BI2.:53n^g><>6gaVe^Nfi?WUJ2I)_n"a7*=qe#@(+BOp581,&nCQ0?F
%:`a$\mo4YI$O4<qFa<q^Dd*G;+fs9@"W;j@3?I]2Z*J[1:%]uCkc\--,E*h(JTA#u/O7=[Z)gI`TN8%c!Am0:<q.jE-""GBJ8$.d
%3)?/U"LF[/]8&=r`*IQ@Hs0254;e/;CfAmMW!foY>G0RUQ*&%FgioMKA,1RS,9Y'Oa_W2F;bJO(A_^qMKm/X%5LnBF1/*VB.#WE0
%ZJ@'(lG)8$cL`%)e%Dq@4qFLs,[fC=030&$d//a\\5&N=Sbhei^Kr?rk4:beS.+oddO@6^__q62`QnY0Ur.rZ]<#&L%;R5YYuAJ8
%U).3#Qi)K"_:=ZXDZQm)U$(X6#>jjEjY'#Y)(n>/ZDWoHX^:_VP?@*6@YUG&mLqlu9J^oI\XXnl2%*gEdVs5@-8oCUCrB:g6ijMq
%dk.__Qm)O66'fjoK[2VXb@iP87)F+X"o3T2VN'W_'nd+^B;(p?r,dlk,hFMh@(0A)h.--ZoEMTY=e_q(UXb$%7nan1:iL/*^UTD$
%'3gnV_NmNN)B``qXdff@h($[E#<gje9?5SC&h&"M/3`23Cq&*'!qL=%Z^WJr>-HM+U8b7srGI<`4Dm($(?cKSbsIo8H5eeq"WIo"
%dODB%1JS5"'*L.$n7MkPk-4LbAfA4TDa6(3CHj?r*6>u#Ct)5@DG]?4$<'aV&+556+ZtbY8T%6h;?2=t%,6b'=&gBu*a9ZpAr#Q4
%Rl)-/kdpm\kn:Kh&CQFC:j&SKho]=A"$>J_i^em&,?ElJ;6BVo7*)1]^a.9\P^,0rUiLdnn2dA<E@AH`=RDRm,GQ2+ap;)*4jIu_
%]ENP__ra"s;L]]?AXtI"!#\_N]'[+*F';;3Ih3H4o<<kUIBJ3f\]hs_a+O!=*[65!Nr+6UM4*A"McWq_nB*H3a]p6,pLoupRjnQs
%mj:&i*>?ed+io1`@dUeVMcqn'-<)dh;QRl,P;khkc*_!=/F$NN(RT&d72:]$Ycd)L+[&C$(m1OcEtha3,c'T9mi56m3FX>jfL`[I
%B[9Mk*;(9qi^PN3QeOg-:^SR/%0G62+gtfK/3G\(do:ec>R-^le"K%'N3BtEPr20oVB:4)\HSTKaCAnUNlk.L:AUAp77cc+Xua!/
%Ml#@4rF/^7+b8E0N?DD6!K>A25u*4/Ek:7J`>V;\m)gMPR[>-W*G4K$FnfY"dDd)*OL@a^MG]<Wh55b12rfMjXnRdKb;PpR16^p-
%aSGGR<#OqMqskj/ri?(`GG"m5QiH]Qab,r?rfrD^%Bu(;;M:khZht9J@JV1#C_V?r!Qkjai]&4nK>M/%Q@."^!sZj)`F:RI_B5QX
%JZHpoCbd[KWBh@tR*eVTi#iC5jtm_H,6p\h1NERug^u?e%%Li5M\9E?hD0bWhc,:s](M``ka'rd8qp9_`lrZFn>oo-FBeJMqXs:4
%K!Z_?*=dsPU?pojk?bWl!q_ac,qc\U,;9k6TXfU+Dhp&c0jZ9ADiR]$)H_$@'9NE8a/^447lEL^$9lC.9Ji#3(U(&4Fr2Z+JB]*Z
%GiPm__K3?$MghJOlWH(`D"m74OdjXh^qg@N*;J8E5]/cN5@a!aH7GS4">;nF@*h-3oDQNQp=i7f<s<SmB,a*bTA)(cpQjd3F$YNW
%5:sSOjpbhh.j*@EbtsdYiIs`P^$ISpe"+g?n\e]Am45h3(Ekm258cWJZ,DRJ3nI6oRT1n]0!$K3'Pec!enqb3faR$e<a6j+VOB[A
%N>]I<D8d"MTo%*3!t-!X0a$Ll`&t$lAEtMb_A58u*(aWLqdqcC!M2BJf8,'*p)&\fUV3%USd:g_9Sb.3Cqgq[ds%ejGOZF4W-`7Z
%O,n,a*=P*&L4*EecocpnJU1?i+V5``UOaJ*MV)9RB6.!\;</#_2t@,@3_$W*BRi4C"s/s6O6MD>`5H-mj+Cm_@p7qJJb#1CGt?)*
%PeMF8k]oi.4XQ4R82ECUUn0>C%k4[%ACtDGlnQ?MP_o8cAbRgdpH]G]0jXR9=F<e.IZUXY9PZg=5T_eYmo-6Iak%'O[#YOLa40ST
%*:Zr[q(_.3OIUbn@R$a%+4K6<Zfb+ep?-8iA(po:_>g)6n3@ldOBV.FK^_N6GU,10;BS.G9>"n;4OPl(M&HnXN^r*LK=qb60Kk<O
%OL7sPm.ILE7&Y?<o:n>H^f"WO<rEdTd@"od9a'$0^p+AofjpX]o)K^q4sPO*@ZrdB$47'i3$TL\!0'N;;=(-S0+s]6'sSV97\OVJ
%[&B#2,p]X\ej?0FY;hV\bQ(*@PGU`L"NMIp_K[6U'OUcYU7*#m;OOI>lsCT9P+el@<:[k_@_HNajJd\b=I3r=Mb<=SlE1KUr%NXu
%Fq9\.'mTKE>Y!<I%4u-C1_5\!B-bAW'XpcG$^99>FmQ;b`Ojq?MEm,qrZQa=V9<;N-I1$T9&VUCR297EdB2%RW=B+U?"ne6JPU(%
%Ch$s5`_U%3g5#i%7i'LXYRfD;O'$H@!W44,`=0nkI'*S')F:nf3K5;>n8"i7@>iUR?o$@YcY+!3&9hVDIlY$-JTdD\WAG07rTd.H
%pMGcLD'6gnO?pW%82VIV&=1F+a"ndh0g9edQeeJ<HG1,<%GiG,i4eC4m3jEF+Au2Z/;u`7[AEB]77.l<Rk*:aF(=J&W4DFCX5pD`
%mPClMqjV&NO(ahP"*AZ<GUL`#,*(`r5<oX*>^H*';"]njQ'4'p[!"@GoY%Pq=iIO\Q)%Udf<dX.kJeCjKp`LGBm;,kE<*m&Er07n
%_Q*\#D8$"53/b^F'L0E^JO9V19[Ts<E.H4[;0teN9jTG<OGRmd?-L/mfforl4+&s&cD*8'ANfjs]-Vij-_'>^0[k`@@)`Y\=V&;.
%=$.#jGf,=GH$1`@/2)Y@s+o!ro_^+M7p&dB5&B%OO]b;;OlA*U2_+t8p8Q4\HLEf`5&-)qU%1qqmnT8'`Dhu?D8/O`JQO;sHu^Y(
%F^_@k+BH`s+/i!g!VU+q7PuI'_&$U@Ug`eKXD1i/UpXqQ6ktquHO5-8djfmQA$,%!099ORRE1u2K5<t0b)-D^?nM8;LVcI>B>l\W
%F6R1g8g-K86,KD^$:+YCE<#/oV-4k'Y0E=`NqWo9qZ]j=WcA-'2,@#jWW@>i$PJ4d48=N@EK-E@_&;:ljoJi/&`md^?rDu_O0TWW
%bUkK+n</oc@%#@.+If6lj^a)U5e>[Za_Vp5@*'4Q;l4m@q'h?sq.CV"r/9J1mVfi:p8]9p5fPPYg7s^sFVaRIA'+C$:;.=]5'a)L
%m90i%3g6=7$L7#dBFV0>D(Id:G$IsDVQm;Ujsb(SRkV22#"k$21Q_:O2Gm9X$hGHJ0nJ5ED3b9oE\[i7J^O=SqD:*U=JC\59)t15
%AQGRCJsI#je<`MZ0?D\/lko'<JU%_3+B*1YV`EB3eK^82XbYsd5pRQkZ9HAXW@9"kFDVm:aj+^a-Ag[KZC]8;,4-onYko?'9klg6
%>OOiZcf1u*eW?0(mA'LJ8<3p^[3g]^9et)N#*3ZP?j'?Za&ef*FAOQs:e#::3rD]q\>="oc[?HNj!\)D`FbL3U%Ytm/S4a%!+"k*
%8#isMl;L36'jHYt1V4"66E7JSPV_!t%]^0u2&9dDao/KLB0\,!+c7*p'MlbB7OSrqQJ*p>Tk&'_j]UGENQoPKs.TA?XICf(EuaA4
%%6$.d`(N%M&`m`nCW[GA'+3a$C^R((:!GsBe3't&dBN#=i[=1bdN??6.<t/$Z?gkiPWsV[Z#\XdZ:kr8AgurXQhE<>8VI=]o)^Xl
%M8Z&Vc@p(2!(^+tIC]C\PZPL0h"/-G`!G5fNc*(F):edJ%&1,32[5HJQ;^cmXK\dV@,:eVc^Qa3JY'p_8=iS1Pco;=!_B^bZtsiU
%+3QS$OR*Ti]gH=uq/FisH@MGBXdjZ8W]*f\WpN9(O0dZpH_$"KV;F"(d4"c0WW#GGi\?kkSG%2$O?=ddhWJ)a'/L`+E#t3+?-V:>
%m[aZXV`];ob`k7/$FI,hd]F5g7)?36^6Wk4=WqtWCf+=i,hhW&s12#=+dO\>c^kY?3qDjHQ@iZqET!tY7Pn4V:Z2qS0;[=R.=)tq
%#n$HJ/)H@3J1F'\eDZtXPR/dI3poR+/VoK?h@Zkrp_"pR#-1@",B-fJE_Hmc**E.p/d'9ThR!)[+eOMF\SY9=n,\BG-+#6/`@@5W
%l9R-B<4*kKF@c&]pK/'+ee04I:M5Imp"6-=&!/BQ1&bI*"WP*@Zm[(VUA+0B6\)FcEneVbhFH3'+ER9=7@sY<-AOg`Ae.]Z,-&p?
%P!P2R>HAU;YtC+P7$q2E-l^j^+>NOph3&::7s779BuWfOV7q8X+>>g)kR)*'KmZDODss]"W`pj0QsdKP[n^c2_6Of)M47TIk<?(O
%dg?]g-4rUaQ^>+&K_iesd?B(sVqM[9ENXQR=g*'?%#;#LF!]USrW,F"#.mJ`#.V[siqAS6&$A5cCnmSElZ#:Z!KAkb2=.d^l39MK
%8b".dpGHdY-8`Z-JXCmrf>I2'eX;M*d&uP!U5:LmQ9*V8DqlU.Lqs1(i42.YJ+sE>dXA#6@(M<t=TdJti`%.,9DM%?NO0\d`W7TC
%97qdWdAkC+nTo+[J,Yis7K<A1J,8fnJ,Ak>?[qb9%mNh7G]Vr\FpI9&`VIc6[csP%qglHX?l=H)6bg+=+78V0/GKHSs3W?AoH-9d
%1`h#Wj73g>Ke_FsTnbR<Yf-uAnoJtHkLmIm6nEq6&:RTRG,j:N=gFX&Y#eX?(4^MNb^sIZ6_fg0)h_FM-_K30AnWZh[56[;D;,%>
%)q_+-(q)UV*d<)M=I(aEPsT]4?Ji&CEXT#=2(Lo\*[AmOeg!%ecAag^HEist[Bmj:lp,Pt?XO@!Glk32T7'WgJE&?MB^"kn*7=Mf
%YV$&f&m+`HrN[OR!g<[9A'bH02)C*^Al1o4cb"4#SVO,<I`^+=S.QfQ%k3#K[0E'UK[sQ\CjhHPg.cA3/)qS6KoCDjN;`i3-nsC:
%^9W0`F)m"U2D*%b#YViCWr@BR#]2VL<>&?)4V`S-`uXFL_P$ss;@S\;D-X'&OX%]9k3\NR.n'Mi!hTV=N'%LUZFFE,pd'3p^tLom
%'c%&2[oNWRfq*unj+IVuQ?Le7#$HFY0=+a,o^DR6SchK4)DU!DQt`AL10rU[o^8%a0>5$SCgDP$6Csu<ese3/XUZ,W^?gpRq%cAr
%5?rA^X:c\d<^c7&_9P"#R_@0RSabXqaTLeUC3LO.\^T'1hV:/[7P@lLDhD4,RtoJh"p(gsE'7XjA*>\&8usJ:$aBFY_HN2WP$E&?
%9HQ1:^/'JtI:*&XT]2tG&E=`_'^I'E!$h9"+rY<%kt#\$CFB>T7bhGKM0mf+6$XlZQ8`1Si@[Kr3+E#1iE:o^@3]=In'F+9V&?K9
%D%tF)AY>NM(UlN1aQgt/Js[hWIZ_=38`2Kq-e&IW7b1>F;]hanhBI<^-t1UR$sqpY'&:"^RpJqciYq6ohJn;7Uof"$0#lX?r2\Ym
%ik'p=\OMp,+j/UQbbn($Ksu<"-r:#&L[,KnI0N`8Jum(^P:60>$H>PB2t2,QQX=Xd3e@t95(KSYY#VAiO.kF[,Z!#@_'R\o9b$h<
%ouqMgH"?HG_ZAhr":rr?6+r/)a/aPiDQgfOjL*-g2(UZ5fdm4uZ;B#Y>Z(liK"1a@hL>]s:9MaK?ngoDD/dk*G"d8HrG:dEF>p,=
%\)1I-^Wa.R+A5S$2!Y7V[XHt/.+ob.h!N0=1m@3dFA$TrKnu2*826&03Ee&Lli>gHi2l*4&83!D\SW_4JYS9m3&E;+/JDOdl'M#V
%1pFV>XG>Ic<4ccc<K%)na(uG5L1^T%'a`(iN74'&D.Q+LgdRY$4U1=i2*hVD?WQb,cqV]^eOB1<GBlkTJFph]dM=af7P"<gp,J45
%EXfDeUW"1TM*lNe?)`=pfaW%S/L7fHeV/VGLU;H[*I56((ZinU'mC&*Fs@@/]T-;T4n#g3:IbWZoh/JR"NQ)fW'k72A6HmhAYMK@
%"1:in[K-&>8od=dYAUqQ*,rB`K;Fg9PH$-l+Q&m5l0Mu]*/SMu\<%\fETilo&@@gaU]6:Ba%D?#1qii:*cp!Nb,,mZd'?#8N:N5=
%@<)h]e,e.q5]VUfKLu\I;"=ZYo@c]STi$7JSs3]/:l?%GN.K4^DC`3qA=+.f(eQi:AdfoGbQ+LrIpf(WM;/tc/7o"*[c9RI+?Tf]
%(gG72RfV:F9cXI5ZPoK7@OS6jB25[3YbA=[$XY`+i!(l_(<A^JZkSEI3<iP!5NsK]d#NX7`Z(Q5A<tU-9rsFkL_i7gecg`!Q3;q[
%1r*!HbGYk9cjH.ZA@,?)_'Om*5"uV.6YBU.]"n`^&SeX4<a9m/B60lO,7=_G#^NuEl0(o',esX=(&uOp&=ce1*glkpgngrbi3mL"
%3B+QE0j_@WH<i,G<"VN^$u`4l$s1o/F/ur$"k2FLNLJSe+G+K;4l`'P1[W;L@`]hUR*J]J5$;A5VX/I4=E'9i0iQu;grLcs[jdr7
%8<XIr8$4Rb8RH6GG`=;)dFa$-'+7rA#7n``B5%CP3t2:OhTE,kVh.EjNk4'EdTV\[V=W#@3g(7JO+'UdS!nXposG#a'dC=LL[(8,
%ALSP^*-fDUL>oN_GQ9c8M')5orJj/+;/EcaXbW#b9$`U(G8g^^>ktF);=?cLWl!<:],H:V9f[>EVbTI'Ragl]VmcqV-"L\?#M3U=
%P^$T/5NO"JP6qRF>FrZmDNl=Fg!2Z`_2"DXI+^C&Q1bQQCcBMFm\d`P^,[H@2rcF]YclC%STcqBOUof1>GUUAajj0#&_$nZ"<31R
%Dn@_d8[(\*V$[?Z&hg#NEWQgtOjjd,F0V#t?iV)M!FTCf1_?FpRE$_=Tm-aIl]k.tg^S)d9S0@<=2b]JTn/CEPjbF+0Y`;p\K`R"
%8$M\(Y,YbN=CP[EI3p&bgZ%nf8g*_%[/*]"dCJjs)J>B$\N]qhUiq$\pNYr?g2,_VQEN?e`E.fj`u$4>)1jJ"01Y:nCT(OD9kTc6
%ZhCEqY'CIR[f8cU,l@o:Wa$&]C0ZqOE[fHmCb`b1Rn,;u&Xd-tZB#;\3occ6nhqRNi3;'6PUa4>;I1;YD<L?GgQKU2i_8fE^s@g1
%dp.Zo$l1!BD`Bm2OJRsbr5fPBXctg-h%X.DSQj"%^-(3X[4;V5^kHZ(-)o`<*A<$e%<<\2j1tb/<X<iR:.g&;^9*"O4t.bJ;GVKl
%bT9@dT_(-f=]/7sOTgH9AGngEcXVCM@jTMm2+LHm8Ior;:BaO4MkZdnVr!bB4k=(*=)E@bht=\rm":b3L[)1C1:64b[E#keVZOBK
%9"B_G]#X*Ja#^oSMS@-b^W.h?Vg?5#b/<B\`Q)`5&*b2X.jX#=;EiZ:IScU2:riB6nbH-&qH-,]6+,tSZIGfCeYb1Sa*QAKBIOGp
%Q:Isu'.N(+54_ITq1+Y"8D\Wfq)f4?SsVm+'Vd$.dN`Jj"+&Du&aG3-o`;JcObEDGep=-74VGOOWF?C6Z7#A!'2._Lc1[b%p.18A
%J4TE*\U,UbI6ch>8,2sa-IDejf3eOHlS$$KoU!>iqTEgWmWUma6@X4G:J[_bl0n/OJ#V_SQX)'1I($=J.Xc>AJSI4jV:roi1A=h^
%f:IUcJ-"HVa:07"GtX0'&f;FFP'^<h!4em@p)][rP?%#gO#1^uac.+RrSDRW@$+>#Y@FCe!6KD0]hN:+!,rbq%j:`\n@A;cl`_k>
%jJ+b-O=_<bP8]nf3*RTt,TFiUk"d1*<7lisga8q/@@suRNZ865.ph.rE30IikNf[TDF[a&<rljm';0P0+uoB^?mj-/S?t=8Z#-0o
%INTo<Gb#UW'&eA(CUB2c3.Ri'f]6o(ao/lqo86koOOf$j=.'LfTP&p;aYs9H(-k?FE&r&Md&Mj2S[kU2jlFqZYG[h6%TTsM*a"ZG
%"uqdZ+Va;d%LCE[o93KEL+<Tlc&i+LSUj;"Grlm(kW6C[hL%(eLAi0k*1bW?9PX2'YZW.X+:453GoHbBnmR)%:i%u&-,>0pCk->+
%7rTsUL"!*M)[R;Wc#+]J$"jgWXut.R'0)072S=>B9KbUZnTcg!We$-ar<LHD!`lEWG;9J*M7F8]6m4Y(pco5-dd@)akZ+:dBX'gm
%?'0[gd#,4$)a648aV5Hhp$L\c,L365SK5RKkSm@\)4L'"fNA?M0b^E7(Ba<d<'6>G#U!L-r9@LmU.k6#[r8/#04e=.&3pZ_nMh1S
%Re1B^NcT@e5br&g15md%0a-g'#OWF[*ML[..t_Tclg%ao<^_kTk&$`fKT.Xd]62?.K8'reaXT<J%Y=\We=aiWYD!56/KR>7/V.7(
%2M\9)Pu:j1(cP2c\!3sZ[6Ggn8:Y4#Qo[fK5Dr%l;[:ERJ@5/nB:5t(4b+')2&cP/dKM;!@`B,'I-hqQHrL22H,/%O4s'(>4^oj3
%Ceb'I/<dOG8>.hihBVK8j5MT'"na#>XrE0\1jMRm!K.m7!WZH2eTMee&E'_GhV8giqHCOa]a8ZK`MHt4:\;@mr4XU`V,!9E[4X/!
%_3qBM$[QQH(.YZ-X$0#+EB9gWr+t%na&61n5RomYR?$?0hmT#k\`\R$["Rn<\9ElRJFj0X7#fU[i0nE;b-AL)GRRq4Wu?9:)eOPS
%"4i\C!RAei>!l,R+HjO1"QhlKA,m16qgF\)VY/aRC@%![7TAOPe0l;LYsl>H44Lo:hT?NKf>a1/<U@-j_E(BCP:Q=Y0i;Sic(gcb
%_PGH`=0*tag#!@T1r32P9<amf3J+pA3_6F5g>779?YA+SB$Lo@G,ir)kqcmC?Ob=EQLBpnee4_#rA(>AcJ8,&,`.0-aBSY%U\*.s
%N[f#?"=c"?#ojdudS^Q:JF`n-3KH!@%RG83Hi6MnV(1<eLG^EBh.5Ch`]5csU\TRn42jqH+q0i7%A\;eluk;):>Bc+HT:]GS%]=h
%,n6YO9LHipcKtG_%P^maI;H#Sd,-LN=6s6>J]J_diPhJdr%i4coB0J0qnlKboDA!+S@O#/l@4Uj2",`0IIkK$2F2Y(QLqnldUW<R
%k>"_noQ5E:r9:IZe71_Ba3IUZ/ZM"uAbF^KlCgGn@jeD!Sm.93\N]6;p!E6pYrC;??,Rf\NBMG3Hg5&5f^8%90A9>,[1>=#4n`E5
%m,%H_kO#N!gf*OKV\X?7^$$NLeii`9HgHF[fJDuq\_^g4^8H.&O+$sjkQ(D3..FL6i,dqp`t!fa]aQ!p*^6u%r1K,1#9=VQH8E;(
%iqV0pnZan2@h6Zl\kPB\V0qW;q:+^#Yp\Z=h(t]#Cd*%'I-TP`d,jl(+6Ws#6Q^W55'A0!BNt>cht2OjW"0nI++(%PG$u\<Wt=pO
%(Oujq9ocC8TY^[/[rq:2*gq3">Z%s@E2$\KO#3!k7Q$had+1KlFE?+8U><Vd-XY,:o.nSKQ/fQgQpkMJ"4$$39fq+KS,0kjqeG^)
%`l';2Jf2"V1+R<cDei3;7VH?Rl$a=4A.L@$Qg"u=.dM0q`;?'"SN;:tq`>F3SEnYn%oahk%+)%>g9T;oS83-7@NNul9"u41M[jk"
%G!f"u'.?9u6po*,q+lO_.#X')qP;f:N,@7FWI/bMl8GR1?/TqBCpkH-0NceXC_gjp%Es-LfH"KE1hJUR"N0-)fG[#`qC$=;bkD:^
%MB.5eSo0`SH`UF'eC^rXU;1RGFer'XW:Nh&O0CJTD*=Q#<JIK-'1Ac1-8as<2?ja'jfh5F4AIgQ(4aXDp]+4E!he4RD6ecaK!HTU
%L=H`3CRimf_^@$`k=M18!u9YrJLOo0;H&7s:I/k;erd7g?XV9W7[4rEA`23R>K'n1VP"*HPo:4PSddlrpX_m/SKAiV4F&.\h]=$q
%?lksBW,O0X-Z^9LX;8U?H5t$b-NI*=CJRf^Y(:be@Z*5*]1D)soVIs"SbTe_g1?lrbb`6^C;Fk(_b*]*HJo%Cb:':jNW7c^W5I67
%U-UoWWKTK*#)K)Y">,9-:ob'khi<J+D?7u!^*GmbiV0;`*Gu8dni*c"RS%cXJQu'Na!h\2iDUsg%+*)lQWXj*G7mRJi8FWcY&Lq,
%E`rddAqT1N5.jn,!k^_i,ZoGl;2;Pp>a(AC""T*`9*dG1Ej7BP]P(#=)F[6&H%FR.b[a$85fVO]?+V@D*Lo.Ba3=t`#hl@1B_u3m
%j4:QF["^=U>MZjsEL#*B'!["+an6G?GSYO=BQ&U/_DN*fmb>BA_.ACV^"ur$*q')GStSXYXaQ"2Rd&EPRu)*!4[+0Z]+)8*V61)=
%2RJg&Ys`"n^%,oLc3:eFQ47NX836f]H)fKpi2f7r7_?d2Po1uHK!ZRV!4*`epi6KhF^*4<A2r((?+fO0bM'0PcMQ0HOl86PW'FLC
%).Y7a!m'@&`XHZlA_2a8(k:u]1q$jF3#K:G[c`r'69E(<^-NM]Ae^H&*&'YlSn7iGPj<;L2)kfXLY4's!6OJ<R+(bcJooXEN3rC%
%<NQ+]Tj6onf%<RpcbgM)2PWm1So?tYK%oDk_Z5l*Q*S,rOdt6lEX]:^(f?%@7ADp(65AVr.aLg1N-E2_g]b9mh&,Y"bY9V#ANZco
%A4Wtp#D(eYF9bH"f`ZgE)a2!t`\fp\g:%g\G/OV@L3$eZV:eg=%Y,$e."#WR=2CaD.fuAT9C^CEc9fpL0cM'Y*T8#iQsc-pN(c[>
%;Mfp2X&Ldo"I$]7S,jRc*V`fd``s[bi49jf!sH6[N!r11nWGWS&<tCc6k6Oh@MTHp[=5,2NZb+D(Y6n"ISF)`1BR4>5"ouhC&lJt
%XDdIi_X"S-IDboufEB$$HZ=]9aCtFp@UBRBS/iE$0kiO.Y`3FbA'Uc>?b3shVG,kWE8mp'0-X<7XVk7WTTq56]CtlE@5DF9)G4JA
%_.dQZ\r'HXf@u*U%`MW8U'/j9&$^X@pR%pK1Ld=20pSCdcFD2.$dGL?m+A1+G0AWn?6!5'5oYKAXQF:W3h,O4QTI25qGIjQ&3m?7
%]T0r2EC\ltV/^`*&iCLG$u[$)r*BS%`l(CKEr3Z!nf;+?Vo-/C^8KB6jQee-e7b9>'uQ6E>_[\_j4<2\]2dCX('-,?8%'j8^(]QI
%UEAG]$9P.1'ah0]cH.PbV\qBbpg]o-]oM.SbT^!ifRf+CBZ#A>@j;iQ':dC3mM9)l/djp?.hRF=-bs?Dm7&QcE^5Im5N<1Yl.-Pl
%)XHNlQ7\uPi1X$CVSoCjZiR[O]F8Ok(PKf^\bIMj,Fr-%3dD2$`OVQt&)]?L6G6Nc9K&'"YkC+"d_I`c`IeS^\m(Ac5g8"(!X#Pr
%gA>83GVfQF^ts3E0s1Su!GK^X4\!KNRZ&G2D"Gh3@Lsu\%T<?4"0O:YT4X,GPLQ>ONB,7a=1;%nWX?"2*L#;H;\3>m0nTH;goNVi
%Z3HD%/-)_t0T:@$@SR167^<>De/T5c39i3+Z8J+/YU5N$ehQgL8V"13*@\CnoL1)t>,6`9VTM<*Hbno+OI-YPdH?dIAs`=V(a_50
%cc\Ucj6<qhZ*DX8R+,*"?/8QZVADI>+`C:E&#_Cu-+@(9B^*cYFTXErfi=Ckfut51VCn$^Q9rt'mL<fnZ1T0@,;Xmua]=`Tf+H"H
%5SJ'ik=OW%)E8Lf"\;@=_DYKhl9K/T&Kj>OI5XPMMS>4.FoebqVkptA_G,*Z!I!en$rE^?abD.nc=_@dEFZ?2TtGKIjtaa07kZB)
%YkJQU5D,;Icg:f#.4_mnXg],b5ZIdm9<&1V3-fg1g\1k(c8W,'g+B$.$CKXDctNq1Qn".>_Q\j=/L?GX`lpeAFd<%0>]/U=CW&fK
%WMTu&Z)7s11)NRZfpui]LTulVdLJVSfoE3\WseGQ6KDk8f]oHGSs8.*I]^j`OdR6XL*]:[mX-1.)7C6qD9G*eKIBTkj'[RSG]K7_
%n2nM&_V=.jl0$\86<8c83Mo#(d`B@j\4*s3#kf]V:kjkA%AYZo*KTX8<^senIlg%Y=f28HWGDj'QM`(RcY.&@nRa2Un)-*cSY[?;
%=JQ@gD#G`:0p@KuLMPZ<K!_fOTbKKN8fL^Jc];>+^V8Z<h(.nR?:9PVP?R<HC2\_KC-ta$=XW41*?73Fh8%_kcuVtp!u+Vp\r]S1
%0sIf.g;a3G`S^2o))S@l=Y;bIZO(-1gC'%#+F*Lrr)OC;_0uZ$dq9&)b$BmMRlcYS*-+!(6DJQr2<odk6SSB//`I#!JhH,5m1f*b
%ML6nQA)1Yk8L:TOT)%qPOZNZW[BJWTN:15s(lOI,?:1L*V%iHW82bc3*k6:OXZ:#6O2u6.igC_m8GVm,rg3@j#.U)H.'KTrp4=FN
%3sOK<g2nKQ+W+n2T6\WpBZg!LdKZqP<MB^a'Uc*JP!kB$$;_UJF]aY\RmpiN$=+LYI+\lnJ%1l"Cp,qaM;<4KH32hmT`fS[44S;]
%5*0!f9JC)UON!?bEtS;V>!!_4NFV55W[I*tb@0XHXUr$77Zn0P5<W?5I!G(I$9>6%XJ<GKdU&5%@)\LsDW)807M"e?PGLf3(`+u#
%iDUI5QLr(7?DR/eE9Y'n#=ZdP@/6U+;HA.m3"#G.]iC`+,6Ch&nE&D.a\-%Z.*c/=W9N/F'on/@qQ4?iFl3$Vq-Jg'gjf.90)te8
%0.Mp8pkDd<_kj=j!htMQqX<N'hE9anFk1u2,J@qMHqI>n^g+6'Kh<%h0#mcCAgr3aNE;8P5c&D(XElrY\5W%BY\gfiVfN%";I+#t
%i%-Nt@\-=1?G3`o!(d)T4]X%.-Y8;m_d-U+&UMTH(Jaaa[&.UK-WQcD,JBCAA-VR*m$@_.d,PqGUfWm]>XXRlTrZL1\P%J_#NcV.
%<GMe6pAVj(mi&j^&u8IMW4dA&F7#]6X?>=h3\\T/m!0V0^2T7peaS=ERCPc4*Vr5S@^4iTp&ML,0q@Od4=f^8CX3_<ofiF;1Ri/&
%)$JJ:[]PiHmjS[$m8u\T)Gs-1&.,)<O.X9,0-DBV6Gf\4;&/H"(\%]H!@L#>@"^AG.:_<$a\?pm09OIUCFh3q;SW;Z3+>8?F6\cJ
%-ah'q-<+V=C]h]RnBHi'm(82bhG4GOj?,Q6Q&t"lC]X%j_4YX;DucG_g,raFE2F6EQBndZUH4VucLc?u-_S5P1+E90eUSHF;RL]8
%5RoQTE.P0L`WrDC;L@Kjq1:SXgIZ8_XF+ehH@>dM&jO=a,&+6und\<XC2Os*@'9CFh`#jd=>%J`2IL>8g@4cQ"=0a%UVF=HR:[)(
%9[\7`2rdGLM[8I_W),bd)DSd<O".f1P["NuF'G?)1+kWs5;?j!?`XJMA0T<(>#P(?*g.]M4OEK=DAHPOb0g*BJ]L&s4W[N)GTk)k
%Lk17uMsf3rG"nq9=L&ioRcQ6$!U`/2[REp$5Z_CqaI"SFYP9C!Kdij!KB4V1[4+[9:6U6FBa$2\2EWnI)Nj(&DFb7+Run,#mVcSI
%j:Z,p<jW!t=\$*#S^3g6->hS+2VTeMG3H_H(dSj%DU3S[S^Md#64g#7Fi@m>Clh$V/.+ZO][Dil2N<]TkRb??eZ`%EG65:fX#.HF
%1)F4k@id+T@f`J_M,UalEV,VX4<#Z%#Re%qgo;5AZsief+%dK)$d?>r?iWGq#=r&?4+M)g'>!%Q0=_5rZ'4"]&<O;O>]ad\;tC*a
%8*("3m+Qf2>s'-\-%Mcq3QO&Z75;%t9Q@HIp$_<b55s\(MOJ6NbDTMNf:Pi3OVlRL/`0Kmg^B2II!GfRQ-8$^Ou-D5._-417Vpg)
%7u>kA5UQ+(DT`9@Z"SNBm2b382E)2?n%2e8!JSXCHQ+@U-3%RR_B<_e%LHY:,M8<Pb$^Q\)A=7R^P1W9HQ*Z<L5Rm+*QBM8]o=O$
%S?.S6A//1kF1'qeZ4\!^[(HXm'W!2X]<bb3i^q'\%@1ei*!#r_V%P1qR/3:6E]u_UW9$!:bZP'eV`?6;)Zs^p'*ufbDU8Y4\j].i
%>dC5iFt<a+\WTdr%`_VF&3Q4="4T)b\70L0D^PorbU'`<Gt1dQ9Q"_PElcIF"ATPi:<&`sHC'3&kUR7o#Im0#/]X<6,+17`4Cnh\
%mgGeDl+fYe/qcn@X,>6#[8'J3ohT9b*=G5j[[o2r?,b9NIYRn2T5kqE7Dqf\p&MA>Q),lS7nP6FT:B^\'tFP%/T$uBPZ#e9^n"m>
%W>Lf`[ecWml-Mg@B^N7L[Us[<>gZ\,:N9B*ZjXJ;PWg0B*j9f<_hHj8L]*e;(?Ui74Lk)-7/M9@7X;HJB1C@T1mW.UHFu.VF@ZXY
%DZ_,'88JZBL%ZXgZPjK/+GRSR@Pe7oSR%3iWI2]j.$!W6]lN7"s%Mb's5!/Dp?tjArhC2=kFhiP.a0supS^eTp@oPX6U_Na<ecVT
%G,T"n<2D(F"Y`$e^)4s.@.X-p5RM($,-8cJS/C0n\bXa5;)cVNE^dB6eOpgRkL"OH'K0@:5c]5[<h@dm+hGW@PpRCV8TTa;WS?2%
%;/:USkSh&q(5<l4:"QZD8r>sL?naUS(*GPneu\`#01Fu01^MAg5fVbSK5b<,]Gu*E_!*IuNd'B80'!B7I%sMDCt'#QG:2'BZsB57
%4>N6(S[WpfTKC"Qp^@/S2PU\#7^cL9Oi-)IOI@):e&t)i?sUA8f^_=FJ^m39$X6^M]QBJ]q^"d%EqFp*]g%%h:A=1.pruAN^4rA#
%ZTO/NRK8.R(p6%2gth&)MHOlmC<R)*aNr]s:fc?ujj$7t96"sWRK7^9K,:GgANMpS!#]%WOjd=`$G;A$0,]A#+D<A(P"ocsW&r-l
%QEZGtUW7()VMk;fq&o<,6s3\UUC5D])m2)X_/dGj6a#CVE[H%q*-.u2pZCknROA5RY3Z6%M&Lp#h^=KO3mrqD!D:<K4@u.`#TQYP
%R,Vg,WDk/Y%W%CJB9OPAE4]n;#S)e,E`u_2Y"BD&;&8L`N@W7&^&U^QUf#:]ijo,h--npM*VYc5";=!VSSM/X)2jAF)-;\lCA"ji
%%^9a=dHWOD@c0t(@OpiU+f8\`@SP%S>mA"K0s>='X_WI1V:%ps`-?oZ\5>kD1'4ald(7/=[=iq>EO#U#hq"mV]OA/VJ.3S&Q@'sM
%V>7p^[RPeo@_F8l;A+koR@(XkUpq&pO0l3(?)P_oaPlV8/KB>6,es3;EKJSrfr)k@cQ7BM@GW2+?[8!FA;c'k#3?4N`\2cr??#/l
%3jdN/a[2($(MCJeCeQH3#`r>67Z(kcVmo+Eee60BQM3_'nMh>OWqsm[[$4l@\Bhi]Sf%@fNq^OS2t"E:@$[3G#_dGZ[`5FJ?iZk?
%EB"BZ7Kc$oX2[,d<"d35m>SN>S'B"<j3@Hcp7%9[:.MWHXq5bH24K7T('kH0,+M:T=#/`ORj=2;^,oPnl<'Uif.U_H"iK;M]4aAP
%YFq?c$pAjTZ$D[,37jPl0Mm>N11KB<[$rP(/Jb'm-_Fc<2D8IsqZbB6.!?N5n?YpR.Y=0]I(m$HR0<Ss1$&Bnh,+]R`S.\9n:k0l
%o%aB8$[\%i#ah)pV"'Gh<#A[Oar`VJ**m3-B1aiIS\X`:q%A5S5i>K-1ZB[(%^>WY4R&L=4I4qOJ"E$I41H<;nOu(S;Lk48!*?qg
%(VHLarO2cimD*AAn4k]`2)83<,Sb#FA>&u](HB<UN%c!-9U=/$BnWou\BSnaF-/El\?4VU(RY&;+g>`];sq[K56G`29q%&JlM<rN
%42kA/JJc#F^5\7]B/'*pk-=Y1!n+?>===<]\G?UYPGPVh>tlBC)#+DJ`(sa^XOcY/BsM4"Y>:A3RAWAJ0V>@WDDZ8s;S)\CX8i5A
%UI<rnYgO"7P]?dXT.sQ6CVKDJ_p,)Yi6,ed\(g`8k%SG"9fNAc`73`5:4&P`^kps=d%CU\c+a9'M2Fe6dj"[X$'qmk7q(cB%5]oP
%)\W64U+9DO;808Pi>$6d#fXC[-XoW1K689`@Rchp\0@!l,'sUU+EbqkjkViIOgf(=3PV/ZTl!:h/M5`Lg68]R6XoBl=Bd<8;WR05
%AX7>q;Aa(#6REbOKJ1f@8'i?gKCC2KW;YSrhH]Xn9qYH`LqMT]FB./"l%4.'08d]1(P*Ne<f+n)UMUOmhn^Yo0f@I"T3%i_#!^:R
%);,nT]IXTF'^:t4g$j/G#YuZ/rd&UiQ8Y'QINk):`mKNbirD,FCsW9"^RqE9C?!4aaHef3$VCg=N_Zp7L^aEkIP[eA&^3TVJBp#D
%$mMeY/=RO?F9M%,L5as/J]V4^G7Ti'-h;ZX]hjH74pZ6a6RuQEaH`[d'4g-4IJ3ph&NAp12D5p8'V48q\dDX=Fhl"M0YI,sai5^I
%J_h3*o;qH,OcJpn5"&8`l(R[+(gGB`c@"[a,``J@H)Itk6DlJ#6hZH.4n\juR,\X<@#`XUS8k$o$1L8-*f',qW+k^?\#-qfIPIZT
%8(IG4!isLmJi]EkDM['gT6ab5g@A.%:gF&:],@&Q:;6=JL]_HOhM=1;O`Q<'j]:2p?Q)C.MKFftVh'O94?JNU@`,T71!J=!$,p_X
%iQ(8)BgMV,2d\8$feifgNk74(a#)R\&V7%ncs&7;U_@qTo=>k0i/UX.I`h_1a+]h.9`]"1F:6Lkb[D$Vc:K*"<gGp)CMCe1U>=+q
%cOkemqFC>*QHrGjC=OmNpN*[_IA"e/3mqtu^hVKSRI4T8YVQm`mlaV`MmL`9k2?c:P*$Ls8hU2Rm8D.Kp<nM?l-UR@ha^&Bgp.9/
%Io1IS9f`8lZ\*Th.g[L,#d2p?b;,eT&Zg+g#TOo!_YTp]grnC9*m+[djfAWL%lk-OK5CBjm5cc#6OEmuj5'1:RgVJ/6h<6`ddt[;
%&'-XUrQ*i0\V*ljmphrj&XdHoNSO(glJ-TEGd,5'Q89:^kU:_n_7>U`1pUeZF%$,9DfJ?CnL--[F!.HB#@N?/1\[9u#kftso2uf[
%\bVO-84j2+BR-l`R8<P9JNS6C(`T:P.l@sH1r/'RcBBEBjt8]'%FS"r!]>CrS>c`o6R!?R?\C&r=4S9MAG(2[LSKr_Ak/_9MWY1A
%#3t=)Osnj<Ltj`i>E3,[pi2l?930N[C0DEI##DH4JTH/:]821I0Nn^3O!l*"KW6ZT:1gK/%O63mR'N605t9&Wk5akOi"*-Bi_+#P
%g**AO97<^H'pQXoVUhm$W&.OE^Y+b#o9]qO#$]beXN0YVk(@.0mK9=bGQl`?\Y7Nt2.TdNo7\T8!mj%"P)%*G.%ThW0rbuJL?P'C
%-jpPkSD9e==V.k^!*rJ/^BeQql]o'qm\Z:20&kPk&Lq4hD%-*m&Gc#"UJ2E;`T7)??Tg$eZ6npn0"O`.!aE"(-d]Ge&lE&ffZgJ:
%GUN<IgZa`d,#]T6dPlW,[V+')o'%BO@GYnXU,2lE]M3E9d\l.P@e,ofj#,__]'(#R[qYoKK,tGgH<qq^blDfK'3]rGfNI7I%;r=%
%`YUWTB$Y$=D%QB':b:SNZ)!BBFtEEMbq,]qW7"KiE7S:6B?\=GY6YU>*$rA1*TM#+C$L,B07dPK@nqR9nmZ]MiK.V5^`\QaF"s`c
%E1g?X_Ui"_J^L:1Y7GVJenP2(k*V2<*WeHF]NZn)I,#GAR\bHT0&[EcAaBe`eS[4LOIVNhXHaMO`'>.r6eT5XQH_NqeunjO0buR\
%inG]i)e4.YCSgg37CS$Ii0kYdfh`&tbk\bO,V.*m1juLN(0#dOb/pa_?D=HToQE\^0Ya*<rM7BMh3J0OPP-f^%!mr?o.II4X;4<,
%Pj%*ff7"VX;"fPFQ@cuar4$(G(1UPn_2e<&(K5/;(pX\N<@2jG`D*cr@mdJo^Z5t%8>C8gWg[^_EN\_jpP]V0-mPJUf%`Yd(;j]P
%[YIGj$US&4'RAm.(2qWgB0!ILEH:V(69S2UbbQ2_k5C42<NWoBQ+W/\1mC%8<)KmE%%>mdqu1U]R\3=V]cRN.Ibmp`Wu14"_AEIq
%7.k'V.mXJ!X;".2Cu]l8'BV2c'OmL_^H-#X_Mc?e3G8)b)/:B2RM[D/%ak\gA62[>LP)#g-%_<5_^a:!jR-:M+c*s/k%\jr9%&CM
%MFsa"p8?&^pcd,c,GH=JrQQqKH4VX!rohP,SX7fl&fH[#\.]:GJdT9h/eMKTD2lkJ6ci0JIm#?D/-[Sg##9P*X#L)ep+<meKm+I2
%hjt<,&dnd)*RpLS=6M%QMjLR@Y[B6F:a<'@rjp13<V+R>Oucr'T!uaHfd&I@ofGPWU@*8m3V++UkG#S%"YUNO[&Lo38qPP.%[n@@
%Ufs:?LU[]I+_Z`kG8,dFq2H;u.E7\Mr3<j!I)s%gaB0S47$HaH&m+=V/V^@M3r'ZeQA:H$."2be-J^amrn^ZXUE>VH'><Q';dVs]
%G2aWEZ9lE;[8bJYn@7C+n<nRWPfT&>9![uabOKX^b2YXV(^:`>q-eG25tZ;RXf([n0Qu_-kPYP7Q@8d(aG,IUbK\S<EW\:E4`:aW
%8a`;ua00I*QKEQ\P,$!:V`CAtT3r@#D'$0f49K.0Yf%rU0Wbf*KR--)4:[pJQT&f_'pBdi4E7MZO;o_@X;?.jCIXji:,1_8gu.fc
%@YP<:@hKi+&4tBj).1V\/s0sY,8(\WH(/1=R8uA?VtfmjW]K'[E"`9`QSe#okK>jq\TP9s`^&NUT)qmD'$3Gji_[_:)!1gd"Q1W5
%/:d:Ln+BiJ0T8Z$!^T,a`l'f"=JpP*87$Qj2k:AdG%9gm/JFZBRsp7IL8cJ/ds'>dcGnrMa#s"4.d*ng<r-A>6saQHO]3'l0,,T!
%.B0gH[An;?Pa(6=Xq_n0"`"YPoA=rm69bGL/k&H/2ZLJ1a,:T#GJF*Smsjr0?iTWU9#TnkT2*W-4o\*G^A&2:nH5!:DP9+<+^b/5
%8,P`YpP-$K7a5%N&.[U]#S1fA6[7e"W8_1Sp%7:=gSI^Gqt6lelb`'p]0rgX(OsD^IK.^^HuTVNJ,@jta*3%)h%/EAfk3G8VtC?(
%0FY9P!so$s\1dj9FagpI^Ae)js2LZqIIRE2*I$uj=1EdaH):O7,2qP<qo.H!Du5lf48m?<]DOU[^A.00m4\J<\ul#)mOc9I_ERqd
%/Nl55bHZ;F\F?n+?d"%,GU0n7s6ua]>Q.F0kl'/#MfRP*2.sY+>HS4FrnHT.hfSh1rA$7e$P"UKq]?:GZ.ID>IK#jZKD.aZrV[Vf
%=>7JXT4?M2Y;,O_71ng>8c2MiqJtrGCIqc"rEBuJlMg:IQ>6Fk(VLpfEm^59f/is1$*P4]+B1K"#oA(Op@Ujm-Ecb$`F&7[UE<_V
%I!aM;5NT1(a8Rm@>WM#N=i\@'4o[1=?09!Y3&)QA02irR%`e5@mepAupE0F_rq&GTRns(W^[Q/HD>rsas(FCc]I*[#?[_aNYJ0f2
%bMR],(&:qGqskiCqXimYhgY=;QToljgZs?;qUP=IrU,I0^AmJ%lbE<e+?1fFpih5^h;<VQf73Vhf>%@A&)Vk^*V\1;'gDTN+27UN
%S)8U?rPYU@IJ(LUYQ"E#J*Vkr43$/`C\)]$qQ[s;r4B/Iqu/7`\Lr(H3BfFn0E/jrs2F`ac[BqQ9L&)P5Q&uK^\cRU?iKcNs7FXn
%gu%*/J*_]h^\W_h^+LN-bb+gTs72f]f0B80rs,k/o%j~>
%AI9_PrivateDataEnd
